<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="60:SenseAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403b6294"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403b1dd0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403b1dd0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40465310"/></to>
    </wire>
    <wire loc="61:SenseAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40423ab0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4045809c"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4045809c"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40557650"/></to>
    </wire>
    <wire loc="62:SenseAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40427d40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40561ab4"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40561ab4"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4056a5ec"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:SenseAppC.nc">
      <from><interface-ref name="X_Axis" scoped="" ref="0x4042c370"/></from>
      <to><interface-ref name="X_Axis" scoped="" ref="0x40656a8c"/></to>
    </wire>
    <wire loc="7:SensorAccC.nc">
      <from><interface-ref name="X_Axis" scoped="" ref="0x40656a8c"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x41392854"/></to>
    </wire>
    <wire loc="64:SenseAppC.nc">
      <from><interface-ref name="Light" scoped="" ref="0x4042e010"/></from>
      <to><interface-ref name="VisibleLight" scoped="" ref="0x40660700"/></to>
    </wire>
    <wire loc="7:SensorLightC.nc">
      <from><interface-ref name="VisibleLight" scoped="" ref="0x40660700"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4138e808"/></to>
    </wire>
    <wire loc="72:SenseAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x403bc6f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406ad010"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x406ad010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406c57c4"/></to>
    </wire>
    <wire loc="73:SenseAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x403bcda0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40ee40dc"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40ee40dc"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40f18c94"/></to>
    </wire>
    <wire loc="74:SenseAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x403ba488"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4067da38"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4067da38"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4069ba9c"/></to>
    </wire>
    <wire loc="76:SenseAppC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x404011ec"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ebb9d4"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40ebb9d4"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41669c68"/></to>
    </wire>
    <wire loc="77:SenseAppC.nc">
      <from><interface-ref name="CollReceive" scoped="" ref="0x403fe28c"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4067bb14"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:SenseAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40403394"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x4068e2d8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x4068e2d8"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x406a2618"/></to>
    </wire>
    <wire loc="84:SenseAppC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x40409818"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x410d9b08"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x410d9b08"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x416ae0c4"/></to>
    </wire>
    <wire loc="85:SenseAppC.nc">
      <from><interface-ref name="SerialReceive" scoped="" ref="0x403bb010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ee3300"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:SenseAppC.nc">
      <from><interface-ref name="UARTMessagePool" scoped="" ref="0x4041260c"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41104b68"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x41104b68"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x416dc570"/></to>
    </wire>
    <wire loc="87:SenseAppC.nc">
      <from><interface-ref name="UARTQueue" scoped="" ref="0x4040e564"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x41101dc4"/></to>
    </wire>
    <wire loc="92:SenseAppC.nc">
      <from><interface-ref name="DisseminationControl" scoped="" ref="0x40414af8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x410f899c"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/lib/net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x410f899c"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x410f74f0"/></to>
    </wire>
    <wire loc="93:SenseAppC.nc">
      <from><interface-ref name="Value" scoped="" ref="0x404185f4"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x4112c65c"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x4112c65c"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x416f3010"/></to>
    </wire>
    <wire loc="94:SenseAppC.nc">
      <from><interface-ref name="Update" scoped="" ref="0x4041f4dc"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x411ab400"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x411ab400"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x416f3d88"/></to>
    </wire>
    <wire loc="55:SenseC.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x4042d010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x417380e4"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x416dc1ec"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x41021010"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x41020a10"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40fec2fc"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f1891c"/></to>
    </wire>
    <wire loc="46:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x415c131c"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x415818bc"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4158a514"/></to>
    </wire>
    <wire loc="96:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x414e5010"/></to>
    </wire>
    <wire loc="119:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40a21628"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4097c010"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x41476948"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408e98d0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x414913e8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x414189e0"/></to>
    </wire>
    <wire loc="150:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e7d228"/></to>
    </wire>
    <wire loc="175:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cd7070"/></to>
    </wire>
    <wire loc="226:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d4d254"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40568cc8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40465688"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403254f8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x403254f8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4038f860"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40465c24"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40ac9ae4"/></to>
    </wire>
    <wire loc="122:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40465c24"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40a21010"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40465c24"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4045aadc"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4045aadc"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4045dc68"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40544030"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></to>
    </wire>
    <wire loc="26:/opt/tinyos/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4045f990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410b3010"/></to>
    </wire>
    <wire loc="26:/opt/tinyos/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4045f990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ba7ba0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x4045f260"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40539240"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40468468"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4053ae90"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40468084"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40563d20"/></to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40468084"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404572fc"/></to>
    </wire>
    <wire loc="46:/opt/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404572fc"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x4046e1c0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x404576ac"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x4045f990"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x4046a5d4"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x40471654"/></to>
    </wire>
    <wire loc="141:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x40471654"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404b7324"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4046c010"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x404576ac"/></to>
    </wire>
    <wire loc="191:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x40490208"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40508d30"/></to>
    </wire>
    <wire loc="165:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x4047bacc"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404d1324"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404d1324"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4127c710"/></to>
    </wire>
    <wire loc="176:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x4048c010"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404d6930"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404d6930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412ca21c"/></to>
    </wire>
    <wire loc="185:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x40487030"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404dcd20"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404dcd20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412d70f4"/></to>
    </wire>
    <wire loc="196:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x4048d654"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40516d30"/></to>
    </wire>
    <wire loc="143:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x404709ec"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404c25b8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404c25b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411c799c"/></to>
    </wire>
    <wire loc="183:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x40489bc4"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404dda14"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404dda14"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412dbe8c"/></to>
    </wire>
    <wire loc="146:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x4046fd7c"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404be0f4"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404be0f4"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41222030"/></to>
    </wire>
    <wire loc="157:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x4047f2e4"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404cd7b0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404cd7b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4122b010"/></to>
    </wire>
    <wire loc="168:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x4048584c"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404d0ed8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404d0ed8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4127721c"/></to>
    </wire>
    <wire loc="179:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x4048bd7c"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404e15b8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404e15b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412c5e8c"/></to>
    </wire>
    <wire loc="138:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x4047380c"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404ba694"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404ba694"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411cfaec"/></to>
    </wire>
    <wire loc="149:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x40479bc4"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404bdd20"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404bdd20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4121eaec"/></to>
    </wire>
    <wire loc="160:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x4047d11c"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404cb400"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404cb400"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41269aec"/></to>
    </wire>
    <wire loc="171:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x40483730"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404dba8c"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404dba8c"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41273e8c"/></to>
    </wire>
    <wire loc="188:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x40492d7c"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404e8930"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404e8930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412d3b8c"/></to>
    </wire>
    <wire loc="194:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x4048e208"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4051a010"/></to>
    </wire>
    <wire loc="174:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x40482ad8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404d7694"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404d7694"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412cd010"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404b7324"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411ca76c"/></to>
    </wire>
    <wire loc="152:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40477a7c"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404c7930"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404c7930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4121976c"/></to>
    </wire>
    <wire loc="192:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x40490dc4"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4051239c"/></to>
    </wire>
    <wire loc="155:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x40475e58"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404ce528"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404ce528"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41232e38"/></to>
    </wire>
    <wire loc="166:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x4048649c"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404d1c44"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404d1c44"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4127a010"/></to>
    </wire>
    <wire loc="177:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x4048c9cc"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404d5324"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404d5324"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412c8aec"/></to>
    </wire>
    <wire loc="186:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x404879ec"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404e9694"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404e9694"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412d699c"/></to>
    </wire>
    <wire loc="144:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x4046f3c0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404c2ed8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404c2ed8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411c52bc"/></to>
    </wire>
    <wire loc="147:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x4047a80c"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404bea14"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404bea14"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412218d8"/></to>
    </wire>
    <wire loc="158:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x4047fca0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404cc16c"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404cc16c"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4122a8b8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x404842e4"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404cf818"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404cf818"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41276aec"/></to>
    </wire>
    <wire loc="180:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x4048a80c"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404e1ed8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404e1ed8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412c376c"/></to>
    </wire>
    <wire loc="139:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x40472208"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404b9010"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404b9010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411cd514"/></to>
    </wire>
    <wire loc="150:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x40478654"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404c8694"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404c8694"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4121c514"/></to>
    </wire>
    <wire loc="161:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x4047dad8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404cbd20"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404cbd20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41267514"/></to>
    </wire>
    <wire loc="189:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x4049180c"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404e7324"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404e7324"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41316514"/></to>
    </wire>
    <wire loc="164:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x4047b010"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404d2954"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404d2954"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41281e38"/></to>
    </wire>
    <wire loc="175:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x40481578"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404d6010"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404d6010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412cc8b8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x40488654"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404dc400"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404dc400"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412d976c"/></to>
    </wire>
    <wire loc="195:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x4048ebc4"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40518694"/></to>
    </wire>
    <wire loc="142:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x40470030"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404b7c44"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404b7c44"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411c80f4"/></to>
    </wire>
    <wire loc="153:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x4047549c"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404c6324"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404c6324"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412170f4"/></to>
    </wire>
    <wire loc="182:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x40489208"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404dd0f4"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404dd0f4"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412dc594"/></to>
    </wire>
    <wire loc="156:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x4048084c"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404cee48"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x404cee48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4122d710"/></to>
    </wire>
    <wire loc="167:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x40486e58"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404d05b8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404d05b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412798b8"/></to>
    </wire>
    <wire loc="178:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x4048b3c0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404d5c44"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404d5c44"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412c6514"/></to>
    </wire>
    <wire loc="187:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404923c0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404e8010"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404e8010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412d42bc"/></to>
    </wire>
    <wire loc="137:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x40474d78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404bbd44"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404bbd44"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411d021c"/></to>
    </wire>
    <wire loc="148:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x40479208"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404bd400"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x404bd400"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4121f21c"/></to>
    </wire>
    <wire loc="159:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x4047e730"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404cca8c"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x404cca8c"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4126a21c"/></to>
    </wire>
    <wire loc="170:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x40484ca0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404db16c"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x404db16c"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41274514"/></to>
    </wire>
    <wire loc="193:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x4048f80c"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x405109ac"/></to>
    </wire>
    <wire loc="173:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x4048211c"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404d8cb4"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x404d8cb4"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x412cf690"/></to>
    </wire>
    <wire loc="162:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x4047c578"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404ca694"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x404ca694"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41266e8c"/></to>
    </wire>
    <wire loc="140:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x40472bc4"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404b9930"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x404b9930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411cce8c"/></to>
    </wire>
    <wire loc="151:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x404770c0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404c7010"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x404c7010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4121be8c"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038e0fc"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x4038ecd8"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403a0010"/></to>
    </wire>
    <wire loc="92:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403a1288"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x405dc9cc"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40563d20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40557328"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40556310"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40564030"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40564030"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x40472208"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40556cb8"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x405649f8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x405649f8"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x4047380c"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4055571c"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x405633d4"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x405633d4"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x40474d78"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x4056a5ec"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40574458"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40574458"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40630c50"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40568cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405708e4"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x4057e304"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4064d010"/></to>
    </wire>
    <wire loc="35:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405708e4"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40580c80"/></to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40652e48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406130e8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40622344"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x4057c010"/></to>
    </wire>
    <wire loc="36:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x4057c010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x406060b4"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4064d934"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40583be4"/></to>
    </wire>
    <wire loc="37:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40583be4"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406059e4"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406059e4"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41382d88"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40580c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41383030"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x406060b4"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4138343c"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41381e9c"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405cc848"/></to>
    </wire>
    <wire loc="94:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x405cc848"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405d039c"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x4137eee0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x405d79a8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x405d79a8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x405de500"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4137d8a0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405d64e0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x405d64e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405dd010"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x4137a234"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x405d4f28"/></to>
    </wire>
    <wire loc="97:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x405d4f28"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x405dce10"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x40620ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x4064ff14"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos/tos/system/ConstantSensorC.nc">
      <from><interface-ref name="senseResult" scoped="" ref="0x41391380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos/tos/system/ConstantSensorC.nc">
      <from><interface-ref name="senseResult" scoped="" ref="0x4138d348"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x406a2618"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40e7f420"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x406783a8"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x406922cc"/></to>
    </wire>
    <wire loc="121:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x406922cc"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x40cd4010"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x40677ce4"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x4069386c"/></to>
    </wire>
    <wire loc="118:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x4069386c"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x40cd565c"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40686c10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40693ba8"/></to>
    </wire>
    <wire loc="119:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40693ba8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40cd5968"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x4067a204"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40693204"/></to>
    </wire>
    <wire loc="117:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40693204"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40cd52c0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4067b150"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x406941b0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x406941b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40cd77d4"/></to>
    </wire>
    <wire loc="81:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x406895bc"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x406a5aac"/></to>
    </wire>
    <wire loc="165:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x406a5aac"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x40e7f8d4"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4067bb14"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40694b74"/></to>
    </wire>
    <wire loc="116:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40694b74"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40cd7ee0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x40684e54"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x406a21d0"/></to>
    </wire>
    <wire loc="123:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x406a21d0"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40cd36f4"/></to>
    </wire>
    <wire loc="79:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x4068f3f4"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40692a70"/></to>
    </wire>
    <wire loc="122:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x40692a70"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40cd4758"/></to>
    </wire>
    <wire loc="115:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4069ba9c"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40cd736c"/></to>
    </wire>
    <wire loc="147:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4069ba9c"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40e7e4bc"/></to>
    </wire>
    <wire loc="148:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4069ba9c"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d50a1c"/></to>
    </wire>
    <wire loc="85:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x406a2e70"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x406882f4"/></to>
    </wire>
    <wire loc="86:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x406a12a8"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x40696d14"/></to>
    </wire>
    <wire loc="190:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x4069e7f4"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x40d4e8e0"/></to>
    </wire>
    <wire loc="120:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x40cf276c"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x406a2e70"/></to>
    </wire>
    <wire loc="127:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0x40cf998c"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40d02a1c"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x40d02a1c"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41581c40"/></to>
    </wire>
    <wire loc="128:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x40cf7e50"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40ce97c4"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x40ce97c4"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x4158a898"/></to>
    </wire>
    <wire loc="131:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x40ccef08"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x40cfe508"/></to>
    </wire>
    <wire loc="134:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0x40cf42ec"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x40d1a288"/></to>
    </wire>
    <wire loc="44:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="Cache" scoped="" ref="0x40d1a288"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x415c16bc"/></to>
    </wire>
    <wire loc="139:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x40cd0870"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x40d4e8e0"/></to>
    </wire>
    <wire loc="151:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x40e7d574"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d50e80"/></to>
    </wire>
    <wire loc="152:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x40e7dc00"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d4e560"/></to>
    </wire>
    <wire loc="153:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x40e7defc"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x40d4e8e0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0x40ea8b90"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0x40d4c010"/></to>
    </wire>
    <wire loc="157:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40eb0814"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b4d80"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x406b4d80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406d3eec"/></to>
    </wire>
    <wire loc="158:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40eaf400"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406ad010"/></to>
    </wire>
    <wire loc="159:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x40eafa38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d2ec54"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d2ec54"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4056a5ec"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0x40eacb68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d2b838"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d2b838"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4056a5ec"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x40ea814c"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x406a12a8"/></to>
    </wire>
    <wire loc="162:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x40cf06dc"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x406a12a8"/></to>
    </wire>
    <wire loc="163:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x40cf3628"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x40e7f8d4"/></to>
    </wire>
    <wire loc="164:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x40ea87b8"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40cd36f4"/></to>
    </wire>
    <wire loc="169:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0x40cd2784"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ea2010"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ea2010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4056a5ec"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40eaac94"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40980380"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40980380"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4097cd60"/></to>
    </wire>
    <wire loc="173:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40cf0304"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40980380"/></to>
    </wire>
    <wire loc="176:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40cd3b1c"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40d5490c"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40d5490c"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x415adc04"/></to>
    </wire>
    <wire loc="177:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40cf3010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40de787c"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40de787c"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406ac22c"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x40cf332c"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e13ed8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40e13ed8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x406ac884"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40cce7d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40da0010"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40da0010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x415a9304"/></to>
    </wire>
    <wire loc="180:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40cf2228"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40e7f420"/></to>
    </wire>
    <wire loc="181:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x40cce228"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x40e80e6c"/></to>
    </wire>
    <wire loc="182:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40cf0d68"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406ad010"/></to>
    </wire>
    <wire loc="183:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cd2228"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40de9248"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40de9248"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x415a85b8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40cf2b78"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40da067c"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40da067c"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x415a9970"/></to>
    </wire>
    <wire loc="185:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40cf1750"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4045809c"/></to>
    </wire>
    <wire loc="192:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40d49700"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40980380"/></to>
    </wire>
    <wire loc="194:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40d4c38c"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40e9c0f4"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40e9c0f4"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4162dd04"/></to>
    </wire>
    <wire loc="195:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40d49010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e9aefc"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40e9aefc"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406ac22c"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40d4b80c"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40e9c760"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40e9c760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x416293e0"/></to>
    </wire>
    <wire loc="197:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x40d4cadc"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40e9cdcc"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e9cdcc"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41629a4c"/></to>
    </wire>
    <wire loc="221:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40d493c4"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x406db968"/></to>
    </wire>
    <wire loc="100:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x406db968"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x406fe970"/></to>
    </wire>
    <wire loc="79:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x406c57c4"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406edd64"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x406ab0fc"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x406d4734"/></to>
    </wire>
    <wire loc="84:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x406d4734"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x406e9ca0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x406ab438"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406d382c"/></to>
    </wire>
    <wire loc="89:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x406d382c"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x406e7b24"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x406ad8a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x406d60fc"/></to>
    </wire>
    <wire loc="81:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x406d60fc"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x406ea60c"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x406ac884"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x406d40fc"/></to>
    </wire>
    <wire loc="83:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x406d40fc"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x406e9668"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x406bda10"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x406d110c"/></to>
    </wire>
    <wire loc="93:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x406d110c"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x406e4dc4"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x406ac22c"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406d6a70"/></to>
    </wire>
    <wire loc="82:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x406d6a70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406e9010"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406c2ef0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406d2b88"/></to>
    </wire>
    <wire loc="92:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406d2b88"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406e4864"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x406cc0ec"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x406d1704"/></to>
    </wire>
    <wire loc="94:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x406d1704"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x406f5448"/></to>
    </wire>
    <wire loc="90:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x406d3eec"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406e8d70"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x406cda50"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x406d1dec"/></to>
    </wire>
    <wire loc="95:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x406d1dec"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x406f5b30"/></to>
    </wire>
    <wire loc="81:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x406be208"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406dd970"/></to>
    </wire>
    <wire loc="104:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406dd970"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406fc970"/></to>
    </wire>
    <wire loc="80:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406c7ad4"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406da250"/></to>
    </wire>
    <wire loc="103:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406da250"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406fa3b8"/></to>
    </wire>
    <wire loc="215:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x406edd64"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4091b5b4"/></to>
    </wire>
    <wire loc="99:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x406ce9f8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x406ff7f0"/></to>
    </wire>
    <wire loc="305:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x406ff7f0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40a117c4"/></to>
    </wire>
    <wire loc="270:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406fa3b8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409c1a74"/></to>
    </wire>
    <wire loc="124:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x406e9ca0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x407e3934"/></to>
    </wire>
    <wire loc="126:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x406e7b24"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x407e4304"/></to>
    </wire>
    <wire loc="121:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x406ea60c"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x407e4a00"/></to>
    </wire>
    <wire loc="123:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x406e9668"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x407e3598"/></to>
    </wire>
    <wire loc="98:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x406cf6c4"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40701560"/></to>
    </wire>
    <wire loc="303:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40701560"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a12524"/></to>
    </wire>
    <wire loc="216:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x406e4dc4"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4090fa94"/></to>
    </wire>
    <wire loc="122:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x406e9010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x407e31dc"/></to>
    </wire>
    <wire loc="269:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406fc970"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409f51c0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x406dbe38"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x406fee40"/></to>
    </wire>
    <wire loc="307:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x406fee40"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a2d4e0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x406e03c8"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x4070226c"/></to>
    </wire>
    <wire loc="304:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x4070226c"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a0edb4"/></to>
    </wire>
    <wire loc="248:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406e4864"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40992df4"/></to>
    </wire>
    <wire loc="86:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x406d4df8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x406e8380"/></to>
    </wire>
    <wire loc="128:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x406e8380"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x407e3cf0"/></to>
    </wire>
    <wire loc="187:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x406f5448"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40909938"/></to>
    </wire>
    <wire loc="125:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x406e8d70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x407e572c"/></to>
    </wire>
    <wire loc="224:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x406f5b30"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x409677e0"/></to>
    </wire>
    <wire loc="306:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x406fe970"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a2d010"/></to>
    </wire>
    <wire loc="87:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x406d34f0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x406e8a20"/></to>
    </wire>
    <wire loc="129:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x406e8a20"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x407e20c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4091b5b4"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x4090e090"/></to>
    </wire>
    <wire loc="88:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40a117c4"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40a1ec98"/></to>
    </wire>
    <wire loc="160:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x406f6eb0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40835998"/></to>
    </wire>
    <wire loc="148:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x406f25ec"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40806960"/></to>
    </wire>
    <wire loc="98:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40806960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41416c88"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x407e3934"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x413fb598"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x407e4a00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x413fc70c"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x407e3598"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x413fb1fc"/></to>
    </wire>
    <wire loc="161:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40703584"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x408d24e0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x408d24e0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x41426328"/></to>
    </wire>
    <wire loc="162:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x406e4118"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4083696c"/></to>
    </wire>
    <wire loc="85:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a12524"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a1f978"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4090fa94"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4147a1e4"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x407e4304"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x413fc010"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407e31dc"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x413fce18"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409f51c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x414c33a8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a2d4e0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40acb750"/></to>
    </wire>
    <wire loc="94:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a0edb4"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a3b2ec"/></to>
    </wire>
    <wire loc="158:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x406f631c"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40835010"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x407e3cf0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x413fb954"/></to>
    </wire>
    <wire loc="117:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40909938"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x40901c4c"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x409677e0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x41475468"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x407e572c"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x413fd3e0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409c1a74"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x414c8cd4"/></to>
    </wire>
    <wire loc="159:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x406f6a80"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x4083569c"/></to>
    </wire>
    <wire loc="96:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a2d010"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a3a480"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x407e20c0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x413fbd10"/></to>
    </wire>
    <wire loc="102:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40725c24"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4087aa6c"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4087aa6c"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4142d8bc"/></to>
    </wire>
    <wire loc="103:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40736110"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40770010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40732b00"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409f51c0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x4073217c"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a13b18"/></to>
    </wire>
    <wire loc="79:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a13b18"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a1f010"/></to>
    </wire>
    <wire loc="110:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40770888"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a2dec8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a2dec8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40aa9d30"/></to>
    </wire>
    <wire loc="116:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x407e13ac"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x4071f8b4"/></to>
    </wire>
    <wire loc="117:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407e2b84"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x407f79d0"/></to>
    </wire>
    <wire loc="118:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x407e1090"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x408489b0"/></to>
    </wire>
    <wire loc="119:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x407e241c"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x40848ccc"/></to>
    </wire>
    <wire loc="137:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x407f63ac"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40806960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407f7ed4"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x408484dc"/></to>
    </wire>
    <wire loc="153:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40835cc4"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4087aa6c"/></to>
    </wire>
    <wire loc="154:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4084eedc"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x4084950c"/></to>
    </wire>
    <wire loc="155:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4084d3cc"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x408499e0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4084e774"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40849cfc"/></to>
    </wire>
    <wire loc="169:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4087e50c"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408cfac0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408cfac0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41449a94"/></to>
    </wire>
    <wire loc="170:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4087e9e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4090963c"/></to>
    </wire>
    <wire loc="114:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4090963c"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40902c7c"/></to>
    </wire>
    <wire loc="171:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4087ecfc"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x408d2ebc"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x408d2ebc"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x41426d04"/></to>
    </wire>
    <wire loc="176:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x408d1690"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40902010"/></to>
    </wire>
    <wire loc="115:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40902010"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40901010"/></to>
    </wire>
    <wire loc="181:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408ced04"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x407156d4"/></to>
    </wire>
    <wire loc="182:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408ce438"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40909168"/></to>
    </wire>
    <wire loc="113:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40909168"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409027a8"/></to>
    </wire>
    <wire loc="191:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40901758"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40992df4"/></to>
    </wire>
    <wire loc="193:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409027a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4091bb64"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4091bb64"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4090e640"/></to>
    </wire>
    <wire loc="194:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40902c7c"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4090f050"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4090f050"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4090eb14"/></to>
    </wire>
    <wire loc="195:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40901010"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x4090f34c"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4090f34c"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x4090ee30"/></to>
    </wire>
    <wire loc="211:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x4090e090"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40927a1c"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40927a1c"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41476398"/></to>
    </wire>
    <wire loc="212:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4090e640"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40967010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40967010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41476c64"/></to>
    </wire>
    <wire loc="213:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4090eb14"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409674e4"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x409674e4"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4147516c"/></to>
    </wire>
    <wire loc="214:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4090ee30"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409f3778"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409f3778"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x414c292c"/></to>
    </wire>
    <wire loc="221:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409664bc"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40963614"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40963614"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x414a36dc"/></to>
    </wire>
    <wire loc="222:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40966970"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408ce010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408ce010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x41491010"/></to>
    </wire>
    <wire loc="223:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40967cc4"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409fc524"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x409fc524"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40a1a1ac"/></to>
    </wire>
    <wire loc="228:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408ce90c"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40963ac8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40963ac8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x414a3b90"/></to>
    </wire>
    <wire loc="237:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4097de4c"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x407102e8"/></to>
    </wire>
    <wire loc="238:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40963ef0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40992568"/></to>
    </wire>
    <wire loc="239:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4097d3e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40992a1c"/></to>
    </wire>
    <wire loc="240:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4097d7c0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40770010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x409b8c44"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409ee244"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40991c00"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40770010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409b8324"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40709040"/></to>
    </wire>
    <wire loc="253:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40991354"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409a9e0c"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409a9e0c"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409c6b34"/></to>
    </wire>
    <wire loc="254:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40991828"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409c8304"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409c8304"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409c5030"/></to>
    </wire>
    <wire loc="259:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409c4010"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x4071880c"/></to>
    </wire>
    <wire loc="260:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409c6b34"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409fcc6c"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409fcc6c"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40a1a994"/></to>
    </wire>
    <wire loc="261:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409c5030"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409fb14c"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409fb14c"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40a1ae68"/></to>
    </wire>
    <wire loc="262:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x409c5428"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40a136d0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40a136d0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40a20b04"/></to>
    </wire>
    <wire loc="267:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x409f2010"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a2d4e0"/></to>
    </wire>
    <wire loc="268:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409f2824"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409ee7e4"/></to>
    </wire>
    <wire loc="271:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x409f1010"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409ee244"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409ed010"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a13b18"/></to>
    </wire>
    <wire loc="286:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a19de8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x4071880c"/></to>
    </wire>
    <wire loc="287:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a1a994"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40a16cf4"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40a16cf4"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40a201a8"/></to>
    </wire>
    <wire loc="288:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40a1ae68"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40a132a4"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40a132a4"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40a206d8"/></to>
    </wire>
    <wire loc="289:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40a1a1ac"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40a16550"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40a16550"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40a2198c"/></to>
    </wire>
    <wire loc="301:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a2a8e8"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x4070a010"/></to>
    </wire>
    <wire loc="302:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a2929c"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409f51c0"/></to>
    </wire>
    <wire loc="309:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a28964"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409ee244"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40a26010"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409ee244"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a266a4"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x409ee244"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40a26c9c"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40770010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40770010"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x413b9674"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x413b9e30"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40770888"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x413b6698"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4078bd98"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x413f98b4"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x407d7524"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x413fa090"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x407e241c"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x413fa7f8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x407e2b84"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x413faccc"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x407e1090"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x413f9010"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x407e13ac"/></to>
    </wire>
    <wire loc="99:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40838080"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41415470"/></to>
    </wire>
    <wire loc="100:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40838468"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41415858"/></to>
    </wire>
    <wire loc="101:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41415cf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x408388f0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x4141416c"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41418cfc"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x4141473c"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x414254ec"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x407d7524"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x41425a9c"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x408d1690"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x4148f5a0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x408edc90"/></to>
    </wire>
    <wire loc="44:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x408edc90"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x408e9c48"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4148fc0c"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4148ef24"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4148ef24"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408e6670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x41491734"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408ce438"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x41491c08"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408ce90c"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x4148f010"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x408ced04"/></to>
    </wire>
    <wire loc="118:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x40900344"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40901758"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x4147594c"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40967cc4"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x4147414c"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4078bd98"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x414746dc"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409664bc"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x41474b90"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40966970"/></to>
    </wire>
    <wire loc="189:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x41473428"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x41473840"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x41473010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x414a1010"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40963ef0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x414a0334"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4097de4c"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x414a14e4"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4097d3e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x414a18bc"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4097d7c0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x414a1f28"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40980380"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x414a0904"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x4097eaec"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x4097c500"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4098394c"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4097c010"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x409b3968"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x409c7594"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409c86dc"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x409c5428"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x409a96c4"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x409c634c"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409c8ab4"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x409c5820"/></to>
    </wire>
    <wire loc="80:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x409c7248"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409c4010"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x409a93c8"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x409c6030"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x409b3ef8"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x409c7b44"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x414bf8cc"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x409f2824"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x414c07d4"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x409f2010"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x414bf0b8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x409f9ad4"/></to>
    </wire>
    <wire loc="26:/opt/tinyos/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x409f9ad4"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4057e304"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x414c019c"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x409f1010"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x409fd7ac"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40a1b3dc"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409fb524"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40a19288"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409fb8fc"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40a19680"/></to>
    </wire>
    <wire loc="80:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40a1b090"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40a19de8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x409fc228"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40a1be60"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x409fdd3c"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40a1b98c"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40aa9d30"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40bafc98"/></to>
    </wire>
    <wire loc="91:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a0fac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a3d010"/></to>
    </wire>
    <wire loc="81:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40acb750"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40bd03dc"/></to>
    </wire>
    <wire loc="83:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a2f370"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40a2a8e8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a2fb10"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a28964"/></to>
    </wire>
    <wire loc="89:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40a2e228"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x40a26010"/></to>
    </wire>
    <wire loc="92:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a2e8bc"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a266a4"/></to>
    </wire>
    <wire loc="95:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a4f0ac"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a2929c"/></to>
    </wire>
    <wire loc="98:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40a33a50"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40acb750"/></to>
    </wire>
    <wire loc="101:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40a4edb8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40a26c9c"/></to>
    </wire>
    <wire loc="103:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40a3a874"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x40aafa84"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40aafa84"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4046fd7c"/></to>
    </wire>
    <wire loc="104:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a3930c"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x40aab4c4"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40aab4c4"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ad4b10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40a347dc"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40aabba0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40aabba0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40ada010"/></to>
    </wire>
    <wire loc="107:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40a34e28"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x40aaa208"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40aaa208"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x4047549c"/></to>
    </wire>
    <wire loc="108:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40a387f8"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40aaabb0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40aaabb0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x404709ec"/></to>
    </wire>
    <wire loc="110:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40a317d8"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40aa9574"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40aa9574"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40ac948c"/></to>
    </wire>
    <wire loc="111:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40a4e7c0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4078bd98"/></to>
    </wire>
    <wire loc="112:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40a33010"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40bf6188"/></to>
    </wire>
    <wire loc="847:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x40a89bbc"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40bafc98"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4151e7bc"/></to>
    </wire>
    <wire loc="95:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40ada010"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40ad237c"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40bd03dc"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40bfc8d8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x40ac4b0c"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x40484ca0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x40ac0580"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x4048584c"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40ac2e98"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40b4085c"/></to>
    </wire>
    <wire loc="91:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40b4085c"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40b57cb0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40ad4404"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40ad2968"/></to>
    </wire>
    <wire loc="94:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40adbc00"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40ad2010"/></to>
    </wire>
    <wire loc="92:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40adb010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ad9c2c"/></to>
    </wire>
    <wire loc="97:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40ad4b10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ad10fc"/></to>
    </wire>
    <wire loc="99:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40acf7ac"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b4a530"/></to>
    </wire>
    <wire loc="98:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40b4a530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x414e425c"/></to>
    </wire>
    <wire loc="100:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40acfe88"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40b49040"/></to>
    </wire>
    <wire loc="100:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40b49040"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x414e4d50"/></to>
    </wire>
    <wire loc="101:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40ae6b54"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40b072e0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40b072e0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40b05560"/></to>
    </wire>
    <wire loc="102:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40ae5308"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403a0c44"/></to>
    </wire>
    <wire loc="296:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40af92e4"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40b238f8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403a0c44"/></to>
    </wire>
    <wire loc="86:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40b27210"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4046fd7c"/></to>
    </wire>
    <wire loc="87:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40b27bac"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x4047a80c"/></to>
    </wire>
    <wire loc="88:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40b2656c"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x40479208"/></to>
    </wire>
    <wire loc="89:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40b26f14"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x40479bc4"/></to>
    </wire>
    <wire loc="99:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40b4ac3c"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x414e4968"/></to>
    </wire>
    <wire loc="101:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x414e320c"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40b494c8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x414e3614"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x414e532c"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x414e3be4"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40b61aec"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40b57010"/></to>
    </wire>
    <wire loc="89:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b464f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b5dd18"/></to>
    </wire>
    <wire loc="93:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b60940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40b55a30"/></to>
    </wire>
    <wire loc="94:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b60940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40b52510"/></to>
    </wire>
    <wire loc="95:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b60940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40b76010"/></to>
    </wire>
    <wire loc="43:/opt/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x4151c0b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b464f8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x41519188"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40b60940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ba6010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b464f8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40bfa210"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40be3b00"/></to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40bfec78"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40bcb46c"/></to>
    </wire>
    <wire loc="31:/opt/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40bcb46c"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40bc94f0"/></to>
    </wire>
    <wire loc="32:/opt/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40be75f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b464f8"/></to>
    </wire>
    <wire loc="234:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x40cee34c"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x415c03c0"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40692a70"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x415adc04"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x415f6e84"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x415a9304"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406ab438"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x415a9970"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b4d80"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x415a85b8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406c2ef0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x415f3548"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40dbc7b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x415f3bb4"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b4d80"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40dbc7b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40db75f4"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40db7d30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x406ad8a0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40df13e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b4d80"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40df0010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406ab438"/></to>
    </wire>
    <wire loc="169:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x40df06bc"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x40df0ad4"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40de7b78"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406ab438"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40de6228"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b4d80"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40e121f4"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406ab438"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/system/AMSnooperC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e12860"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b4d80"/></to>
    </wire>
    <wire loc="271:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="updateRouteTask" scoped="" ref="0x40ea7310"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="390:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x40ea8ecc"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4162dd04"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41623060"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x416293e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406ab438"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41629a4c"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b4d80"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40e9ba04"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41628694"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x41628694"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406c2ef0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x416236fc"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40dbc7b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41623d68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b4d80"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40e99210"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406ab438"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e9987c"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b4d80"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40eba070"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41667304"/></to>
    </wire>
    <wire loc="47:/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41667304"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40686c10"/></to>
    </wire>
    <wire loc="46:/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41669c68"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4067b150"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x406882f4"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x416631e4"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40f18c94"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40f34558"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40ee496c"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40ee0d9c"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40ee363c"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40f1b4bc"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40ee3300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40edf54c"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ee29e8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40f1bb28"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40ee3cfc"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40edf858"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40f1891c"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f341e0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40f13630"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40ee2ef8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40f1a050"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f15bac"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40f1a6dc"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f155e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40f13150"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x410e01fc"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40f15bac"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f9ed28"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40f155e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f9e98c"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x40fd74c0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40f13150"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40f2f5cc"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40f13630"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40fd63e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40f13630"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40fc9e60"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40f13630"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40fd7984"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40f2ed40"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x40fd7e38"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x40f30d08"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x40f2ad64"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40fd4680"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40f2c334"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40fd35e4"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40fd35e4"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40ff0188"/></to>
    </wire>
    <wire loc="80:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40fc9610"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40fd3a44"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40fd3a44"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40ff0a34"/></to>
    </wire>
    <wire loc="332:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x40f670d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x40f4f010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x40f6998c"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40f66c00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x40fd5010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x40fd5428"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40ff17d4"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40ff05d4"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40ff05d4"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40feca10"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40ff0a34"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40fece08"/></to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40ff0188"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40fec618"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40fee510"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ff2774"/></to>
    </wire>
    <wire loc="33:/opt/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ff2774"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4105cf10"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x41000ae0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40fee510"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x40feb6b4"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x41028df4"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x41028df4"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x41021444"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40febacc"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x41027340"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x41027340"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x41021954"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x40febee4"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x41027810"/></to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x41027810"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x41021e44"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x41025ddc"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x4101f890"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x4102541c"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x41020e44"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x4102590c"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x4101f3a0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x4101e498"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4045f260"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x4101eba8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403a0c44"/></to>
    </wire>
    <wire loc="34:/opt/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x410e50b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4105b0c8"/></to>
    </wire>
    <wire loc="31:/opt/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4105b0c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x410b5414"/></to>
    </wire>
    <wire loc="32:/opt/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x410af538"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4105a92c"/></to>
    </wire>
    <wire loc="89:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4105a92c"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4108aad8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x41055a98"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x41085cf4"/></to>
    </wire>
    <wire loc="91:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x41054780"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x41084a14"/></to>
    </wire>
    <wire loc="93:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x410527d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x410827b4"/></to>
    </wire>
    <wire loc="94:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x410527d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x4107f2b4"/></to>
    </wire>
    <wire loc="95:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x410527d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x4107ed78"/></to>
    </wire>
    <wire loc="27:/opt/tinyos/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x410b33d4"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4105a92c"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x410ca228"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40ee363c"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x410ca894"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40ee3cfc"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x410c94dc"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ee29e8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x416ae760"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410d1328"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x416aedcc"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40ee3cfc"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x410d1328"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410d0984"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x410cf100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40ee496c"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x410cf77c"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40ee3cfc"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x410ce3e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40ee363c"/></to>
    </wire>
    <wire loc="169:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x410cea8c"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x410ceea4"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x410f74f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x410ed860"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x410ea010"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x410f4028"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x410eaaa8"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x410f326c"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x410e9560"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x410f3cec"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x410e9978"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41139010"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41139010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x416ca398"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x410e8040"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41136250"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x41136250"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406ac22c"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x410e840c"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41133b68"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41133b68"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41709628"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x410e8b5c"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41130ec8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x41130ec8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406ac22c"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x410e8e84"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4112d6cc"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x416ca398"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x416c6a80"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4113967c"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x416caa04"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x416caa04"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406ab438"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41139ce8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x416c914c"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x416c914c"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b4d80"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x41138928"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x416c9d00"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x416c9d00"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406c2ef0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4171717c"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40dbc7b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x417177e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b4d80"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4113654c"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406ab438"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41136bb8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b4d80"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41709628"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41705d28"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41132228"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41709c94"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41709c94"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406ab438"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41132894"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x417083e0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x417083e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b4d80"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x411314dc"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41707010"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x41707010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406c2ef0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41701410"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40dbc7b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41701a7c"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b4d80"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4112f1f4"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406ab438"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4112f860"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b4d80"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x410f4028"/>
      <arguments>
        <value cst="I:4660">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x416f26d4"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x410f3cec"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x416f5b18"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x410f326c"/>
      <arguments>
        <value cst="I:4660">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x41181634"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x416f2e3c"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4045809c"/></to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <from><interface-ref name="changedTask" scoped="" ref="0x416f0a24"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/lib/net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x41181634"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x411ad904"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x411ad904"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x41738470"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41738ba4"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x417317a0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x417317a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4056a5ec"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x41733010"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40980380"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Changed" scoped="" ref="0x41734694"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x4172cc6c"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Pending" scoped="" ref="0x41736cb4"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x4172d55c"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x417333e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4045809c"/></to>
    </wire>
    <wire loc="154:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <from><interface-ref name="timerTask" scoped="" ref="0x41732010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="SenseC" loc="3:SenseC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SenseAppC.TimerMilliC" loc="44(SenseAppC.TimerMilliC):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40582644"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.SensorAcc" loc="1(SenseAppC.SensorAcc):SensorAccC.nc">
      <instance number="0">
        <component-ref qname="SensorAccC"/>
        <arguments>
          <value cst="I:43690">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.SensorAcc.Sensor" loc="42(SenseAppC.SensorAcc.Sensor):/opt/tinyos/tos/system/ConstantSensorC.nc">
      <documentation loc="35:/opt/tinyos/tos/system/ConstantSensorC.nc">
        <short>&#10; Simple sensor emulator that just outputs a constant value.</short>
        <long>&#10; Simple sensor emulator that just outputs a constant value. &#10;&#10; @author Philip Levis&#10; @date   Oct 31 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ConstantSensorC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.SensorLight" loc="1(SenseAppC.SensorLight):SensorLightC.nc">
      <instance number="0">
        <component-ref qname="SensorLightC"/>
        <arguments>
          <value cst="I:187">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.SensorLight.Sensor" loc="42(SenseAppC.SensorLight.Sensor):/opt/tinyos/tos/system/ConstantSensorC.nc">
      <documentation loc="35:/opt/tinyos/tos/system/ConstantSensorC.nc">
        <short>&#10; Simple sensor emulator that just outputs a constant value.</short>
        <long>&#10; Simple sensor emulator that just outputs a constant value. &#10;&#10; @author Philip Levis&#10; @date   Oct 31 2005&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ConstantSensorC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CollectionC" loc="45:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="77:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <documentation loc="66:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="37:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/opt/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TOne" ref="0x4038ad38"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/opt/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TOne" ref="0x4038ad38"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="CtpP.Forwarder" loc="107(CtpP.Forwarder):/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):/opt/tinyos/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
            <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):/opt/tinyos/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ceabd4"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):/opt/tinyos/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40c21d84"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40c20044"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):/opt/tinyos/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ceabd4"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):/opt/tinyos/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40c21d84"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40c20044"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="44(CtpP.RoutingBeaconTimer):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="44(CtpP.RouteUpdateTimer):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="42:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="47(CtpP.AMSenderC):/opt/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC" loc="47(CtpP.AMSenderC.SenderC):/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.AMQueueEntryP" loc="43(CtpP.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="43(CtpP.AMReceiverC):/opt/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="44(CtpP.AMSnooperC):/opt/tinyos/tos/system/AMSnooperC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="107(CtpP.Router):/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="38:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:512000">
            <type-int cname="long" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="44(CtpP.RetxmitTimer):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="47(CtpP.SendControl):/opt/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC" loc="47(CtpP.SendControl.SenderC):/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.AMQueueEntryP" loc="43(CtpP.SendControl.SenderC.AMQueueEntryP):/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="43(CtpP.ReceiveControl):/opt/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.CollectionSenderC" loc="43(SenseAppC.CollectionSenderC):/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
      <documentation loc="32:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.CollectionSenderC.CollectionSenderP" loc="34(SenseAppC.CollectionSenderC.CollectionSenderP):/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x403ff160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.CollectionSenderC.CollectionSenderP.CollectionIdP" loc="45(SenseAppC.CollectionSenderC.CollectionSenderP.CollectionIdP):/opt/tinyos/tos/lib/net/CollectionIdP.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x403ff160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TThree" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TThree" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x403895bc"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SenseAppC.SerialAMSenderC" loc="47(SenseAppC.SerialAMSenderC):/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.SerialAMSenderC.AMQueueEntryP" loc="43(SenseAppC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.UARTMessagePoolP" loc="41(SenseAppC.UARTMessagePoolP):/opt/tinyos/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
            <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.UARTMessagePoolP.PoolP" loc="53(SenseAppC.UARTMessagePoolP.PoolP):/opt/tinyos/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ceabd4"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SenseAppC.UARTQueueP" loc="42(SenseAppC.UARTQueueP):/opt/tinyos/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
              <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationC" loc="46:/opt/tinyos/tos/lib/net/drip/DisseminationC.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP" loc="47:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <documentation loc="33:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="47(DisseminationEngineP.DisseminationSendC):/opt/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC" loc="47(DisseminationEngineP.DisseminationSendC.SenderC):/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP):/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="43(DisseminationEngineP.DisseminationReceiveC):/opt/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="47(DisseminationEngineP.DisseminationProbeSendC):/opt/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC" loc="47(DisseminationEngineP.DisseminationProbeSendC.SenderC):/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP):/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="43(DisseminationEngineP.DisseminationProbeReceiveC):/opt/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos/tos/system/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SenseAppC.ChangerC" loc="49(SenseAppC.ChangerC):/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="changesensor" ref="0x403ade74"/>
            <typename><typedef-ref name="changesensor_t" ref="0x403b33c0"/></typename>
          </type-tag>
          <value cst="I:4660">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.ChangerC.DisseminatorP" loc="45(SenseAppC.ChangerC.DisseminatorP):/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="33:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410fc5e8"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP" loc="44:/opt/tinyos/tos/lib/net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="51(DisseminationTimerP.TrickleTimerMilliC):/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="51(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="44(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/opt/tinyos/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/opt/tinyos/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40494304" loc="40:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4049450c" loc="40:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40494714" loc="40:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404a439c" loc="41:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404a45b4" loc="42:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404a47cc" loc="43:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404a49b0" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404ef22c" loc="42:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404ef444" loc="43:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404ef65c" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404ef840" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40582644" loc="58:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40582644"/></type-var>
        </typedef>
        <constant name="divider" ref="0x405827f8" loc="58:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x4058b66c" loc="58:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x4058b66c"/></type-var>
        </typedef>
        <constant name="divider" ref="0x4058b820" loc="58:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4057f6a4" loc="46:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4057f6a4"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40631e54" loc="46:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40631e54"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x4062e064" loc="46:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4065e244" loc="46:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4065e244"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensorAccC" loc="1:SensorAccC.nc" abstract="">
      <parameters>
        <constant name="value" ref="0x40657450" loc="1:SensorAccC.nc">
          <component-ref qname="SensorAccC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ConstantSensorC" loc="42:/opt/tinyos/tos/system/ConstantSensorC.nc" abstract="">
      <documentation loc="35:/opt/tinyos/tos/system/ConstantSensorC.nc">
        <short>&#10; Simple sensor emulator that just outputs a constant value.</short>
        <long>&#10; Simple sensor emulator that just outputs a constant value. &#10;&#10; @author Philip Levis&#10; @date   Oct 31 2005&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x40667cc4" loc="42:/opt/tinyos/tos/system/ConstantSensorC.nc">
          <component-ref qname="ConstantSensorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x40667cc4"/></type-var>
        </typedef>
        <constant name="val" ref="0x40667ea4" loc="42:/opt/tinyos/tos/system/ConstantSensorC.nc">
          <component-ref qname="ConstantSensorC"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SensorLightC" loc="1:SensorLightC.nc" abstract="">
      <parameters>
        <constant name="value" ref="0x40669d20" loc="1:SensorLightC.nc">
          <component-ref qname="SensorLightC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x408045b0" loc="83:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x407fb010" loc="42:/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40ba8728" loc="44:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40ba8728"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40ba8938" loc="44:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40baad98" loc="51:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40baad98"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40bc41d0" loc="52:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40bc41d0"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40bc4380" loc="53:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40bf012c" loc="42:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40bf012c"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40bf0548" loc="43:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40bf0548"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40be4840" loc="55:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40be4840"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40be4c70" loc="56:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40be4c70"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40be4ec8" loc="57:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40be4ec8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40be134c" loc="58:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40be134c"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40be15a8" loc="59:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40be1a00" loc="60:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40be1a00"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CtpForwardingEngineP" loc="107:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40ceabd4" loc="41:/opt/tinyos/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ceabd4"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x40ceade4" loc="41:/opt/tinyos/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40ce3010" loc="53:/opt/tinyos/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ce3010"/></type-var>
        </typedef>
        <constant name="size" ref="0x40ce31f0" loc="53:/opt/tinyos/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x40cffce8" loc="42:/opt/tinyos/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x40cffce8"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x40cfff04" loc="42:/opt/tinyos/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0x40d1cc9c" loc="38:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x40d18620" loc="43:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40d55aa0" loc="47:/opt/tinyos/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40dcd5a8" loc="47:/opt/tinyos/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40dc8b18" loc="43:/opt/tinyos/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40db9bbc" loc="45:/opt/tinyos/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40de83f8" loc="43:/opt/tinyos/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSnooperC" loc="44:/opt/tinyos/tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40e14980" loc="44:/opt/tinyos/tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="107:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="38:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0x40e08574" loc="107:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0x40e087a4" loc="107:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0x40e089d4" loc="107:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionSenderC" loc="43:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc" abstract="">
      <documentation loc="32:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x40ebc5c8" loc="43:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
          <component-ref qname="CollectionSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x403ff160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderP" loc="34:/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0x40eb6010" loc="35:/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x403ff160"/></typename>
          </type-int>
        </constant>
        <constant name="clientid" ref="0x40eb6218" loc="35:/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionIdP" loc="45:/opt/tinyos/tos/lib/net/CollectionIdP.nc" abstract="">
      <documentation loc="35:/opt/tinyos/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x40eb5c04" loc="45:/opt/tinyos/tos/lib/net/CollectionIdP.nc">
          <component-ref qname="CollectionIdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x403ff160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x410d8064" loc="47:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x410fc5e8" loc="49:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410fc5e8"/></type-var>
        </typedef>
        <constant name="key" ref="0x410fc7c8" loc="49:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x4115a088" loc="45:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4115a088"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="51:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x4117e764" loc="51:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x4117e960" loc="52:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x4117eb30" loc="53:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x4117ed28" loc="54:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="51:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x411771e0" loc="51:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x411773dc" loc="52:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x411775ac" loc="53:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x411777a4" loc="54:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x4117799c" loc="55:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BitVectorC" loc="44:/opt/tinyos/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="34:/opt/tinyos/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x411bf0f4" loc="44:/opt/tinyos/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="RootControl" ref="0x40403394" loc="15:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40403394"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40403554"/>
        <function-ref name="setRoot" scoped="" ref="0x40403630"/>
        <function-ref name="unsetRoot" scoped="" ref="0x4040370c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionPacket" ref="0x40405d14" loc="14:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40405d14"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40405ed4"/>
        <function-ref name="setOrigin" scoped="" ref="0x403b7010"/>
        <function-ref name="setType" scoped="" ref="0x403b70ec"/>
        <function-ref name="getOrigin" scoped="" ref="0x403b71c8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x403b72a4"/>
        <function-ref name="getType" scoped="" ref="0x403b7380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x403b6294" loc="6:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403b6294"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403b6454"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x403bcda0" loc="8:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x403bcda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x403b8010"/>
        <function-ref name="stopDone" scoped="" ref="0x403b80ec"/>
        <function-ref name="start" scoped="" ref="0x403b81c8"/>
        <function-ref name="stop" scoped="" ref="0x403b82a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Update" ref="0x4041f4dc" loc="29:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Update" scoped="" ref="0x4041f4dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="changesensor" ref="0x403ade74"/>
            <typename><typedef-ref name="changesensor_t" ref="0x403b33c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x4041fab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Light" ref="0x4042e010" loc="35:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Light" scoped="" ref="0x4042e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4042e5e4"/>
        <function-ref name="readDone" scoped="" ref="0x4042e824"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x4042d010" loc="55:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x4042d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4042d1d0"/>
        <function-ref name="runTask" scoped="" ref="0x4042d2ac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x403bc6f0" loc="7:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x403bc6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x403bc8b0"/>
        <function-ref name="stopDone" scoped="" ref="0x403bc98c"/>
        <function-ref name="start" scoped="" ref="0x403bca68"/>
        <function-ref name="stop" scoped="" ref="0x403bcb44"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x404011ec" loc="12:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x404011ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404013ac"/>
        <function-ref name="getPayload" scoped="" ref="0x40401488"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40401564"/>
        <function-ref name="cancel" scoped="" ref="0x40401640"/>
        <function-ref name="sendDone" scoped="" ref="0x4040171c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTMessagePool" ref="0x4041260c" loc="22:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTMessagePool" scoped="" ref="0x4041260c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
            <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4041462c"/>
        <function-ref name="maxSize" scoped="" ref="0x4041407c"/>
        <function-ref name="empty" scoped="" ref="0x40412be0"/>
        <function-ref name="put" scoped="" ref="0x404142bc"/>
        <function-ref name="size" scoped="" ref="0x40412e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationControl" ref="0x40414af8" loc="26:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationControl" scoped="" ref="0x40414af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40414d38"/>
        <function-ref name="stop" scoped="" ref="0x40414e14"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x40409818" loc="19:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x40409818"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404099d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40409ab4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40409b90"/>
        <function-ref name="cancel" scoped="" ref="0x40409c6c"/>
        <function-ref name="sendDone" scoped="" ref="0x40409d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="X_Axis" ref="0x4042c370" loc="34:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="X_Axis" scoped="" ref="0x4042c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4042c944"/>
        <function-ref name="readDone" scoped="" ref="0x4042cb84"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x403ba488" loc="9:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x403ba488"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x403ba648"/>
        <function-ref name="stop" scoped="" ref="0x403ba724"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialReceive" ref="0x403bb010" loc="20:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReceive" scoped="" ref="0x403bb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x403bb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40423ab0" loc="32:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40423ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40423c70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40423d4c"/>
        <function-ref name="led1On" scoped="" ref="0x40423e28"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40423f04"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40417010"/>
        <function-ref name="get" scoped="" ref="0x404170ec"/>
        <function-ref name="led1Off" scoped="" ref="0x404171c8"/>
        <function-ref name="led2Off" scoped="" ref="0x40417538"/>
        <function-ref name="set" scoped="" ref="0x404172a4"/>
        <function-ref name="led0On" scoped="" ref="0x40417380"/>
        <function-ref name="led2On" scoped="" ref="0x4041745c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollReceive" ref="0x403fe28c" loc="13:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollReceive" scoped="" ref="0x403fe28c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x403fe44c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTQueue" ref="0x4040e564" loc="21:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTQueue" scoped="" ref="0x4040e564"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
              <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40404250"/>
        <function-ref name="enqueue" scoped="" ref="0x404048e8"/>
        <function-ref name="element" scoped="" ref="0x40404c1c"/>
        <function-ref name="maxSize" scoped="" ref="0x40404010"/>
        <function-ref name="dequeue" scoped="" ref="0x4040459c"/>
        <function-ref name="empty" scoped="" ref="0x4040eb38"/>
        <function-ref name="size" scoped="" ref="0x4040ed78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Value" ref="0x404185f4" loc="28:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Value" scoped="" ref="0x404185f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="changesensor" ref="0x403ade74"/>
            <typename><typedef-ref name="changesensor_t" ref="0x403b33c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x404190fc"/>
        <function-ref name="get" scoped="" ref="0x40418be4"/>
        <function-ref name="set" scoped="" ref="0x40418e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40427d40" loc="33:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40427d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4042271c"/>
        <function-ref name="fired" scoped="" ref="0x40416a38"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4042211c"/>
        <function-ref name="isOneShot" scoped="" ref="0x40416eb8"/>
        <function-ref name="getdt" scoped="" ref="0x40422b9c"/>
        <function-ref name="gett0" scoped="" ref="0x4042295c"/>
        <function-ref name="isRunning" scoped="" ref="0x40416c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40416328"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4042241c"/>
        <function-ref name="startOneShot" scoped="" ref="0x40416590"/>
        <function-ref name="stop" scoped="" ref="0x404167f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4045b9f4" loc="58:/opt/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4045b9f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4045bbb4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403b1dd0" loc="57:/opt/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403b1dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4045b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4045f990" loc="52:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4045f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4045fb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4045aadc" loc="46:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4045aadc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4045ac9c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4045f260" loc="50:/opt/tinyos/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4045f260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4045f420"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4045f4fc"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4045f5d8"/>
        <function-ref name="actualMicro" scoped="" ref="0x4045f6b4"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4045f790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x40468084" loc="45:/opt/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x40468084"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40468244"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4045dc68" loc="44:/opt/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4045dc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4045de28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40468468" loc="46:/opt/tinyos/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40468468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40468628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x404576ac" loc="41:/opt/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x404576ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4045786c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404572fc" loc="40:/opt/tinyos/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404572fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404574bc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4046c010" loc="45:/opt/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4046c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4046c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x4046a5d4" loc="44:/opt/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x4046a5d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046a794"/>
        <function-ref name="isInput" scoped="" ref="0x4046a870"/>
        <function-ref name="toggle" scoped="" ref="0x4046a94c"/>
        <function-ref name="isOutput" scoped="" ref="0x4046aa28"/>
        <function-ref name="get" scoped="" ref="0x4046ab04"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046abe0"/>
        <function-ref name="set" scoped="" ref="0x4046acbc"/>
        <function-ref name="clr" scoped="" ref="0x4046ad98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x4046e1c0" loc="43:/opt/tinyos/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4046e1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4046e380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x40490208" loc="98:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x40490208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404905c8"/>
        <function-ref name="isInput" scoped="" ref="0x404906a4"/>
        <function-ref name="toggle" scoped="" ref="0x40490780"/>
        <function-ref name="isOutput" scoped="" ref="0x4049085c"/>
        <function-ref name="get" scoped="" ref="0x40490938"/>
        <function-ref name="makeOutput" scoped="" ref="0x40490a14"/>
        <function-ref name="set" scoped="" ref="0x40490af0"/>
        <function-ref name="clr" scoped="" ref="0x40490bcc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x4047bacc" loc="72:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x4047bacc"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047bc8c"/>
        <function-ref name="isInput" scoped="" ref="0x4047bd68"/>
        <function-ref name="toggle" scoped="" ref="0x4047be44"/>
        <function-ref name="isOutput" scoped="" ref="0x4047bf20"/>
        <function-ref name="get" scoped="" ref="0x40486010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404860ec"/>
        <function-ref name="set" scoped="" ref="0x404861c8"/>
        <function-ref name="clr" scoped="" ref="0x404862a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x4048c010" loc="83:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x4048c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048c1d0"/>
        <function-ref name="isInput" scoped="" ref="0x4048c2ac"/>
        <function-ref name="toggle" scoped="" ref="0x4048c388"/>
        <function-ref name="isOutput" scoped="" ref="0x4048c464"/>
        <function-ref name="get" scoped="" ref="0x4048c540"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048c61c"/>
        <function-ref name="set" scoped="" ref="0x4048c6f8"/>
        <function-ref name="clr" scoped="" ref="0x4048c7d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x40487030" loc="92:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x40487030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404871f0"/>
        <function-ref name="isInput" scoped="" ref="0x404872cc"/>
        <function-ref name="toggle" scoped="" ref="0x404873a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40487484"/>
        <function-ref name="get" scoped="" ref="0x40487560"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048763c"/>
        <function-ref name="set" scoped="" ref="0x40487718"/>
        <function-ref name="clr" scoped="" ref="0x404877f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x4048d654" loc="103:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x4048d654"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048d814"/>
        <function-ref name="isInput" scoped="" ref="0x4048d8f0"/>
        <function-ref name="toggle" scoped="" ref="0x4048d9cc"/>
        <function-ref name="isOutput" scoped="" ref="0x4048daa8"/>
        <function-ref name="get" scoped="" ref="0x4048db84"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048dc60"/>
        <function-ref name="set" scoped="" ref="0x4048dd3c"/>
        <function-ref name="clr" scoped="" ref="0x4048de18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x404709ec" loc="50:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x404709ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40470bac"/>
        <function-ref name="isInput" scoped="" ref="0x40470c88"/>
        <function-ref name="toggle" scoped="" ref="0x40470d64"/>
        <function-ref name="isOutput" scoped="" ref="0x40470e40"/>
        <function-ref name="get" scoped="" ref="0x40470f1c"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046f010"/>
        <function-ref name="set" scoped="" ref="0x4046f0ec"/>
        <function-ref name="clr" scoped="" ref="0x4046f1c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x40489bc4" loc="90:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x40489bc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40489d84"/>
        <function-ref name="isInput" scoped="" ref="0x40489e60"/>
        <function-ref name="toggle" scoped="" ref="0x40488010"/>
        <function-ref name="isOutput" scoped="" ref="0x404880ec"/>
        <function-ref name="get" scoped="" ref="0x404881c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404882a4"/>
        <function-ref name="set" scoped="" ref="0x40488380"/>
        <function-ref name="clr" scoped="" ref="0x4048845c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x4046fd7c" loc="53:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x4046fd7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047a010"/>
        <function-ref name="isInput" scoped="" ref="0x4047a0ec"/>
        <function-ref name="toggle" scoped="" ref="0x4047a1c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4047a2a4"/>
        <function-ref name="get" scoped="" ref="0x4047a380"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047a45c"/>
        <function-ref name="set" scoped="" ref="0x4047a538"/>
        <function-ref name="clr" scoped="" ref="0x4047a614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x4047f2e4" loc="64:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x4047f2e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047f4a4"/>
        <function-ref name="isInput" scoped="" ref="0x4047f580"/>
        <function-ref name="toggle" scoped="" ref="0x4047f65c"/>
        <function-ref name="isOutput" scoped="" ref="0x4047f738"/>
        <function-ref name="get" scoped="" ref="0x4047f814"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047f8f0"/>
        <function-ref name="set" scoped="" ref="0x4047f9cc"/>
        <function-ref name="clr" scoped="" ref="0x4047faa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x4048584c" loc="75:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x4048584c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40485a0c"/>
        <function-ref name="isInput" scoped="" ref="0x40485ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40485bc4"/>
        <function-ref name="isOutput" scoped="" ref="0x40485ca0"/>
        <function-ref name="get" scoped="" ref="0x40485d7c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40485e58"/>
        <function-ref name="set" scoped="" ref="0x40484010"/>
        <function-ref name="clr" scoped="" ref="0x404840ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x4048bd7c" loc="86:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x4048bd7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048a010"/>
        <function-ref name="isInput" scoped="" ref="0x4048a0ec"/>
        <function-ref name="toggle" scoped="" ref="0x4048a1c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4048a2a4"/>
        <function-ref name="get" scoped="" ref="0x4048a380"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048a45c"/>
        <function-ref name="set" scoped="" ref="0x4048a538"/>
        <function-ref name="clr" scoped="" ref="0x4048a614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x4047380c" loc="45:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x4047380c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404739cc"/>
        <function-ref name="isInput" scoped="" ref="0x40473aa8"/>
        <function-ref name="toggle" scoped="" ref="0x40473b84"/>
        <function-ref name="isOutput" scoped="" ref="0x40473c60"/>
        <function-ref name="get" scoped="" ref="0x40473d3c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40473e18"/>
        <function-ref name="set" scoped="" ref="0x40473ef4"/>
        <function-ref name="clr" scoped="" ref="0x40472010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x40479bc4" loc="56:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x40479bc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40479d84"/>
        <function-ref name="isInput" scoped="" ref="0x40479e60"/>
        <function-ref name="toggle" scoped="" ref="0x40478010"/>
        <function-ref name="isOutput" scoped="" ref="0x404780ec"/>
        <function-ref name="get" scoped="" ref="0x404781c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404782a4"/>
        <function-ref name="set" scoped="" ref="0x40478380"/>
        <function-ref name="clr" scoped="" ref="0x4047845c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x4047d11c" loc="67:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x4047d11c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047d2dc"/>
        <function-ref name="isInput" scoped="" ref="0x4047d3b8"/>
        <function-ref name="toggle" scoped="" ref="0x4047d494"/>
        <function-ref name="isOutput" scoped="" ref="0x4047d570"/>
        <function-ref name="get" scoped="" ref="0x4047d64c"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047d728"/>
        <function-ref name="set" scoped="" ref="0x4047d804"/>
        <function-ref name="clr" scoped="" ref="0x4047d8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x40483730" loc="78:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x40483730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404838f0"/>
        <function-ref name="isInput" scoped="" ref="0x404839cc"/>
        <function-ref name="toggle" scoped="" ref="0x40483aa8"/>
        <function-ref name="isOutput" scoped="" ref="0x40483b84"/>
        <function-ref name="get" scoped="" ref="0x40483c60"/>
        <function-ref name="makeOutput" scoped="" ref="0x40483d3c"/>
        <function-ref name="set" scoped="" ref="0x40483e18"/>
        <function-ref name="clr" scoped="" ref="0x40483ef4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x40492d7c" loc="95:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x40492d7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40491010"/>
        <function-ref name="isInput" scoped="" ref="0x404910ec"/>
        <function-ref name="toggle" scoped="" ref="0x404911c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404912a4"/>
        <function-ref name="get" scoped="" ref="0x40491380"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049145c"/>
        <function-ref name="set" scoped="" ref="0x40491538"/>
        <function-ref name="clr" scoped="" ref="0x40491614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x4048e208" loc="101:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x4048e208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048e3c8"/>
        <function-ref name="isInput" scoped="" ref="0x4048e4a4"/>
        <function-ref name="toggle" scoped="" ref="0x4048e580"/>
        <function-ref name="isOutput" scoped="" ref="0x4048e65c"/>
        <function-ref name="get" scoped="" ref="0x4048e738"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048e814"/>
        <function-ref name="set" scoped="" ref="0x4048e8f0"/>
        <function-ref name="clr" scoped="" ref="0x4048e9cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x40482ad8" loc="81:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x40482ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40482c98"/>
        <function-ref name="isInput" scoped="" ref="0x40482d74"/>
        <function-ref name="toggle" scoped="" ref="0x40482e50"/>
        <function-ref name="isOutput" scoped="" ref="0x40481010"/>
        <function-ref name="get" scoped="" ref="0x404810ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x404811c8"/>
        <function-ref name="set" scoped="" ref="0x404812a4"/>
        <function-ref name="clr" scoped="" ref="0x40481380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x40471654" loc="48:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x40471654"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40471814"/>
        <function-ref name="isInput" scoped="" ref="0x404718f0"/>
        <function-ref name="toggle" scoped="" ref="0x404719cc"/>
        <function-ref name="isOutput" scoped="" ref="0x40471aa8"/>
        <function-ref name="get" scoped="" ref="0x40471b84"/>
        <function-ref name="makeOutput" scoped="" ref="0x40471c60"/>
        <function-ref name="set" scoped="" ref="0x40471d3c"/>
        <function-ref name="clr" scoped="" ref="0x40471e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40477a7c" loc="59:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40477a7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40477c3c"/>
        <function-ref name="isInput" scoped="" ref="0x40477d18"/>
        <function-ref name="toggle" scoped="" ref="0x40477df4"/>
        <function-ref name="isOutput" scoped="" ref="0x40477ed0"/>
        <function-ref name="get" scoped="" ref="0x40475010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404750ec"/>
        <function-ref name="set" scoped="" ref="0x404751c8"/>
        <function-ref name="clr" scoped="" ref="0x404752a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x40490dc4" loc="99:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x40490dc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048f010"/>
        <function-ref name="isInput" scoped="" ref="0x4048f0ec"/>
        <function-ref name="toggle" scoped="" ref="0x4048f1c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4048f2a4"/>
        <function-ref name="get" scoped="" ref="0x4048f380"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048f45c"/>
        <function-ref name="set" scoped="" ref="0x4048f538"/>
        <function-ref name="clr" scoped="" ref="0x4048f614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x40475e58" loc="62:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x40475e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40480050"/>
        <function-ref name="isInput" scoped="" ref="0x4048012c"/>
        <function-ref name="toggle" scoped="" ref="0x40480208"/>
        <function-ref name="isOutput" scoped="" ref="0x404802e4"/>
        <function-ref name="get" scoped="" ref="0x404803c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048049c"/>
        <function-ref name="set" scoped="" ref="0x40480578"/>
        <function-ref name="clr" scoped="" ref="0x40480654"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x4048649c" loc="73:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x4048649c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048665c"/>
        <function-ref name="isInput" scoped="" ref="0x40486738"/>
        <function-ref name="toggle" scoped="" ref="0x40486814"/>
        <function-ref name="isOutput" scoped="" ref="0x404868f0"/>
        <function-ref name="get" scoped="" ref="0x404869cc"/>
        <function-ref name="makeOutput" scoped="" ref="0x40486aa8"/>
        <function-ref name="set" scoped="" ref="0x40486b84"/>
        <function-ref name="clr" scoped="" ref="0x40486c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x4048c9cc" loc="84:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x4048c9cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048cb8c"/>
        <function-ref name="isInput" scoped="" ref="0x4048cc68"/>
        <function-ref name="toggle" scoped="" ref="0x4048cd44"/>
        <function-ref name="isOutput" scoped="" ref="0x4048ce20"/>
        <function-ref name="get" scoped="" ref="0x4048cefc"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048b010"/>
        <function-ref name="set" scoped="" ref="0x4048b0ec"/>
        <function-ref name="clr" scoped="" ref="0x4048b1c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x404879ec" loc="93:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x404879ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40487bac"/>
        <function-ref name="isInput" scoped="" ref="0x40487c88"/>
        <function-ref name="toggle" scoped="" ref="0x40487d64"/>
        <function-ref name="isOutput" scoped="" ref="0x40487e40"/>
        <function-ref name="get" scoped="" ref="0x40487f1c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40492010"/>
        <function-ref name="set" scoped="" ref="0x404920ec"/>
        <function-ref name="clr" scoped="" ref="0x404921c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x4046f3c0" loc="51:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x4046f3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046f580"/>
        <function-ref name="isInput" scoped="" ref="0x4046f65c"/>
        <function-ref name="toggle" scoped="" ref="0x4046f738"/>
        <function-ref name="isOutput" scoped="" ref="0x4046f814"/>
        <function-ref name="get" scoped="" ref="0x4046f8f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046f9cc"/>
        <function-ref name="set" scoped="" ref="0x4046faa8"/>
        <function-ref name="clr" scoped="" ref="0x4046fb84"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x4047a80c" loc="54:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x4047a80c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047a9cc"/>
        <function-ref name="isInput" scoped="" ref="0x4047aaa8"/>
        <function-ref name="toggle" scoped="" ref="0x4047ab84"/>
        <function-ref name="isOutput" scoped="" ref="0x4047ac60"/>
        <function-ref name="get" scoped="" ref="0x4047ad3c"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047ae18"/>
        <function-ref name="set" scoped="" ref="0x4047aef4"/>
        <function-ref name="clr" scoped="" ref="0x40479010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x4047fca0" loc="65:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x4047fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047fe60"/>
        <function-ref name="isInput" scoped="" ref="0x4047e010"/>
        <function-ref name="toggle" scoped="" ref="0x4047e0ec"/>
        <function-ref name="isOutput" scoped="" ref="0x4047e1c8"/>
        <function-ref name="get" scoped="" ref="0x4047e2a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047e380"/>
        <function-ref name="set" scoped="" ref="0x4047e45c"/>
        <function-ref name="clr" scoped="" ref="0x4047e538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x404842e4" loc="76:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x404842e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404844a4"/>
        <function-ref name="isInput" scoped="" ref="0x40484580"/>
        <function-ref name="toggle" scoped="" ref="0x4048465c"/>
        <function-ref name="isOutput" scoped="" ref="0x40484738"/>
        <function-ref name="get" scoped="" ref="0x40484814"/>
        <function-ref name="makeOutput" scoped="" ref="0x404848f0"/>
        <function-ref name="set" scoped="" ref="0x404849cc"/>
        <function-ref name="clr" scoped="" ref="0x40484aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x4048a80c" loc="87:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x4048a80c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048a9cc"/>
        <function-ref name="isInput" scoped="" ref="0x4048aaa8"/>
        <function-ref name="toggle" scoped="" ref="0x4048ab84"/>
        <function-ref name="isOutput" scoped="" ref="0x4048ac60"/>
        <function-ref name="get" scoped="" ref="0x4048ad3c"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048ae18"/>
        <function-ref name="set" scoped="" ref="0x4048aef4"/>
        <function-ref name="clr" scoped="" ref="0x40489010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x40472208" loc="46:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x40472208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404723c8"/>
        <function-ref name="isInput" scoped="" ref="0x404724a4"/>
        <function-ref name="toggle" scoped="" ref="0x40472580"/>
        <function-ref name="isOutput" scoped="" ref="0x4047265c"/>
        <function-ref name="get" scoped="" ref="0x40472738"/>
        <function-ref name="makeOutput" scoped="" ref="0x40472814"/>
        <function-ref name="set" scoped="" ref="0x404728f0"/>
        <function-ref name="clr" scoped="" ref="0x404729cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x40478654" loc="57:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x40478654"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40478894"/>
        <function-ref name="isInput" scoped="" ref="0x40478970"/>
        <function-ref name="toggle" scoped="" ref="0x40478a4c"/>
        <function-ref name="isOutput" scoped="" ref="0x40478b28"/>
        <function-ref name="get" scoped="" ref="0x40478c04"/>
        <function-ref name="makeOutput" scoped="" ref="0x40478ce0"/>
        <function-ref name="set" scoped="" ref="0x40478dbc"/>
        <function-ref name="clr" scoped="" ref="0x40478e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x4047dad8" loc="68:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x4047dad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047dc98"/>
        <function-ref name="isInput" scoped="" ref="0x4047dd74"/>
        <function-ref name="toggle" scoped="" ref="0x4047de50"/>
        <function-ref name="isOutput" scoped="" ref="0x4047c010"/>
        <function-ref name="get" scoped="" ref="0x4047c0ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047c1c8"/>
        <function-ref name="set" scoped="" ref="0x4047c2a4"/>
        <function-ref name="clr" scoped="" ref="0x4047c380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x4049180c" loc="96:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x4049180c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404919cc"/>
        <function-ref name="isInput" scoped="" ref="0x40491aa8"/>
        <function-ref name="toggle" scoped="" ref="0x40491b84"/>
        <function-ref name="isOutput" scoped="" ref="0x40491c60"/>
        <function-ref name="get" scoped="" ref="0x40491d3c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40491e18"/>
        <function-ref name="set" scoped="" ref="0x40491ef4"/>
        <function-ref name="clr" scoped="" ref="0x40490010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x4047b010" loc="71:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x4047b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047b2d0"/>
        <function-ref name="isInput" scoped="" ref="0x4047b3ac"/>
        <function-ref name="toggle" scoped="" ref="0x4047b488"/>
        <function-ref name="isOutput" scoped="" ref="0x4047b564"/>
        <function-ref name="get" scoped="" ref="0x4047b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047b71c"/>
        <function-ref name="set" scoped="" ref="0x4047b7f8"/>
        <function-ref name="clr" scoped="" ref="0x4047b8d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x40481578" loc="82:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x40481578"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40481738"/>
        <function-ref name="isInput" scoped="" ref="0x40481814"/>
        <function-ref name="toggle" scoped="" ref="0x404818f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404819cc"/>
        <function-ref name="get" scoped="" ref="0x40481aa8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40481b84"/>
        <function-ref name="set" scoped="" ref="0x40481c60"/>
        <function-ref name="clr" scoped="" ref="0x40481d3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x40488654" loc="91:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x40488654"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40488814"/>
        <function-ref name="isInput" scoped="" ref="0x404888f0"/>
        <function-ref name="toggle" scoped="" ref="0x404889cc"/>
        <function-ref name="isOutput" scoped="" ref="0x40488aa8"/>
        <function-ref name="get" scoped="" ref="0x40488b84"/>
        <function-ref name="makeOutput" scoped="" ref="0x40488c60"/>
        <function-ref name="set" scoped="" ref="0x40488d3c"/>
        <function-ref name="clr" scoped="" ref="0x40488e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x4048ebc4" loc="102:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x4048ebc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048ed84"/>
        <function-ref name="isInput" scoped="" ref="0x4048ee60"/>
        <function-ref name="toggle" scoped="" ref="0x4048d010"/>
        <function-ref name="isOutput" scoped="" ref="0x4048d0ec"/>
        <function-ref name="get" scoped="" ref="0x4048d1c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048d2a4"/>
        <function-ref name="set" scoped="" ref="0x4048d380"/>
        <function-ref name="clr" scoped="" ref="0x4048d45c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x40470030" loc="49:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x40470030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404701f0"/>
        <function-ref name="isInput" scoped="" ref="0x404702cc"/>
        <function-ref name="toggle" scoped="" ref="0x404703a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40470484"/>
        <function-ref name="get" scoped="" ref="0x40470560"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047063c"/>
        <function-ref name="set" scoped="" ref="0x40470718"/>
        <function-ref name="clr" scoped="" ref="0x404707f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x4047549c" loc="60:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x4047549c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047565c"/>
        <function-ref name="isInput" scoped="" ref="0x40475738"/>
        <function-ref name="toggle" scoped="" ref="0x40475814"/>
        <function-ref name="isOutput" scoped="" ref="0x404758f0"/>
        <function-ref name="get" scoped="" ref="0x404759cc"/>
        <function-ref name="makeOutput" scoped="" ref="0x40475aa8"/>
        <function-ref name="set" scoped="" ref="0x40475b84"/>
        <function-ref name="clr" scoped="" ref="0x40475c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x40489208" loc="89:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x40489208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404893c8"/>
        <function-ref name="isInput" scoped="" ref="0x404894a4"/>
        <function-ref name="toggle" scoped="" ref="0x40489580"/>
        <function-ref name="isOutput" scoped="" ref="0x4048965c"/>
        <function-ref name="get" scoped="" ref="0x40489738"/>
        <function-ref name="makeOutput" scoped="" ref="0x40489814"/>
        <function-ref name="set" scoped="" ref="0x404898f0"/>
        <function-ref name="clr" scoped="" ref="0x404899cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x4048084c" loc="63:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x4048084c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40480a0c"/>
        <function-ref name="isInput" scoped="" ref="0x40480ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40480bc4"/>
        <function-ref name="isOutput" scoped="" ref="0x40480ca0"/>
        <function-ref name="get" scoped="" ref="0x40480d7c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40480e58"/>
        <function-ref name="set" scoped="" ref="0x4047f010"/>
        <function-ref name="clr" scoped="" ref="0x4047f0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x40486e58" loc="74:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x40486e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40485050"/>
        <function-ref name="isInput" scoped="" ref="0x4048512c"/>
        <function-ref name="toggle" scoped="" ref="0x40485208"/>
        <function-ref name="isOutput" scoped="" ref="0x404852e4"/>
        <function-ref name="get" scoped="" ref="0x404853c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048549c"/>
        <function-ref name="set" scoped="" ref="0x40485578"/>
        <function-ref name="clr" scoped="" ref="0x40485654"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x4048b3c0" loc="85:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x4048b3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048b580"/>
        <function-ref name="isInput" scoped="" ref="0x4048b65c"/>
        <function-ref name="toggle" scoped="" ref="0x4048b738"/>
        <function-ref name="isOutput" scoped="" ref="0x4048b814"/>
        <function-ref name="get" scoped="" ref="0x4048b8f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048b9cc"/>
        <function-ref name="set" scoped="" ref="0x4048baa8"/>
        <function-ref name="clr" scoped="" ref="0x4048bb84"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404923c0" loc="94:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404923c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40492580"/>
        <function-ref name="isInput" scoped="" ref="0x4049265c"/>
        <function-ref name="toggle" scoped="" ref="0x40492738"/>
        <function-ref name="isOutput" scoped="" ref="0x40492814"/>
        <function-ref name="get" scoped="" ref="0x404928f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404929cc"/>
        <function-ref name="set" scoped="" ref="0x40492aa8"/>
        <function-ref name="clr" scoped="" ref="0x40492b84"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x40474d78" loc="44:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x40474d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40473010"/>
        <function-ref name="isInput" scoped="" ref="0x404730ec"/>
        <function-ref name="toggle" scoped="" ref="0x404731c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404732a4"/>
        <function-ref name="get" scoped="" ref="0x40473380"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047345c"/>
        <function-ref name="set" scoped="" ref="0x40473538"/>
        <function-ref name="clr" scoped="" ref="0x40473614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x40479208" loc="55:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x40479208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404793c8"/>
        <function-ref name="isInput" scoped="" ref="0x404794a4"/>
        <function-ref name="toggle" scoped="" ref="0x40479580"/>
        <function-ref name="isOutput" scoped="" ref="0x4047965c"/>
        <function-ref name="get" scoped="" ref="0x40479738"/>
        <function-ref name="makeOutput" scoped="" ref="0x40479814"/>
        <function-ref name="set" scoped="" ref="0x404798f0"/>
        <function-ref name="clr" scoped="" ref="0x404799cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x4047e730" loc="66:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x4047e730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047e8f0"/>
        <function-ref name="isInput" scoped="" ref="0x4047e9cc"/>
        <function-ref name="toggle" scoped="" ref="0x4047eaa8"/>
        <function-ref name="isOutput" scoped="" ref="0x4047eb84"/>
        <function-ref name="get" scoped="" ref="0x4047ec60"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047ed3c"/>
        <function-ref name="set" scoped="" ref="0x4047ee18"/>
        <function-ref name="clr" scoped="" ref="0x4047eef4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x40484ca0" loc="77:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x40484ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40484e60"/>
        <function-ref name="isInput" scoped="" ref="0x40483010"/>
        <function-ref name="toggle" scoped="" ref="0x404830ec"/>
        <function-ref name="isOutput" scoped="" ref="0x404831c8"/>
        <function-ref name="get" scoped="" ref="0x404832a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x40483380"/>
        <function-ref name="set" scoped="" ref="0x4048345c"/>
        <function-ref name="clr" scoped="" ref="0x40483538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x4048f80c" loc="100:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x4048f80c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048f9cc"/>
        <function-ref name="isInput" scoped="" ref="0x4048faa8"/>
        <function-ref name="toggle" scoped="" ref="0x4048fb84"/>
        <function-ref name="isOutput" scoped="" ref="0x4048fc60"/>
        <function-ref name="get" scoped="" ref="0x4048fd3c"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048fe18"/>
        <function-ref name="set" scoped="" ref="0x4048fef4"/>
        <function-ref name="clr" scoped="" ref="0x4048e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x4048211c" loc="80:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x4048211c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404822dc"/>
        <function-ref name="isInput" scoped="" ref="0x404823b8"/>
        <function-ref name="toggle" scoped="" ref="0x40482494"/>
        <function-ref name="isOutput" scoped="" ref="0x40482570"/>
        <function-ref name="get" scoped="" ref="0x4048264c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40482728"/>
        <function-ref name="set" scoped="" ref="0x40482804"/>
        <function-ref name="clr" scoped="" ref="0x404828e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x4047c578" loc="69:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x4047c578"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047c738"/>
        <function-ref name="isInput" scoped="" ref="0x4047c814"/>
        <function-ref name="toggle" scoped="" ref="0x4047c8f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4047c9cc"/>
        <function-ref name="get" scoped="" ref="0x4047caa8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047cb84"/>
        <function-ref name="set" scoped="" ref="0x4047cc60"/>
        <function-ref name="clr" scoped="" ref="0x4047cd3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x40472bc4" loc="47:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x40472bc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40472d84"/>
        <function-ref name="isInput" scoped="" ref="0x40472e60"/>
        <function-ref name="toggle" scoped="" ref="0x40471010"/>
        <function-ref name="isOutput" scoped="" ref="0x404710ec"/>
        <function-ref name="get" scoped="" ref="0x404711c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404712a4"/>
        <function-ref name="set" scoped="" ref="0x40471380"/>
        <function-ref name="clr" scoped="" ref="0x4047145c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x404770c0" loc="58:/opt/tinyos/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x404770c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40477280"/>
        <function-ref name="isInput" scoped="" ref="0x4047735c"/>
        <function-ref name="toggle" scoped="" ref="0x40477438"/>
        <function-ref name="isOutput" scoped="" ref="0x40477514"/>
        <function-ref name="get" scoped="" ref="0x404775f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404776cc"/>
        <function-ref name="set" scoped="" ref="0x404777a8"/>
        <function-ref name="clr" scoped="" ref="0x40477884"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404b9010" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404b9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b91d0"/>
        <function-ref name="isInput" scoped="" ref="0x404b92ac"/>
        <function-ref name="toggle" scoped="" ref="0x404b9388"/>
        <function-ref name="isOutput" scoped="" ref="0x404b9464"/>
        <function-ref name="get" scoped="" ref="0x404b9540"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b961c"/>
        <function-ref name="set" scoped="" ref="0x404b96f8"/>
        <function-ref name="clr" scoped="" ref="0x404b97d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404b7c44" loc="49:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404b7c44"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b7e04"/>
        <function-ref name="isInput" scoped="" ref="0x404b7ee0"/>
        <function-ref name="toggle" scoped="" ref="0x404c2010"/>
        <function-ref name="isOutput" scoped="" ref="0x404c20ec"/>
        <function-ref name="get" scoped="" ref="0x404c21c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c22a4"/>
        <function-ref name="set" scoped="" ref="0x404c2380"/>
        <function-ref name="clr" scoped="" ref="0x404c245c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404bbd44" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404bbd44"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bbf04"/>
        <function-ref name="isInput" scoped="" ref="0x404ba010"/>
        <function-ref name="toggle" scoped="" ref="0x404ba0ec"/>
        <function-ref name="isOutput" scoped="" ref="0x404ba1c8"/>
        <function-ref name="get" scoped="" ref="0x404ba2a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ba380"/>
        <function-ref name="set" scoped="" ref="0x404ba45c"/>
        <function-ref name="clr" scoped="" ref="0x404ba538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404b9930" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404b9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b9af0"/>
        <function-ref name="isInput" scoped="" ref="0x404b9bcc"/>
        <function-ref name="toggle" scoped="" ref="0x404b9ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b9d84"/>
        <function-ref name="get" scoped="" ref="0x404b9e60"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b7010"/>
        <function-ref name="set" scoped="" ref="0x404b70ec"/>
        <function-ref name="clr" scoped="" ref="0x404b71c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404c25b8" loc="50:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404c25b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c2778"/>
        <function-ref name="isInput" scoped="" ref="0x404c2854"/>
        <function-ref name="toggle" scoped="" ref="0x404c2930"/>
        <function-ref name="isOutput" scoped="" ref="0x404c2a0c"/>
        <function-ref name="get" scoped="" ref="0x404c2ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c2bc4"/>
        <function-ref name="set" scoped="" ref="0x404c2ca0"/>
        <function-ref name="clr" scoped="" ref="0x404c2d7c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404ba694" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404ba694"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ba854"/>
        <function-ref name="isInput" scoped="" ref="0x404ba930"/>
        <function-ref name="toggle" scoped="" ref="0x404baa0c"/>
        <function-ref name="isOutput" scoped="" ref="0x404baae8"/>
        <function-ref name="get" scoped="" ref="0x404babc4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404baca0"/>
        <function-ref name="set" scoped="" ref="0x404bad7c"/>
        <function-ref name="clr" scoped="" ref="0x404bae58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404b7324" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404b7324"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b74e4"/>
        <function-ref name="isInput" scoped="" ref="0x404b75c0"/>
        <function-ref name="toggle" scoped="" ref="0x404b769c"/>
        <function-ref name="isOutput" scoped="" ref="0x404b7778"/>
        <function-ref name="get" scoped="" ref="0x404b7854"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b7930"/>
        <function-ref name="set" scoped="" ref="0x404b7a0c"/>
        <function-ref name="clr" scoped="" ref="0x404b7ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404c2ed8" loc="51:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404c2ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c10b8"/>
        <function-ref name="isInput" scoped="" ref="0x404c1194"/>
        <function-ref name="toggle" scoped="" ref="0x404c1270"/>
        <function-ref name="isOutput" scoped="" ref="0x404c134c"/>
        <function-ref name="get" scoped="" ref="0x404c1428"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c1504"/>
        <function-ref name="set" scoped="" ref="0x404c15e0"/>
        <function-ref name="clr" scoped="" ref="0x404c16bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411d021c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411d021c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411d03dc"/>
        <function-ref name="isInput" scoped="" ref="0x411d04b8"/>
        <function-ref name="toggle" scoped="" ref="0x411d0594"/>
        <function-ref name="isOutput" scoped="" ref="0x411d0670"/>
        <function-ref name="get" scoped="" ref="0x411d074c"/>
        <function-ref name="makeOutput" scoped="" ref="0x411d0828"/>
        <function-ref name="set" scoped="" ref="0x411d0904"/>
        <function-ref name="clr" scoped="" ref="0x411d09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411cfaec" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411cfaec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411cfcac"/>
        <function-ref name="isInput" scoped="" ref="0x411cfd88"/>
        <function-ref name="toggle" scoped="" ref="0x411cfe64"/>
        <function-ref name="isOutput" scoped="" ref="0x411ce010"/>
        <function-ref name="get" scoped="" ref="0x411ce0ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x411ce1c8"/>
        <function-ref name="set" scoped="" ref="0x411ce2a4"/>
        <function-ref name="clr" scoped="" ref="0x411ce380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411cd514" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411cd514"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411cd6d4"/>
        <function-ref name="isInput" scoped="" ref="0x411cd7b0"/>
        <function-ref name="toggle" scoped="" ref="0x411cd88c"/>
        <function-ref name="isOutput" scoped="" ref="0x411cd968"/>
        <function-ref name="get" scoped="" ref="0x411cda44"/>
        <function-ref name="makeOutput" scoped="" ref="0x411cdb20"/>
        <function-ref name="set" scoped="" ref="0x411cdbfc"/>
        <function-ref name="clr" scoped="" ref="0x411cdcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411cce8c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411cce8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411cb06c"/>
        <function-ref name="isInput" scoped="" ref="0x411cb148"/>
        <function-ref name="toggle" scoped="" ref="0x411cb224"/>
        <function-ref name="isOutput" scoped="" ref="0x411cb300"/>
        <function-ref name="get" scoped="" ref="0x411cb3dc"/>
        <function-ref name="makeOutput" scoped="" ref="0x411cb4b8"/>
        <function-ref name="set" scoped="" ref="0x411cb594"/>
        <function-ref name="clr" scoped="" ref="0x411cb670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411ca76c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411ca76c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411ca92c"/>
        <function-ref name="isInput" scoped="" ref="0x411caa08"/>
        <function-ref name="toggle" scoped="" ref="0x411caae4"/>
        <function-ref name="isOutput" scoped="" ref="0x411cabc0"/>
        <function-ref name="get" scoped="" ref="0x411cac9c"/>
        <function-ref name="makeOutput" scoped="" ref="0x411cad78"/>
        <function-ref name="set" scoped="" ref="0x411cae54"/>
        <function-ref name="clr" scoped="" ref="0x411c9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411c80f4" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411c80f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411c82b4"/>
        <function-ref name="isInput" scoped="" ref="0x411c8390"/>
        <function-ref name="toggle" scoped="" ref="0x411c846c"/>
        <function-ref name="isOutput" scoped="" ref="0x411c8548"/>
        <function-ref name="get" scoped="" ref="0x411c8624"/>
        <function-ref name="makeOutput" scoped="" ref="0x411c8700"/>
        <function-ref name="set" scoped="" ref="0x411c87dc"/>
        <function-ref name="clr" scoped="" ref="0x411c88b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411c799c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411c799c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411c7b5c"/>
        <function-ref name="isInput" scoped="" ref="0x411c7c38"/>
        <function-ref name="toggle" scoped="" ref="0x411c7d14"/>
        <function-ref name="isOutput" scoped="" ref="0x411c7df0"/>
        <function-ref name="get" scoped="" ref="0x411c7ecc"/>
        <function-ref name="makeOutput" scoped="" ref="0x411c6010"/>
        <function-ref name="set" scoped="" ref="0x411c60ec"/>
        <function-ref name="clr" scoped="" ref="0x411c61c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411c52bc" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411c52bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411c547c"/>
        <function-ref name="isInput" scoped="" ref="0x411c5558"/>
        <function-ref name="toggle" scoped="" ref="0x411c5634"/>
        <function-ref name="isOutput" scoped="" ref="0x411c5710"/>
        <function-ref name="get" scoped="" ref="0x411c57ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x411c58c8"/>
        <function-ref name="set" scoped="" ref="0x411c59a4"/>
        <function-ref name="clr" scoped="" ref="0x411c5a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404bd400" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404bd400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bd5c0"/>
        <function-ref name="isInput" scoped="" ref="0x404bd69c"/>
        <function-ref name="toggle" scoped="" ref="0x404bd778"/>
        <function-ref name="isOutput" scoped="" ref="0x404bd854"/>
        <function-ref name="get" scoped="" ref="0x404bd930"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bda0c"/>
        <function-ref name="set" scoped="" ref="0x404bdae8"/>
        <function-ref name="clr" scoped="" ref="0x404bdbc4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404c7010" loc="49:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404c7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c71d0"/>
        <function-ref name="isInput" scoped="" ref="0x404c72ac"/>
        <function-ref name="toggle" scoped="" ref="0x404c7388"/>
        <function-ref name="isOutput" scoped="" ref="0x404c7464"/>
        <function-ref name="get" scoped="" ref="0x404c7540"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c761c"/>
        <function-ref name="set" scoped="" ref="0x404c76f8"/>
        <function-ref name="clr" scoped="" ref="0x404c77d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404be0f4" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404be0f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404be2b4"/>
        <function-ref name="isInput" scoped="" ref="0x404be390"/>
        <function-ref name="toggle" scoped="" ref="0x404be46c"/>
        <function-ref name="isOutput" scoped="" ref="0x404be548"/>
        <function-ref name="get" scoped="" ref="0x404be624"/>
        <function-ref name="makeOutput" scoped="" ref="0x404be700"/>
        <function-ref name="set" scoped="" ref="0x404be7dc"/>
        <function-ref name="clr" scoped="" ref="0x404be8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404bdd20" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404bdd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bdee0"/>
        <function-ref name="isInput" scoped="" ref="0x404c8010"/>
        <function-ref name="toggle" scoped="" ref="0x404c80ec"/>
        <function-ref name="isOutput" scoped="" ref="0x404c81c8"/>
        <function-ref name="get" scoped="" ref="0x404c82a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c8380"/>
        <function-ref name="set" scoped="" ref="0x404c845c"/>
        <function-ref name="clr" scoped="" ref="0x404c8538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404c7930" loc="50:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404c7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c7af0"/>
        <function-ref name="isInput" scoped="" ref="0x404c7bcc"/>
        <function-ref name="toggle" scoped="" ref="0x404c7ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c7d84"/>
        <function-ref name="get" scoped="" ref="0x404c7e60"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c6010"/>
        <function-ref name="set" scoped="" ref="0x404c60ec"/>
        <function-ref name="clr" scoped="" ref="0x404c61c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404bea14" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404bea14"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bebd4"/>
        <function-ref name="isInput" scoped="" ref="0x404becb0"/>
        <function-ref name="toggle" scoped="" ref="0x404bed8c"/>
        <function-ref name="isOutput" scoped="" ref="0x404bee68"/>
        <function-ref name="get" scoped="" ref="0x404bd010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bd0ec"/>
        <function-ref name="set" scoped="" ref="0x404bd1c8"/>
        <function-ref name="clr" scoped="" ref="0x404bd2a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404c8694" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404c8694"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c8854"/>
        <function-ref name="isInput" scoped="" ref="0x404c8930"/>
        <function-ref name="toggle" scoped="" ref="0x404c8a0c"/>
        <function-ref name="isOutput" scoped="" ref="0x404c8ae8"/>
        <function-ref name="get" scoped="" ref="0x404c8bc4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c8ca0"/>
        <function-ref name="set" scoped="" ref="0x404c8d7c"/>
        <function-ref name="clr" scoped="" ref="0x404c8e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404c6324" loc="51:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404c6324"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c64e4"/>
        <function-ref name="isInput" scoped="" ref="0x404c65c0"/>
        <function-ref name="toggle" scoped="" ref="0x404c669c"/>
        <function-ref name="isOutput" scoped="" ref="0x404c6778"/>
        <function-ref name="get" scoped="" ref="0x404c6854"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c6930"/>
        <function-ref name="set" scoped="" ref="0x404c6a0c"/>
        <function-ref name="clr" scoped="" ref="0x404c6ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41222030" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41222030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412221f0"/>
        <function-ref name="isInput" scoped="" ref="0x412222cc"/>
        <function-ref name="toggle" scoped="" ref="0x412223a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41222484"/>
        <function-ref name="get" scoped="" ref="0x41222560"/>
        <function-ref name="makeOutput" scoped="" ref="0x4122263c"/>
        <function-ref name="set" scoped="" ref="0x41222718"/>
        <function-ref name="clr" scoped="" ref="0x412227f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412218d8" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412218d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41221a98"/>
        <function-ref name="isInput" scoped="" ref="0x41221b74"/>
        <function-ref name="toggle" scoped="" ref="0x41221c50"/>
        <function-ref name="isOutput" scoped="" ref="0x41221d2c"/>
        <function-ref name="get" scoped="" ref="0x41221e08"/>
        <function-ref name="makeOutput" scoped="" ref="0x41221ee4"/>
        <function-ref name="set" scoped="" ref="0x41220010"/>
        <function-ref name="clr" scoped="" ref="0x412200ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4121f21c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4121f21c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4121f3dc"/>
        <function-ref name="isInput" scoped="" ref="0x4121f4b8"/>
        <function-ref name="toggle" scoped="" ref="0x4121f594"/>
        <function-ref name="isOutput" scoped="" ref="0x4121f670"/>
        <function-ref name="get" scoped="" ref="0x4121f74c"/>
        <function-ref name="makeOutput" scoped="" ref="0x4121f828"/>
        <function-ref name="set" scoped="" ref="0x4121f904"/>
        <function-ref name="clr" scoped="" ref="0x4121f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4121eaec" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4121eaec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4121ecac"/>
        <function-ref name="isInput" scoped="" ref="0x4121ed88"/>
        <function-ref name="toggle" scoped="" ref="0x4121ee64"/>
        <function-ref name="isOutput" scoped="" ref="0x4121d010"/>
        <function-ref name="get" scoped="" ref="0x4121d0ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x4121d1c8"/>
        <function-ref name="set" scoped="" ref="0x4121d2a4"/>
        <function-ref name="clr" scoped="" ref="0x4121d380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4121c514" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4121c514"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4121c6d4"/>
        <function-ref name="isInput" scoped="" ref="0x4121c7b0"/>
        <function-ref name="toggle" scoped="" ref="0x4121c88c"/>
        <function-ref name="isOutput" scoped="" ref="0x4121c968"/>
        <function-ref name="get" scoped="" ref="0x4121ca44"/>
        <function-ref name="makeOutput" scoped="" ref="0x4121cb20"/>
        <function-ref name="set" scoped="" ref="0x4121cbfc"/>
        <function-ref name="clr" scoped="" ref="0x4121ccd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4121be8c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4121be8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4121a06c"/>
        <function-ref name="isInput" scoped="" ref="0x4121a148"/>
        <function-ref name="toggle" scoped="" ref="0x4121a224"/>
        <function-ref name="isOutput" scoped="" ref="0x4121a300"/>
        <function-ref name="get" scoped="" ref="0x4121a3dc"/>
        <function-ref name="makeOutput" scoped="" ref="0x4121a4b8"/>
        <function-ref name="set" scoped="" ref="0x4121a594"/>
        <function-ref name="clr" scoped="" ref="0x4121a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4121976c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4121976c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4121992c"/>
        <function-ref name="isInput" scoped="" ref="0x41219a08"/>
        <function-ref name="toggle" scoped="" ref="0x41219ae4"/>
        <function-ref name="isOutput" scoped="" ref="0x41219bc0"/>
        <function-ref name="get" scoped="" ref="0x41219c9c"/>
        <function-ref name="makeOutput" scoped="" ref="0x41219d78"/>
        <function-ref name="set" scoped="" ref="0x41219e54"/>
        <function-ref name="clr" scoped="" ref="0x41218010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412170f4" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412170f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412172b4"/>
        <function-ref name="isInput" scoped="" ref="0x41217390"/>
        <function-ref name="toggle" scoped="" ref="0x4121746c"/>
        <function-ref name="isOutput" scoped="" ref="0x41217548"/>
        <function-ref name="get" scoped="" ref="0x41217624"/>
        <function-ref name="makeOutput" scoped="" ref="0x41217700"/>
        <function-ref name="set" scoped="" ref="0x412177dc"/>
        <function-ref name="clr" scoped="" ref="0x412178b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404cd7b0" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404cd7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cd970"/>
        <function-ref name="isInput" scoped="" ref="0x404cda4c"/>
        <function-ref name="toggle" scoped="" ref="0x404cdb28"/>
        <function-ref name="isOutput" scoped="" ref="0x404cdc04"/>
        <function-ref name="get" scoped="" ref="0x404cdce0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cddbc"/>
        <function-ref name="set" scoped="" ref="0x404cde98"/>
        <function-ref name="clr" scoped="" ref="0x404cc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404cb400" loc="49:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404cb400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cb5c0"/>
        <function-ref name="isInput" scoped="" ref="0x404cb69c"/>
        <function-ref name="toggle" scoped="" ref="0x404cb778"/>
        <function-ref name="isOutput" scoped="" ref="0x404cb854"/>
        <function-ref name="get" scoped="" ref="0x404cb930"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cba0c"/>
        <function-ref name="set" scoped="" ref="0x404cbae8"/>
        <function-ref name="clr" scoped="" ref="0x404cbbc4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404ce528" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404ce528"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ce6e8"/>
        <function-ref name="isInput" scoped="" ref="0x404ce7c4"/>
        <function-ref name="toggle" scoped="" ref="0x404ce8a0"/>
        <function-ref name="isOutput" scoped="" ref="0x404ce97c"/>
        <function-ref name="get" scoped="" ref="0x404cea58"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ceb34"/>
        <function-ref name="set" scoped="" ref="0x404cec10"/>
        <function-ref name="clr" scoped="" ref="0x404cecec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404cc16c" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404cc16c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cc32c"/>
        <function-ref name="isInput" scoped="" ref="0x404cc408"/>
        <function-ref name="toggle" scoped="" ref="0x404cc4e4"/>
        <function-ref name="isOutput" scoped="" ref="0x404cc5c0"/>
        <function-ref name="get" scoped="" ref="0x404cc69c"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cc778"/>
        <function-ref name="set" scoped="" ref="0x404cc854"/>
        <function-ref name="clr" scoped="" ref="0x404cc930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404cbd20" loc="50:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404cbd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cbee0"/>
        <function-ref name="isInput" scoped="" ref="0x404ca010"/>
        <function-ref name="toggle" scoped="" ref="0x404ca0ec"/>
        <function-ref name="isOutput" scoped="" ref="0x404ca1c8"/>
        <function-ref name="get" scoped="" ref="0x404ca2a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ca380"/>
        <function-ref name="set" scoped="" ref="0x404ca45c"/>
        <function-ref name="clr" scoped="" ref="0x404ca538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404cee48" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404cee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cd050"/>
        <function-ref name="isInput" scoped="" ref="0x404cd12c"/>
        <function-ref name="toggle" scoped="" ref="0x404cd208"/>
        <function-ref name="isOutput" scoped="" ref="0x404cd2e4"/>
        <function-ref name="get" scoped="" ref="0x404cd3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cd49c"/>
        <function-ref name="set" scoped="" ref="0x404cd578"/>
        <function-ref name="clr" scoped="" ref="0x404cd654"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404cca8c" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404cca8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ccc4c"/>
        <function-ref name="isInput" scoped="" ref="0x404ccd28"/>
        <function-ref name="toggle" scoped="" ref="0x404cce04"/>
        <function-ref name="isOutput" scoped="" ref="0x404ccee0"/>
        <function-ref name="get" scoped="" ref="0x404cb010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cb0ec"/>
        <function-ref name="set" scoped="" ref="0x404cb1c8"/>
        <function-ref name="clr" scoped="" ref="0x404cb2a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404ca694" loc="51:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404ca694"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ca854"/>
        <function-ref name="isInput" scoped="" ref="0x404ca930"/>
        <function-ref name="toggle" scoped="" ref="0x404caa0c"/>
        <function-ref name="isOutput" scoped="" ref="0x404caae8"/>
        <function-ref name="get" scoped="" ref="0x404cabc4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404caca0"/>
        <function-ref name="set" scoped="" ref="0x404cad7c"/>
        <function-ref name="clr" scoped="" ref="0x404cae58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41232e38" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41232e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4122e010"/>
        <function-ref name="isInput" scoped="" ref="0x4122e0ec"/>
        <function-ref name="toggle" scoped="" ref="0x4122e1c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4122e2a4"/>
        <function-ref name="get" scoped="" ref="0x4122e380"/>
        <function-ref name="makeOutput" scoped="" ref="0x4122e45c"/>
        <function-ref name="set" scoped="" ref="0x4122e538"/>
        <function-ref name="clr" scoped="" ref="0x4122e614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4122d710" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4122d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4122d8d0"/>
        <function-ref name="isInput" scoped="" ref="0x4122d9ac"/>
        <function-ref name="toggle" scoped="" ref="0x4122da88"/>
        <function-ref name="isOutput" scoped="" ref="0x4122db64"/>
        <function-ref name="get" scoped="" ref="0x4122dc40"/>
        <function-ref name="makeOutput" scoped="" ref="0x4122dd1c"/>
        <function-ref name="set" scoped="" ref="0x4122ddf8"/>
        <function-ref name="clr" scoped="" ref="0x4122ded4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4122b010" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4122b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4122b1d0"/>
        <function-ref name="isInput" scoped="" ref="0x4122b2ac"/>
        <function-ref name="toggle" scoped="" ref="0x4122b388"/>
        <function-ref name="isOutput" scoped="" ref="0x4122b464"/>
        <function-ref name="get" scoped="" ref="0x4122b540"/>
        <function-ref name="makeOutput" scoped="" ref="0x4122b61c"/>
        <function-ref name="set" scoped="" ref="0x4122b6f8"/>
        <function-ref name="clr" scoped="" ref="0x4122b7d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4122a8b8" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4122a8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4122aa78"/>
        <function-ref name="isInput" scoped="" ref="0x4122ab54"/>
        <function-ref name="toggle" scoped="" ref="0x4122ac30"/>
        <function-ref name="isOutput" scoped="" ref="0x4122ad0c"/>
        <function-ref name="get" scoped="" ref="0x4122ade8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4122aec4"/>
        <function-ref name="set" scoped="" ref="0x4126b010"/>
        <function-ref name="clr" scoped="" ref="0x4126b0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4126a21c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4126a21c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4126a3dc"/>
        <function-ref name="isInput" scoped="" ref="0x4126a4b8"/>
        <function-ref name="toggle" scoped="" ref="0x4126a594"/>
        <function-ref name="isOutput" scoped="" ref="0x4126a670"/>
        <function-ref name="get" scoped="" ref="0x4126a74c"/>
        <function-ref name="makeOutput" scoped="" ref="0x4126a828"/>
        <function-ref name="set" scoped="" ref="0x4126a904"/>
        <function-ref name="clr" scoped="" ref="0x4126a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41269aec" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41269aec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41269cac"/>
        <function-ref name="isInput" scoped="" ref="0x41269d88"/>
        <function-ref name="toggle" scoped="" ref="0x41269e64"/>
        <function-ref name="isOutput" scoped="" ref="0x41268010"/>
        <function-ref name="get" scoped="" ref="0x412680ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x412681c8"/>
        <function-ref name="set" scoped="" ref="0x412682a4"/>
        <function-ref name="clr" scoped="" ref="0x41268380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41267514" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41267514"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412676d4"/>
        <function-ref name="isInput" scoped="" ref="0x412677b0"/>
        <function-ref name="toggle" scoped="" ref="0x4126788c"/>
        <function-ref name="isOutput" scoped="" ref="0x41267968"/>
        <function-ref name="get" scoped="" ref="0x41267a44"/>
        <function-ref name="makeOutput" scoped="" ref="0x41267b20"/>
        <function-ref name="set" scoped="" ref="0x41267bfc"/>
        <function-ref name="clr" scoped="" ref="0x41267cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41266e8c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41266e8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4126506c"/>
        <function-ref name="isInput" scoped="" ref="0x41265148"/>
        <function-ref name="toggle" scoped="" ref="0x41265224"/>
        <function-ref name="isOutput" scoped="" ref="0x41265300"/>
        <function-ref name="get" scoped="" ref="0x412653dc"/>
        <function-ref name="makeOutput" scoped="" ref="0x412654b8"/>
        <function-ref name="set" scoped="" ref="0x41265594"/>
        <function-ref name="clr" scoped="" ref="0x41265670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404d1c44" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404d1c44"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d1e04"/>
        <function-ref name="isInput" scoped="" ref="0x404d1ee0"/>
        <function-ref name="toggle" scoped="" ref="0x404d0010"/>
        <function-ref name="isOutput" scoped="" ref="0x404d00ec"/>
        <function-ref name="get" scoped="" ref="0x404d01c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d02a4"/>
        <function-ref name="set" scoped="" ref="0x404d0380"/>
        <function-ref name="clr" scoped="" ref="0x404d045c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404cf818" loc="49:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404cf818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cf9d8"/>
        <function-ref name="isInput" scoped="" ref="0x404cfab4"/>
        <function-ref name="toggle" scoped="" ref="0x404cfb90"/>
        <function-ref name="isOutput" scoped="" ref="0x404cfc6c"/>
        <function-ref name="get" scoped="" ref="0x404cfd48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cfe24"/>
        <function-ref name="set" scoped="" ref="0x404cff00"/>
        <function-ref name="clr" scoped="" ref="0x404db010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404d2954" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404d2954"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d2b14"/>
        <function-ref name="isInput" scoped="" ref="0x404d2bf0"/>
        <function-ref name="toggle" scoped="" ref="0x404d2ccc"/>
        <function-ref name="isOutput" scoped="" ref="0x404d2da8"/>
        <function-ref name="get" scoped="" ref="0x404d2e84"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d1010"/>
        <function-ref name="set" scoped="" ref="0x404d10ec"/>
        <function-ref name="clr" scoped="" ref="0x404d11c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404d05b8" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404d05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d0778"/>
        <function-ref name="isInput" scoped="" ref="0x404d0854"/>
        <function-ref name="toggle" scoped="" ref="0x404d0930"/>
        <function-ref name="isOutput" scoped="" ref="0x404d0a0c"/>
        <function-ref name="get" scoped="" ref="0x404d0ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d0bc4"/>
        <function-ref name="set" scoped="" ref="0x404d0ca0"/>
        <function-ref name="clr" scoped="" ref="0x404d0d7c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404db16c" loc="50:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404db16c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404db32c"/>
        <function-ref name="isInput" scoped="" ref="0x404db408"/>
        <function-ref name="toggle" scoped="" ref="0x404db4e4"/>
        <function-ref name="isOutput" scoped="" ref="0x404db5c0"/>
        <function-ref name="get" scoped="" ref="0x404db69c"/>
        <function-ref name="makeOutput" scoped="" ref="0x404db778"/>
        <function-ref name="set" scoped="" ref="0x404db854"/>
        <function-ref name="clr" scoped="" ref="0x404db930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404d1324" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404d1324"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d14e4"/>
        <function-ref name="isInput" scoped="" ref="0x404d15c0"/>
        <function-ref name="toggle" scoped="" ref="0x404d169c"/>
        <function-ref name="isOutput" scoped="" ref="0x404d1778"/>
        <function-ref name="get" scoped="" ref="0x404d1854"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d1930"/>
        <function-ref name="set" scoped="" ref="0x404d1a0c"/>
        <function-ref name="clr" scoped="" ref="0x404d1ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404d0ed8" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404d0ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cf0b8"/>
        <function-ref name="isInput" scoped="" ref="0x404cf194"/>
        <function-ref name="toggle" scoped="" ref="0x404cf270"/>
        <function-ref name="isOutput" scoped="" ref="0x404cf34c"/>
        <function-ref name="get" scoped="" ref="0x404cf428"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cf504"/>
        <function-ref name="set" scoped="" ref="0x404cf5e0"/>
        <function-ref name="clr" scoped="" ref="0x404cf6bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404dba8c" loc="51:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404dba8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dbc4c"/>
        <function-ref name="isInput" scoped="" ref="0x404dbd28"/>
        <function-ref name="toggle" scoped="" ref="0x404dbe04"/>
        <function-ref name="isOutput" scoped="" ref="0x404dbee0"/>
        <function-ref name="get" scoped="" ref="0x404da010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404da0ec"/>
        <function-ref name="set" scoped="" ref="0x404da1c8"/>
        <function-ref name="clr" scoped="" ref="0x404da2a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41281e38" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41281e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4127d010"/>
        <function-ref name="isInput" scoped="" ref="0x4127d0ec"/>
        <function-ref name="toggle" scoped="" ref="0x4127d1c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4127d2a4"/>
        <function-ref name="get" scoped="" ref="0x4127d380"/>
        <function-ref name="makeOutput" scoped="" ref="0x4127d45c"/>
        <function-ref name="set" scoped="" ref="0x4127d538"/>
        <function-ref name="clr" scoped="" ref="0x4127d614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4127c710" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4127c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4127c8d0"/>
        <function-ref name="isInput" scoped="" ref="0x4127c9ac"/>
        <function-ref name="toggle" scoped="" ref="0x4127ca88"/>
        <function-ref name="isOutput" scoped="" ref="0x4127cb64"/>
        <function-ref name="get" scoped="" ref="0x4127cc40"/>
        <function-ref name="makeOutput" scoped="" ref="0x4127cd1c"/>
        <function-ref name="set" scoped="" ref="0x4127cdf8"/>
        <function-ref name="clr" scoped="" ref="0x4127ced4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4127a010" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4127a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4127a1d0"/>
        <function-ref name="isInput" scoped="" ref="0x4127a2ac"/>
        <function-ref name="toggle" scoped="" ref="0x4127a388"/>
        <function-ref name="isOutput" scoped="" ref="0x4127a464"/>
        <function-ref name="get" scoped="" ref="0x4127a540"/>
        <function-ref name="makeOutput" scoped="" ref="0x4127a61c"/>
        <function-ref name="set" scoped="" ref="0x4127a6f8"/>
        <function-ref name="clr" scoped="" ref="0x4127a7d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412798b8" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412798b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41279a78"/>
        <function-ref name="isInput" scoped="" ref="0x41279b54"/>
        <function-ref name="toggle" scoped="" ref="0x41279c30"/>
        <function-ref name="isOutput" scoped="" ref="0x41279d0c"/>
        <function-ref name="get" scoped="" ref="0x41279de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x41279ec4"/>
        <function-ref name="set" scoped="" ref="0x41278010"/>
        <function-ref name="clr" scoped="" ref="0x412780ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4127721c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4127721c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412773dc"/>
        <function-ref name="isInput" scoped="" ref="0x412774b8"/>
        <function-ref name="toggle" scoped="" ref="0x41277594"/>
        <function-ref name="isOutput" scoped="" ref="0x41277670"/>
        <function-ref name="get" scoped="" ref="0x4127774c"/>
        <function-ref name="makeOutput" scoped="" ref="0x41277828"/>
        <function-ref name="set" scoped="" ref="0x41277904"/>
        <function-ref name="clr" scoped="" ref="0x412779e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41276aec" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41276aec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41276cac"/>
        <function-ref name="isInput" scoped="" ref="0x41276d88"/>
        <function-ref name="toggle" scoped="" ref="0x41276e64"/>
        <function-ref name="isOutput" scoped="" ref="0x41275010"/>
        <function-ref name="get" scoped="" ref="0x412750ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x412751c8"/>
        <function-ref name="set" scoped="" ref="0x412752a4"/>
        <function-ref name="clr" scoped="" ref="0x41275380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41274514" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41274514"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412746d4"/>
        <function-ref name="isInput" scoped="" ref="0x412747b0"/>
        <function-ref name="toggle" scoped="" ref="0x4127488c"/>
        <function-ref name="isOutput" scoped="" ref="0x41274968"/>
        <function-ref name="get" scoped="" ref="0x41274a44"/>
        <function-ref name="makeOutput" scoped="" ref="0x41274b20"/>
        <function-ref name="set" scoped="" ref="0x41274bfc"/>
        <function-ref name="clr" scoped="" ref="0x41274cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41273e8c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41273e8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4127106c"/>
        <function-ref name="isInput" scoped="" ref="0x41271148"/>
        <function-ref name="toggle" scoped="" ref="0x41271224"/>
        <function-ref name="isOutput" scoped="" ref="0x41271300"/>
        <function-ref name="get" scoped="" ref="0x412713dc"/>
        <function-ref name="makeOutput" scoped="" ref="0x412714b8"/>
        <function-ref name="set" scoped="" ref="0x41271594"/>
        <function-ref name="clr" scoped="" ref="0x41271670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404d6010" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404d6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d61d0"/>
        <function-ref name="isInput" scoped="" ref="0x404d62ac"/>
        <function-ref name="toggle" scoped="" ref="0x404d6388"/>
        <function-ref name="isOutput" scoped="" ref="0x404d6464"/>
        <function-ref name="get" scoped="" ref="0x404d6540"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d661c"/>
        <function-ref name="set" scoped="" ref="0x404d66f8"/>
        <function-ref name="clr" scoped="" ref="0x404d67d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404d5c44" loc="49:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404d5c44"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d5e04"/>
        <function-ref name="isInput" scoped="" ref="0x404d5ee0"/>
        <function-ref name="toggle" scoped="" ref="0x404e1010"/>
        <function-ref name="isOutput" scoped="" ref="0x404e10ec"/>
        <function-ref name="get" scoped="" ref="0x404e11c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e12a4"/>
        <function-ref name="set" scoped="" ref="0x404e1380"/>
        <function-ref name="clr" scoped="" ref="0x404e145c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404d8cb4" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404d8cb4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d8e74"/>
        <function-ref name="isInput" scoped="" ref="0x404d7010"/>
        <function-ref name="toggle" scoped="" ref="0x404d70ec"/>
        <function-ref name="isOutput" scoped="" ref="0x404d71c8"/>
        <function-ref name="get" scoped="" ref="0x404d72a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d7380"/>
        <function-ref name="set" scoped="" ref="0x404d745c"/>
        <function-ref name="clr" scoped="" ref="0x404d7538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404d6930" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404d6930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d6af0"/>
        <function-ref name="isInput" scoped="" ref="0x404d6bcc"/>
        <function-ref name="toggle" scoped="" ref="0x404d6ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d6d84"/>
        <function-ref name="get" scoped="" ref="0x404d6e60"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d5010"/>
        <function-ref name="set" scoped="" ref="0x404d50ec"/>
        <function-ref name="clr" scoped="" ref="0x404d51c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404e15b8" loc="50:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404e15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e1778"/>
        <function-ref name="isInput" scoped="" ref="0x404e1854"/>
        <function-ref name="toggle" scoped="" ref="0x404e1930"/>
        <function-ref name="isOutput" scoped="" ref="0x404e1a0c"/>
        <function-ref name="get" scoped="" ref="0x404e1ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e1bc4"/>
        <function-ref name="set" scoped="" ref="0x404e1ca0"/>
        <function-ref name="clr" scoped="" ref="0x404e1d7c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404d7694" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404d7694"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d7854"/>
        <function-ref name="isInput" scoped="" ref="0x404d7930"/>
        <function-ref name="toggle" scoped="" ref="0x404d7a0c"/>
        <function-ref name="isOutput" scoped="" ref="0x404d7ae8"/>
        <function-ref name="get" scoped="" ref="0x404d7bc4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d7ca0"/>
        <function-ref name="set" scoped="" ref="0x404d7d7c"/>
        <function-ref name="clr" scoped="" ref="0x404d7e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404d5324" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404d5324"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d54e4"/>
        <function-ref name="isInput" scoped="" ref="0x404d55c0"/>
        <function-ref name="toggle" scoped="" ref="0x404d569c"/>
        <function-ref name="isOutput" scoped="" ref="0x404d5778"/>
        <function-ref name="get" scoped="" ref="0x404d5854"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d5930"/>
        <function-ref name="set" scoped="" ref="0x404d5a0c"/>
        <function-ref name="clr" scoped="" ref="0x404d5ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404e1ed8" loc="51:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404e1ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e00b8"/>
        <function-ref name="isInput" scoped="" ref="0x404e0194"/>
        <function-ref name="toggle" scoped="" ref="0x404e0270"/>
        <function-ref name="isOutput" scoped="" ref="0x404e034c"/>
        <function-ref name="get" scoped="" ref="0x404e0428"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e0504"/>
        <function-ref name="set" scoped="" ref="0x404e05e0"/>
        <function-ref name="clr" scoped="" ref="0x404e06bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412cf690" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412cf690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412cf850"/>
        <function-ref name="isInput" scoped="" ref="0x412cf92c"/>
        <function-ref name="toggle" scoped="" ref="0x412cfa08"/>
        <function-ref name="isOutput" scoped="" ref="0x412cfae4"/>
        <function-ref name="get" scoped="" ref="0x412cfbc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x412cfc9c"/>
        <function-ref name="set" scoped="" ref="0x412cfd78"/>
        <function-ref name="clr" scoped="" ref="0x412cfe54"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412cd010" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412cd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412cd1d0"/>
        <function-ref name="isInput" scoped="" ref="0x412cd2ac"/>
        <function-ref name="toggle" scoped="" ref="0x412cd388"/>
        <function-ref name="isOutput" scoped="" ref="0x412cd464"/>
        <function-ref name="get" scoped="" ref="0x412cd540"/>
        <function-ref name="makeOutput" scoped="" ref="0x412cd61c"/>
        <function-ref name="set" scoped="" ref="0x412cd6f8"/>
        <function-ref name="clr" scoped="" ref="0x412cd7d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412cc8b8" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412cc8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412cca78"/>
        <function-ref name="isInput" scoped="" ref="0x412ccb54"/>
        <function-ref name="toggle" scoped="" ref="0x412ccc30"/>
        <function-ref name="isOutput" scoped="" ref="0x412ccd0c"/>
        <function-ref name="get" scoped="" ref="0x412ccde8"/>
        <function-ref name="makeOutput" scoped="" ref="0x412ccec4"/>
        <function-ref name="set" scoped="" ref="0x412cb010"/>
        <function-ref name="clr" scoped="" ref="0x412cb0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412ca21c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412ca21c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412ca3dc"/>
        <function-ref name="isInput" scoped="" ref="0x412ca4b8"/>
        <function-ref name="toggle" scoped="" ref="0x412ca594"/>
        <function-ref name="isOutput" scoped="" ref="0x412ca670"/>
        <function-ref name="get" scoped="" ref="0x412ca74c"/>
        <function-ref name="makeOutput" scoped="" ref="0x412ca828"/>
        <function-ref name="set" scoped="" ref="0x412ca904"/>
        <function-ref name="clr" scoped="" ref="0x412ca9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412c8aec" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412c8aec"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412c8cac"/>
        <function-ref name="isInput" scoped="" ref="0x412c8d88"/>
        <function-ref name="toggle" scoped="" ref="0x412c8e64"/>
        <function-ref name="isOutput" scoped="" ref="0x412c7010"/>
        <function-ref name="get" scoped="" ref="0x412c70ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x412c71c8"/>
        <function-ref name="set" scoped="" ref="0x412c72a4"/>
        <function-ref name="clr" scoped="" ref="0x412c7380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412c6514" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412c6514"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412c66d4"/>
        <function-ref name="isInput" scoped="" ref="0x412c67b0"/>
        <function-ref name="toggle" scoped="" ref="0x412c688c"/>
        <function-ref name="isOutput" scoped="" ref="0x412c6968"/>
        <function-ref name="get" scoped="" ref="0x412c6a44"/>
        <function-ref name="makeOutput" scoped="" ref="0x412c6b20"/>
        <function-ref name="set" scoped="" ref="0x412c6bfc"/>
        <function-ref name="clr" scoped="" ref="0x412c6cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412c5e8c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412c5e8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412c406c"/>
        <function-ref name="isInput" scoped="" ref="0x412c4148"/>
        <function-ref name="toggle" scoped="" ref="0x412c4224"/>
        <function-ref name="isOutput" scoped="" ref="0x412c4300"/>
        <function-ref name="get" scoped="" ref="0x412c43dc"/>
        <function-ref name="makeOutput" scoped="" ref="0x412c44b8"/>
        <function-ref name="set" scoped="" ref="0x412c4594"/>
        <function-ref name="clr" scoped="" ref="0x412c4670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412c376c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412c376c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412c392c"/>
        <function-ref name="isInput" scoped="" ref="0x412c3a08"/>
        <function-ref name="toggle" scoped="" ref="0x412c3ae4"/>
        <function-ref name="isOutput" scoped="" ref="0x412c3bc0"/>
        <function-ref name="get" scoped="" ref="0x412c3c9c"/>
        <function-ref name="makeOutput" scoped="" ref="0x412c3d78"/>
        <function-ref name="set" scoped="" ref="0x412c3e54"/>
        <function-ref name="clr" scoped="" ref="0x412c2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404dc400" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404dc400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dc5c0"/>
        <function-ref name="isInput" scoped="" ref="0x404dc69c"/>
        <function-ref name="toggle" scoped="" ref="0x404dc778"/>
        <function-ref name="isOutput" scoped="" ref="0x404dc854"/>
        <function-ref name="get" scoped="" ref="0x404dc930"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dca0c"/>
        <function-ref name="set" scoped="" ref="0x404dcae8"/>
        <function-ref name="clr" scoped="" ref="0x404dcbc4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404e8010" loc="49:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404e8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e81d0"/>
        <function-ref name="isInput" scoped="" ref="0x404e82ac"/>
        <function-ref name="toggle" scoped="" ref="0x404e8388"/>
        <function-ref name="isOutput" scoped="" ref="0x404e8464"/>
        <function-ref name="get" scoped="" ref="0x404e8540"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e861c"/>
        <function-ref name="set" scoped="" ref="0x404e86f8"/>
        <function-ref name="clr" scoped="" ref="0x404e87d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404dd0f4" loc="44:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404dd0f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dd2b4"/>
        <function-ref name="isInput" scoped="" ref="0x404dd390"/>
        <function-ref name="toggle" scoped="" ref="0x404dd46c"/>
        <function-ref name="isOutput" scoped="" ref="0x404dd548"/>
        <function-ref name="get" scoped="" ref="0x404dd624"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dd700"/>
        <function-ref name="set" scoped="" ref="0x404dd7dc"/>
        <function-ref name="clr" scoped="" ref="0x404dd8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404dcd20" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404dcd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dcee0"/>
        <function-ref name="isInput" scoped="" ref="0x404e9010"/>
        <function-ref name="toggle" scoped="" ref="0x404e90ec"/>
        <function-ref name="isOutput" scoped="" ref="0x404e91c8"/>
        <function-ref name="get" scoped="" ref="0x404e92a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e9380"/>
        <function-ref name="set" scoped="" ref="0x404e945c"/>
        <function-ref name="clr" scoped="" ref="0x404e9538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404e8930" loc="50:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404e8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e8af0"/>
        <function-ref name="isInput" scoped="" ref="0x404e8bcc"/>
        <function-ref name="toggle" scoped="" ref="0x404e8ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e8d84"/>
        <function-ref name="get" scoped="" ref="0x404e8e60"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e7010"/>
        <function-ref name="set" scoped="" ref="0x404e70ec"/>
        <function-ref name="clr" scoped="" ref="0x404e71c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404dda14" loc="45:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404dda14"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ddbd4"/>
        <function-ref name="isInput" scoped="" ref="0x404ddcb0"/>
        <function-ref name="toggle" scoped="" ref="0x404ddd8c"/>
        <function-ref name="isOutput" scoped="" ref="0x404dde68"/>
        <function-ref name="get" scoped="" ref="0x404dc010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dc0ec"/>
        <function-ref name="set" scoped="" ref="0x404dc1c8"/>
        <function-ref name="clr" scoped="" ref="0x404dc2a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404e9694" loc="48:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404e9694"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e9854"/>
        <function-ref name="isInput" scoped="" ref="0x404e9930"/>
        <function-ref name="toggle" scoped="" ref="0x404e9a0c"/>
        <function-ref name="isOutput" scoped="" ref="0x404e9ae8"/>
        <function-ref name="get" scoped="" ref="0x404e9bc4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e9ca0"/>
        <function-ref name="set" scoped="" ref="0x404e9d7c"/>
        <function-ref name="clr" scoped="" ref="0x404e9e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404e7324" loc="51:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404e7324"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e74e4"/>
        <function-ref name="isInput" scoped="" ref="0x404e75c0"/>
        <function-ref name="toggle" scoped="" ref="0x404e769c"/>
        <function-ref name="isOutput" scoped="" ref="0x404e7778"/>
        <function-ref name="get" scoped="" ref="0x404e7854"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e7930"/>
        <function-ref name="set" scoped="" ref="0x404e7a0c"/>
        <function-ref name="clr" scoped="" ref="0x404e7ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412dc594" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412dc594"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412dc754"/>
        <function-ref name="isInput" scoped="" ref="0x412dc830"/>
        <function-ref name="toggle" scoped="" ref="0x412dc90c"/>
        <function-ref name="isOutput" scoped="" ref="0x412dc9e8"/>
        <function-ref name="get" scoped="" ref="0x412dcac4"/>
        <function-ref name="makeOutput" scoped="" ref="0x412dcba0"/>
        <function-ref name="set" scoped="" ref="0x412dcc7c"/>
        <function-ref name="clr" scoped="" ref="0x412dcd58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412dbe8c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412dbe8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412da06c"/>
        <function-ref name="isInput" scoped="" ref="0x412da148"/>
        <function-ref name="toggle" scoped="" ref="0x412da224"/>
        <function-ref name="isOutput" scoped="" ref="0x412da300"/>
        <function-ref name="get" scoped="" ref="0x412da3dc"/>
        <function-ref name="makeOutput" scoped="" ref="0x412da4b8"/>
        <function-ref name="set" scoped="" ref="0x412da594"/>
        <function-ref name="clr" scoped="" ref="0x412da670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412d976c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412d976c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412d992c"/>
        <function-ref name="isInput" scoped="" ref="0x412d9a08"/>
        <function-ref name="toggle" scoped="" ref="0x412d9ae4"/>
        <function-ref name="isOutput" scoped="" ref="0x412d9bc0"/>
        <function-ref name="get" scoped="" ref="0x412d9c9c"/>
        <function-ref name="makeOutput" scoped="" ref="0x412d9d78"/>
        <function-ref name="set" scoped="" ref="0x412d9e54"/>
        <function-ref name="clr" scoped="" ref="0x412d8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412d70f4" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412d70f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412d72b4"/>
        <function-ref name="isInput" scoped="" ref="0x412d7390"/>
        <function-ref name="toggle" scoped="" ref="0x412d746c"/>
        <function-ref name="isOutput" scoped="" ref="0x412d7548"/>
        <function-ref name="get" scoped="" ref="0x412d7624"/>
        <function-ref name="makeOutput" scoped="" ref="0x412d7700"/>
        <function-ref name="set" scoped="" ref="0x412d77dc"/>
        <function-ref name="clr" scoped="" ref="0x412d78b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412d699c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412d699c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412d6b5c"/>
        <function-ref name="isInput" scoped="" ref="0x412d6c38"/>
        <function-ref name="toggle" scoped="" ref="0x412d6d14"/>
        <function-ref name="isOutput" scoped="" ref="0x412d6df0"/>
        <function-ref name="get" scoped="" ref="0x412d6ecc"/>
        <function-ref name="makeOutput" scoped="" ref="0x412d5010"/>
        <function-ref name="set" scoped="" ref="0x412d50ec"/>
        <function-ref name="clr" scoped="" ref="0x412d51c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412d42bc" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412d42bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412d447c"/>
        <function-ref name="isInput" scoped="" ref="0x412d4558"/>
        <function-ref name="toggle" scoped="" ref="0x412d4634"/>
        <function-ref name="isOutput" scoped="" ref="0x412d4710"/>
        <function-ref name="get" scoped="" ref="0x412d47ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x412d48c8"/>
        <function-ref name="set" scoped="" ref="0x412d49a4"/>
        <function-ref name="clr" scoped="" ref="0x412d4a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x412d3b8c" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x412d3b8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x412d3d4c"/>
        <function-ref name="isInput" scoped="" ref="0x412d3e28"/>
        <function-ref name="toggle" scoped="" ref="0x412d3f04"/>
        <function-ref name="isOutput" scoped="" ref="0x412d2010"/>
        <function-ref name="get" scoped="" ref="0x412d20ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x412d21c8"/>
        <function-ref name="set" scoped="" ref="0x412d22a4"/>
        <function-ref name="clr" scoped="" ref="0x412d2380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41316514" loc="46:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41316514"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413166d4"/>
        <function-ref name="isInput" scoped="" ref="0x413167b0"/>
        <function-ref name="toggle" scoped="" ref="0x4131688c"/>
        <function-ref name="isOutput" scoped="" ref="0x41316968"/>
        <function-ref name="get" scoped="" ref="0x41316a44"/>
        <function-ref name="makeOutput" scoped="" ref="0x41316b20"/>
        <function-ref name="set" scoped="" ref="0x41316bfc"/>
        <function-ref name="clr" scoped="" ref="0x41316cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404e39a0" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404e39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e3b60"/>
        <function-ref name="isInput" scoped="" ref="0x404e3c3c"/>
        <function-ref name="toggle" scoped="" ref="0x404e3d18"/>
        <function-ref name="isOutput" scoped="" ref="0x404e3df4"/>
        <function-ref name="get" scoped="" ref="0x404e3ed0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f0010"/>
        <function-ref name="set" scoped="" ref="0x404f00ec"/>
        <function-ref name="clr" scoped="" ref="0x404f01c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404fe010" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404fe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fe1d0"/>
        <function-ref name="isInput" scoped="" ref="0x404fe2ac"/>
        <function-ref name="toggle" scoped="" ref="0x404fe388"/>
        <function-ref name="isOutput" scoped="" ref="0x404fe464"/>
        <function-ref name="get" scoped="" ref="0x404fe540"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fe61c"/>
        <function-ref name="set" scoped="" ref="0x404fe6f8"/>
        <function-ref name="clr" scoped="" ref="0x404fe7d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404fc694" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404fc694"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fc854"/>
        <function-ref name="isInput" scoped="" ref="0x404fc930"/>
        <function-ref name="toggle" scoped="" ref="0x404fca0c"/>
        <function-ref name="isOutput" scoped="" ref="0x404fcae8"/>
        <function-ref name="get" scoped="" ref="0x404fcbc4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fcca0"/>
        <function-ref name="set" scoped="" ref="0x404fcd7c"/>
        <function-ref name="clr" scoped="" ref="0x404fce58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404fad30" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404fad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404faef0"/>
        <function-ref name="isInput" scoped="" ref="0x404f8010"/>
        <function-ref name="toggle" scoped="" ref="0x404f80ec"/>
        <function-ref name="isOutput" scoped="" ref="0x404f81c8"/>
        <function-ref name="get" scoped="" ref="0x404f82a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f8380"/>
        <function-ref name="set" scoped="" ref="0x404f845c"/>
        <function-ref name="clr" scoped="" ref="0x404f8538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4050439c" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4050439c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050455c"/>
        <function-ref name="isInput" scoped="" ref="0x40504638"/>
        <function-ref name="toggle" scoped="" ref="0x40504714"/>
        <function-ref name="isOutput" scoped="" ref="0x405047f0"/>
        <function-ref name="get" scoped="" ref="0x405048cc"/>
        <function-ref name="makeOutput" scoped="" ref="0x405049a8"/>
        <function-ref name="set" scoped="" ref="0x40504a84"/>
        <function-ref name="clr" scoped="" ref="0x40504b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405029ac" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405029ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40502b6c"/>
        <function-ref name="isInput" scoped="" ref="0x40502c48"/>
        <function-ref name="toggle" scoped="" ref="0x40502d24"/>
        <function-ref name="isOutput" scoped="" ref="0x40502e00"/>
        <function-ref name="get" scoped="" ref="0x40502edc"/>
        <function-ref name="makeOutput" scoped="" ref="0x40501010"/>
        <function-ref name="set" scoped="" ref="0x405010ec"/>
        <function-ref name="clr" scoped="" ref="0x405011c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4050c080" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4050c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050c240"/>
        <function-ref name="isInput" scoped="" ref="0x4050c31c"/>
        <function-ref name="toggle" scoped="" ref="0x4050c3f8"/>
        <function-ref name="isOutput" scoped="" ref="0x4050c4d4"/>
        <function-ref name="get" scoped="" ref="0x4050c5b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050c68c"/>
        <function-ref name="set" scoped="" ref="0x4050c768"/>
        <function-ref name="clr" scoped="" ref="0x4050c844"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4050a6c8" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4050a6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050a888"/>
        <function-ref name="isInput" scoped="" ref="0x4050a964"/>
        <function-ref name="toggle" scoped="" ref="0x4050aa40"/>
        <function-ref name="isOutput" scoped="" ref="0x4050ab1c"/>
        <function-ref name="get" scoped="" ref="0x4050abf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050acd4"/>
        <function-ref name="set" scoped="" ref="0x4050adb0"/>
        <function-ref name="clr" scoped="" ref="0x4050ae8c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40508d30" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40508d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40508ef0"/>
        <function-ref name="isInput" scoped="" ref="0x40507010"/>
        <function-ref name="toggle" scoped="" ref="0x405070ec"/>
        <function-ref name="isOutput" scoped="" ref="0x405071c8"/>
        <function-ref name="get" scoped="" ref="0x405072a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x40507380"/>
        <function-ref name="set" scoped="" ref="0x4050745c"/>
        <function-ref name="clr" scoped="" ref="0x40507538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4051239c" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4051239c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051255c"/>
        <function-ref name="isInput" scoped="" ref="0x40512638"/>
        <function-ref name="toggle" scoped="" ref="0x40512714"/>
        <function-ref name="isOutput" scoped="" ref="0x405127f0"/>
        <function-ref name="get" scoped="" ref="0x405128cc"/>
        <function-ref name="makeOutput" scoped="" ref="0x405129a8"/>
        <function-ref name="set" scoped="" ref="0x40512a84"/>
        <function-ref name="clr" scoped="" ref="0x40512b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405109ac" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405109ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40510b6c"/>
        <function-ref name="isInput" scoped="" ref="0x40510c48"/>
        <function-ref name="toggle" scoped="" ref="0x40510d24"/>
        <function-ref name="isOutput" scoped="" ref="0x40510e00"/>
        <function-ref name="get" scoped="" ref="0x40510edc"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050f010"/>
        <function-ref name="set" scoped="" ref="0x4050f0ec"/>
        <function-ref name="clr" scoped="" ref="0x4050f1c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4051a010" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4051a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051a1d0"/>
        <function-ref name="isInput" scoped="" ref="0x4051a2ac"/>
        <function-ref name="toggle" scoped="" ref="0x4051a388"/>
        <function-ref name="isOutput" scoped="" ref="0x4051a464"/>
        <function-ref name="get" scoped="" ref="0x4051a540"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051a61c"/>
        <function-ref name="set" scoped="" ref="0x4051a6f8"/>
        <function-ref name="clr" scoped="" ref="0x4051a7d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40518694" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40518694"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40518854"/>
        <function-ref name="isInput" scoped="" ref="0x40518930"/>
        <function-ref name="toggle" scoped="" ref="0x40518a0c"/>
        <function-ref name="isOutput" scoped="" ref="0x40518ae8"/>
        <function-ref name="get" scoped="" ref="0x40518bc4"/>
        <function-ref name="makeOutput" scoped="" ref="0x40518ca0"/>
        <function-ref name="set" scoped="" ref="0x40518d7c"/>
        <function-ref name="clr" scoped="" ref="0x40518e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40516d30" loc="47:/opt/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40516d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40516ef0"/>
        <function-ref name="isInput" scoped="" ref="0x40515010"/>
        <function-ref name="toggle" scoped="" ref="0x405150ec"/>
        <function-ref name="isOutput" scoped="" ref="0x405151c8"/>
        <function-ref name="get" scoped="" ref="0x405152a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x40515380"/>
        <function-ref name="set" scoped="" ref="0x4051545c"/>
        <function-ref name="clr" scoped="" ref="0x40515538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4053ae90" loc="61:/opt/tinyos/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4053ae90"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4031313c"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4031313c"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4053906c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40539240" loc="62:/opt/tinyos/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40539240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40539400"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x405394dc"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x405395b8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40539694"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40539770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40544030" loc="60:/opt/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40544030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405441f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40465310" loc="57:/opt/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40465310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404654d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40465c24" loc="59:/opt/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40465c24"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40465de4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x40465688" loc="58:/opt/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40465688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40465848"/>
        <function-ref name="taskLoop" scoped="" ref="0x40465924"/>
        <function-ref name="runNextTask" scoped="" ref="0x40465a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4032ca44" loc="48:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x4032ca44"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4032cc04"/>
        <function-ref name="runTask" scoped="" ref="0x4032cce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403254f8" loc="47:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403254f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403256b8"/>
        <function-ref name="taskLoop" scoped="" ref="0x40325794"/>
        <function-ref name="runNextTask" scoped="" ref="0x40325870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4038e0fc" loc="56:/opt/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x4038e0fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4038e2bc"/>
        <function-ref name="runTask" scoped="" ref="0x4038e398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x4038ecd8" loc="57:/opt/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4038ecd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4038ee98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4038f860" loc="55:/opt/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4038f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4038fa20"/>
        <function-ref name="taskLoop" scoped="" ref="0x4038fafc"/>
        <function-ref name="runNextTask" scoped="" ref="0x4038fbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403a1288" loc="88:/opt/tinyos/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403a1288"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403a1448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403a0010" loc="84:/opt/tinyos/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403a0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403a01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403a0c44" loc="85:/opt/tinyos/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403a0c44"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403a0e04"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4045809c" loc="46:/opt/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4045809c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4045825c"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40458338"/>
        <function-ref name="led1On" scoped="" ref="0x40458414"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404584f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404585cc"/>
        <function-ref name="get" scoped="" ref="0x404586a8"/>
        <function-ref name="led1Off" scoped="" ref="0x40458784"/>
        <function-ref name="led2Off" scoped="" ref="0x40458af4"/>
        <function-ref name="set" scoped="" ref="0x40458860"/>
        <function-ref name="led0On" scoped="" ref="0x4045893c"/>
        <function-ref name="led2On" scoped="" ref="0x40458a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40556310" loc="50:/opt/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40556310"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405564d0"/>
        <function-ref name="isInput" scoped="" ref="0x405565ac"/>
        <function-ref name="toggle" scoped="" ref="0x40556688"/>
        <function-ref name="isOutput" scoped="" ref="0x40556764"/>
        <function-ref name="get" scoped="" ref="0x40556840"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055691c"/>
        <function-ref name="set" scoped="" ref="0x405569f8"/>
        <function-ref name="clr" scoped="" ref="0x40556ad4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40557328" loc="46:/opt/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40557328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405574e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40556cb8" loc="51:/opt/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40556cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40556e78"/>
        <function-ref name="isInput" scoped="" ref="0x40555010"/>
        <function-ref name="toggle" scoped="" ref="0x405550ec"/>
        <function-ref name="isOutput" scoped="" ref="0x405551c8"/>
        <function-ref name="get" scoped="" ref="0x405552a4"/>
        <function-ref name="makeOutput" scoped="" ref="0x40555380"/>
        <function-ref name="set" scoped="" ref="0x4055545c"/>
        <function-ref name="clr" scoped="" ref="0x40555538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40557650" loc="47:/opt/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40557650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40557810"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405578ec"/>
        <function-ref name="led1On" scoped="" ref="0x405579c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40557aa4"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40557b80"/>
        <function-ref name="get" scoped="" ref="0x40557c5c"/>
        <function-ref name="led1Off" scoped="" ref="0x40557d38"/>
        <function-ref name="led2Off" scoped="" ref="0x405560ec"/>
        <function-ref name="set" scoped="" ref="0x40557e14"/>
        <function-ref name="led0On" scoped="" ref="0x40557ef0"/>
        <function-ref name="led2On" scoped="" ref="0x40556010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x4055571c" loc="52:/opt/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4055571c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405558dc"/>
        <function-ref name="isInput" scoped="" ref="0x405559b8"/>
        <function-ref name="toggle" scoped="" ref="0x40555a94"/>
        <function-ref name="isOutput" scoped="" ref="0x40555b70"/>
        <function-ref name="get" scoped="" ref="0x40555c4c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40555d28"/>
        <function-ref name="set" scoped="" ref="0x40555e04"/>
        <function-ref name="clr" scoped="" ref="0x40555ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40564030" loc="44:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40564030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405641f0"/>
        <function-ref name="isInput" scoped="" ref="0x405642cc"/>
        <function-ref name="toggle" scoped="" ref="0x405643a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40564484"/>
        <function-ref name="get" scoped="" ref="0x40564560"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056463c"/>
        <function-ref name="set" scoped="" ref="0x40564718"/>
        <function-ref name="clr" scoped="" ref="0x405647f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x405649f8" loc="45:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x405649f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40564bb8"/>
        <function-ref name="isInput" scoped="" ref="0x40564c94"/>
        <function-ref name="toggle" scoped="" ref="0x40564d70"/>
        <function-ref name="isOutput" scoped="" ref="0x40564e4c"/>
        <function-ref name="get" scoped="" ref="0x40564f28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40563018"/>
        <function-ref name="set" scoped="" ref="0x405630f4"/>
        <function-ref name="clr" scoped="" ref="0x405631d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40563d20" loc="47:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40563d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40563ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x405633d4" loc="46:/opt/tinyos/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x405633d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40563594"/>
        <function-ref name="isInput" scoped="" ref="0x40563670"/>
        <function-ref name="toggle" scoped="" ref="0x4056374c"/>
        <function-ref name="isOutput" scoped="" ref="0x40563828"/>
        <function-ref name="get" scoped="" ref="0x40563904"/>
        <function-ref name="makeOutput" scoped="" ref="0x405639e0"/>
        <function-ref name="set" scoped="" ref="0x40563abc"/>
        <function-ref name="clr" scoped="" ref="0x40563b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40561ab4" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="SenseAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40561ab4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4056b490"/>
        <function-ref name="fired" scoped="" ref="0x405607bc"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40560e7c"/>
        <function-ref name="isOneShot" scoped="" ref="0x40560c3c"/>
        <function-ref name="getdt" scoped="" ref="0x4056b910"/>
        <function-ref name="gett0" scoped="" ref="0x4056b6d0"/>
        <function-ref name="isRunning" scoped="" ref="0x405609fc"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405600ac"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4056b190"/>
        <function-ref name="startOneShot" scoped="" ref="0x40560314"/>
        <function-ref name="stop" scoped="" ref="0x4056057c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x4056a5ec" loc="49:/opt/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x4056a5ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40568010"/>
        <function-ref name="fired" scoped="" ref="0x405692ec"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405699ac"/>
        <function-ref name="isOneShot" scoped="" ref="0x4056976c"/>
        <function-ref name="getdt" scoped="" ref="0x40568490"/>
        <function-ref name="gett0" scoped="" ref="0x40568250"/>
        <function-ref name="isRunning" scoped="" ref="0x4056952c"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4056abc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40569cac"/>
        <function-ref name="startOneShot" scoped="" ref="0x4056ae28"/>
        <function-ref name="stop" scoped="" ref="0x405690ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40574458" loc="46:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40574458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40573e2c"/>
        <function-ref name="fired" scoped="" ref="0x4057316c"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4057382c"/>
        <function-ref name="isOneShot" scoped="" ref="0x405735ec"/>
        <function-ref name="getdt" scoped="" ref="0x405722cc"/>
        <function-ref name="gett0" scoped="" ref="0x4057208c"/>
        <function-ref name="isRunning" scoped="" ref="0x405733ac"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40574a2c"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40573b2c"/>
        <function-ref name="startOneShot" scoped="" ref="0x40574c94"/>
        <function-ref name="stop" scoped="" ref="0x40574efc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4057e304" loc="47:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4057e304"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4057e8f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40568cc8" loc="45:/opt/tinyos/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40568cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40568e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40583be4" loc="29:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40583be4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405852ec"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405857a4"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40585548"/>
        <function-ref name="overflow" scoped="" ref="0x40585a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405708e4" loc="27:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405708e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40570aa4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x4057c010" loc="28:/opt/tinyos/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x4057c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4057b3e4"/>
        <function-ref name="fired" scoped="" ref="0x4057cbe0"/>
        <function-ref name="startAt" scoped="" ref="0x4057b0c8"/>
        <function-ref name="isRunning" scoped="" ref="0x4057ce3c"/>
        <function-ref name="getAlarm" scoped="" ref="0x4057b640"/>
        <function-ref name="start" scoped="" ref="0x4057c700"/>
        <function-ref name="stop" scoped="" ref="0x4057c984"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x406060b4" loc="61:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x406060b4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40605474"/>
        <function-ref name="fired" scoped="" ref="0x40606c84"/>
        <function-ref name="startAt" scoped="" ref="0x40605158"/>
        <function-ref name="isRunning" scoped="" ref="0x40606ee0"/>
        <function-ref name="getAlarm" scoped="" ref="0x406056d0"/>
        <function-ref name="start" scoped="" ref="0x406067a4"/>
        <function-ref name="stop" scoped="" ref="0x40606a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40580c80" loc="60:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40580c80"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4030ef18"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4030ef18"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40580e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406059e4" loc="62:/opt/tinyos/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406059e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406150e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406155a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40615344"/>
        <function-ref name="overflow" scoped="" ref="0x406157fc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x4137eee0" loc="66:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4137eee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4137d0b8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4137d194"/>
        <function-ref name="getControlA" scoped="" ref="0x4137d270"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4137d34c"/>
        <function-ref name="setControlB" scoped="" ref="0x4137d428"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4137d504"/>
        <function-ref name="getControlB" scoped="" ref="0x4137d5e0"/>
        <function-ref name="setControlA" scoped="" ref="0x4137d6bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4138343c" loc="61:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4138343c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41382818"/>
        <function-ref name="fired" scoped="" ref="0x41382044"/>
        <function-ref name="startAt" scoped="" ref="0x413824fc"/>
        <function-ref name="isRunning" scoped="" ref="0x413822a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x41382a74"/>
        <function-ref name="start" scoped="" ref="0x41383b2c"/>
        <function-ref name="stop" scoped="" ref="0x41383db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41383030" loc="60:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41383030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413831f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41382d88" loc="62:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41382d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x413814ac"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41381964"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41381708"/>
        <function-ref name="overflow" scoped="" ref="0x41381bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x4137a234" loc="68:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4137a234"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x4137a3f4"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x4137a4d0"/>
        <function-ref name="controlABusy" scoped="" ref="0x4137a5ac"/>
        <function-ref name="controlBBusy" scoped="" ref="0x4137a688"/>
        <function-ref name="countBusy" scoped="" ref="0x4137a764"/>
        <function-ref name="compareABusy" scoped="" ref="0x4137a840"/>
        <function-ref name="getAssr" scoped="" ref="0x4137a91c"/>
        <function-ref name="setAssr" scoped="" ref="0x4137a9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x4137d8a0" loc="67:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4137d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4137cd0c"/>
        <function-ref name="fired" scoped="" ref="0x4137c39c"/>
        <function-ref name="get" scoped="" ref="0x4137de90"/>
        <function-ref name="reset" scoped="" ref="0x4137c5f8"/>
        <function-ref name="isOn" scoped="" ref="0x4137a010"/>
        <function-ref name="set" scoped="" ref="0x4137c118"/>
        <function-ref name="start" scoped="" ref="0x4137c854"/>
        <function-ref name="stop" scoped="" ref="0x4137cab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41381e9c" loc="65:/opt/tinyos/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41381e9c"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4137e7dc"/>
        <function-ref name="test" scoped="" ref="0x4137e324"/>
        <function-ref name="get" scoped="" ref="0x4137f4ac"/>
        <function-ref name="setScale" scoped="" ref="0x4137ea38"/>
        <function-ref name="getScale" scoped="" ref="0x4137ecbc"/>
        <function-ref name="reset" scoped="" ref="0x4137fbe8"/>
        <function-ref name="overflow" scoped="" ref="0x4137f98c"/>
        <function-ref name="isOn" scoped="" ref="0x4137e580"/>
        <function-ref name="set" scoped="" ref="0x4137f708"/>
        <function-ref name="start" scoped="" ref="0x4137fe44"/>
        <function-ref name="stop" scoped="" ref="0x4137e0c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x405d79a8" loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x405d79a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x405d7b68"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x405d7c44"/>
        <function-ref name="getControlA" scoped="" ref="0x405d7d20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x405d7dfc"/>
        <function-ref name="setControlB" scoped="" ref="0x405d7ed8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x405d6010"/>
        <function-ref name="getControlB" scoped="" ref="0x405d60ec"/>
        <function-ref name="setControlA" scoped="" ref="0x405d61c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x405d4f28" loc="84:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x405d4f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x405d30fc"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x405d31d8"/>
        <function-ref name="controlABusy" scoped="" ref="0x405d32b4"/>
        <function-ref name="controlBBusy" scoped="" ref="0x405d3390"/>
        <function-ref name="countBusy" scoped="" ref="0x405d346c"/>
        <function-ref name="compareABusy" scoped="" ref="0x405d3548"/>
        <function-ref name="getAssr" scoped="" ref="0x405d3624"/>
        <function-ref name="setAssr" scoped="" ref="0x405d3700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405d64e0" loc="83:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x405d64e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x405d4980"/>
        <function-ref name="fired" scoped="" ref="0x405d4010"/>
        <function-ref name="get" scoped="" ref="0x405d6ad0"/>
        <function-ref name="reset" scoped="" ref="0x405d426c"/>
        <function-ref name="isOn" scoped="" ref="0x405d4bdc"/>
        <function-ref name="set" scoped="" ref="0x405d6d2c"/>
        <function-ref name="start" scoped="" ref="0x405d44c8"/>
        <function-ref name="stop" scoped="" ref="0x405d4724"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405cc848" loc="81:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405cc848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x405d7188"/>
        <function-ref name="test" scoped="" ref="0x405c8c9c"/>
        <function-ref name="get" scoped="" ref="0x405cce38"/>
        <function-ref name="setScale" scoped="" ref="0x405d73e4"/>
        <function-ref name="getScale" scoped="" ref="0x405d7668"/>
        <function-ref name="reset" scoped="" ref="0x405c8588"/>
        <function-ref name="overflow" scoped="" ref="0x405c832c"/>
        <function-ref name="isOn" scoped="" ref="0x405c8ef8"/>
        <function-ref name="set" scoped="" ref="0x405c80a8"/>
        <function-ref name="start" scoped="" ref="0x405c87e4"/>
        <function-ref name="stop" scoped="" ref="0x405c8a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x405de500" loc="83:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x405de500"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x405de6c0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x405de79c"/>
        <function-ref name="getControlA" scoped="" ref="0x405de878"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x405de954"/>
        <function-ref name="setControlB" scoped="" ref="0x405dea30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x405deb0c"/>
        <function-ref name="getControlB" scoped="" ref="0x405debe8"/>
        <function-ref name="setControlA" scoped="" ref="0x405decc4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x405dc9cc" loc="85:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x405dc9cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x405dcb8c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x405dce10" loc="86:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x405dce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x405db010"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x405db0ec"/>
        <function-ref name="controlABusy" scoped="" ref="0x405db1c8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x405db2a4"/>
        <function-ref name="countBusy" scoped="" ref="0x405db380"/>
        <function-ref name="compareABusy" scoped="" ref="0x405db45c"/>
        <function-ref name="getAssr" scoped="" ref="0x405db538"/>
        <function-ref name="setAssr" scoped="" ref="0x405db614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405dd010" loc="84:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x405dd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x405dc4c8"/>
        <function-ref name="fired" scoped="" ref="0x405ddae0"/>
        <function-ref name="get" scoped="" ref="0x405dd600"/>
        <function-ref name="reset" scoped="" ref="0x405ddd3c"/>
        <function-ref name="isOn" scoped="" ref="0x405dc724"/>
        <function-ref name="set" scoped="" ref="0x405dd85c"/>
        <function-ref name="start" scoped="" ref="0x405dc010"/>
        <function-ref name="stop" scoped="" ref="0x405dc26c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405d039c" loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405d039c"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x405e0cc8"/>
        <function-ref name="test" scoped="" ref="0x405e0810"/>
        <function-ref name="get" scoped="" ref="0x405d098c"/>
        <function-ref name="setScale" scoped="" ref="0x405e0f24"/>
        <function-ref name="getScale" scoped="" ref="0x405de1c0"/>
        <function-ref name="reset" scoped="" ref="0x405e00fc"/>
        <function-ref name="overflow" scoped="" ref="0x405d0e6c"/>
        <function-ref name="isOn" scoped="" ref="0x405e0a6c"/>
        <function-ref name="set" scoped="" ref="0x405d0be8"/>
        <function-ref name="start" scoped="" ref="0x405e0358"/>
        <function-ref name="stop" scoped="" ref="0x405e05b4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40620ba0" loc="74:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40620ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40620d60"/>
        <function-ref name="runTask" scoped="" ref="0x40620e3c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40622344" loc="49:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40622344"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40620700"/>
        <function-ref name="fired" scoped="" ref="0x40622f14"/>
        <function-ref name="startAt" scoped="" ref="0x406203e4"/>
        <function-ref name="isRunning" scoped="" ref="0x40620188"/>
        <function-ref name="getAlarm" scoped="" ref="0x4062095c"/>
        <function-ref name="start" scoped="" ref="0x40622a34"/>
        <function-ref name="stop" scoped="" ref="0x40622cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406130e8" loc="48:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406130e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40623ac4"/>
        <function-ref name="fired" scoped="" ref="0x40613dcc"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406234c4"/>
        <function-ref name="isOneShot" scoped="" ref="0x40623284"/>
        <function-ref name="getdt" scoped="" ref="0x40622010"/>
        <function-ref name="gett0" scoped="" ref="0x40623d04"/>
        <function-ref name="isRunning" scoped="" ref="0x40623044"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406136bc"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406237c4"/>
        <function-ref name="startOneShot" scoped="" ref="0x40613924"/>
        <function-ref name="stop" scoped="" ref="0x40613b8c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x4064ff14" loc="71:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x4064ff14"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4064e0f4"/>
        <function-ref name="runTask" scoped="" ref="0x4064e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40652e48" loc="49:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40652e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4064f850"/>
        <function-ref name="fired" scoped="" ref="0x40651b44"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4064f250"/>
        <function-ref name="isOneShot" scoped="" ref="0x4064f010"/>
        <function-ref name="getdt" scoped="" ref="0x4064fcd0"/>
        <function-ref name="gett0" scoped="" ref="0x4064fa90"/>
        <function-ref name="isRunning" scoped="" ref="0x40651d84"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40651434"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4064f550"/>
        <function-ref name="startOneShot" scoped="" ref="0x4065169c"/>
        <function-ref name="stop" scoped="" ref="0x40651904"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40630c50" loc="48:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40630c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406526cc"/>
        <function-ref name="fired" scoped="" ref="0x4062f9a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406520ac"/>
        <function-ref name="isOneShot" scoped="" ref="0x4062fe40"/>
        <function-ref name="getdt" scoped="" ref="0x40652b6c"/>
        <function-ref name="gett0" scoped="" ref="0x4065291c"/>
        <function-ref name="isRunning" scoped="" ref="0x4062fbf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4062f260"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406523bc"/>
        <function-ref name="startOneShot" scoped="" ref="0x4062f4d8"/>
        <function-ref name="stop" scoped="" ref="0x4062f750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4064d010" loc="48:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4064d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4064d600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4064d934" loc="49:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4064d934"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4065f044"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4065f4fc"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4065f2a0"/>
        <function-ref name="overflow" scoped="" ref="0x4065f758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="X_Axis" ref="0x40656a8c" loc="2:SensorAccC.nc">
      <component-ref qname="SenseAppC.SensorAcc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="X_Axis" scoped="" ref="0x40656a8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4066907c"/>
        <function-ref name="readDone" scoped="" ref="0x406692bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41392854" loc="43:/opt/tinyos/tos/system/ConstantSensorC.nc">
      <component-ref qname="SenseAppC.SensorAcc.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41392854"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41392e28"/>
        <function-ref name="readDone" scoped="" ref="0x4139107c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="senseResult" ref="0x41391380" loc="47:/opt/tinyos/tos/system/ConstantSensorC.nc">
      <component-ref qname="SenseAppC.SensorAcc.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="senseResult" scoped="" ref="0x41391380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41391540"/>
        <function-ref name="runTask" scoped="" ref="0x4139161c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VisibleLight" ref="0x40660700" loc="2:SensorLightC.nc">
      <component-ref qname="SenseAppC.SensorLight"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VisibleLight" scoped="" ref="0x40660700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40660cd4"/>
        <function-ref name="readDone" scoped="" ref="0x40660f14"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4138e808" loc="43:/opt/tinyos/tos/system/ConstantSensorC.nc">
      <component-ref qname="SenseAppC.SensorLight.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4138e808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4138eddc"/>
        <function-ref name="readDone" scoped="" ref="0x4138d044"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="senseResult" ref="0x4138d348" loc="47:/opt/tinyos/tos/system/ConstantSensorC.nc">
      <component-ref qname="SenseAppC.SensorLight.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="senseResult" scoped="" ref="0x4138d348"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4138d508"/>
        <function-ref name="runTask" scoped="" ref="0x4138d5e4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x4068e2d8" loc="59:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x4068e2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x4068e498"/>
        <function-ref name="setRoot" scoped="" ref="0x4068e574"/>
        <function-ref name="unsetRoot" scoped="" ref="0x4068e650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x406783a8" loc="54:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x406783a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40678568"/>
        <function-ref name="setOrigin" scoped="" ref="0x40678644"/>
        <function-ref name="setType" scoped="" ref="0x40678720"/>
        <function-ref name="getOrigin" scoped="" ref="0x406787fc"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x406788d8"/>
        <function-ref name="getType" scoped="" ref="0x406789b4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40696d14" loc="64:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40696d14"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x4069b010"/>
        <function-ref name="logEventMsg" scoped="" ref="0x4069b0ec"/>
        <function-ref name="logEventSimple" scoped="" ref="0x4069b1c8"/>
        <function-ref name="logEventRoute" scoped="" ref="0x4069b2a4"/>
        <function-ref name="logEventDbg" scoped="" ref="0x4069b380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40677ce4" loc="51:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40677ce4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x403ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40677ea4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40686c10" loc="53:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40686c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40686dd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40686eac"/>
        <function-ref name="getPayload" scoped="" ref="0x40678010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406780ec"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406781c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4067a204" loc="50:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4067a204"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x403ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4067a3c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4067b150" loc="48:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4067b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4067b310"/>
        <function-ref name="getPayload" scoped="" ref="0x4067b3ec"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4067b4c8"/>
        <function-ref name="cancel" scoped="" ref="0x4067b5a4"/>
        <function-ref name="sendDone" scoped="" ref="0x4067b680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x406895bc" loc="57:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x406895bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x4068977c"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40689858"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40689934"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40689a10"/>
        <function-ref name="getEtx" scoped="" ref="0x40689aec"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40689bc8"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40689ca4"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40689d80"/>
        <function-ref name="getParent" scoped="" ref="0x40689e5c"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40684010"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x406840ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4067bb14" loc="49:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4067bb14"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x403ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4067bcd4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40684e54" loc="58:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40684e54"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x4068e050"/>
        <function-ref name="setClientCongested" scoped="" ref="0x4068e12c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x4068f3f4" loc="55:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x4068f3f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4068f5b4"/>
        <function-ref name="option" scoped="" ref="0x4068f690"/>
        <function-ref name="setEtx" scoped="" ref="0x4068f76c"/>
        <function-ref name="setOrigin" scoped="" ref="0x4068f848"/>
        <function-ref name="clearOption" scoped="" ref="0x4068f924"/>
        <function-ref name="getEtx" scoped="" ref="0x4068fa00"/>
        <function-ref name="getOrigin" scoped="" ref="0x4068fadc"/>
        <function-ref name="setType" scoped="" ref="0x4068fbb8"/>
        <function-ref name="setOption" scoped="" ref="0x4068fc94"/>
        <function-ref name="matchPacket" scoped="" ref="0x4068fd70"/>
        <function-ref name="getThl" scoped="" ref="0x4068fe4c"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4068ff28"/>
        <function-ref name="matchInstance" scoped="" ref="0x40685018"/>
        <function-ref name="getType" scoped="" ref="0x40685174"/>
        <function-ref name="setThl" scoped="" ref="0x40685250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4067da38" loc="47:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4067da38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4067dbf8"/>
        <function-ref name="stop" scoped="" ref="0x4067dcd4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x406882f4" loc="63:/opt/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x406882f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x406884b4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x406a2618" loc="92:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x406a2618"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x406a27d8"/>
        <function-ref name="setRoot" scoped="" ref="0x406a28b4"/>
        <function-ref name="unsetRoot" scoped="" ref="0x406a2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x406922cc" loc="86:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x406922cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4069248c"/>
        <function-ref name="setOrigin" scoped="" ref="0x40692568"/>
        <function-ref name="setType" scoped="" ref="0x40692644"/>
        <function-ref name="getOrigin" scoped="" ref="0x40692720"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x406927fc"/>
        <function-ref name="getType" scoped="" ref="0x406928d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x4069e7f4" loc="90:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x4069e7f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x4069e9b4"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x4069ea90"/>
        <function-ref name="txNoAck" scoped="" ref="0x4069eb6c"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x4069ec48"/>
        <function-ref name="evicted" scoped="" ref="0x4069ed24"/>
        <function-ref name="clearDLQ" scoped="" ref="0x4069ee00"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x4069eedc"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x406a2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x406a12a8" loc="97:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x406a12a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x406a1468"/>
        <function-ref name="logEventMsg" scoped="" ref="0x406a1544"/>
        <function-ref name="logEventSimple" scoped="" ref="0x406a1620"/>
        <function-ref name="logEventRoute" scoped="" ref="0x406a16fc"/>
        <function-ref name="logEventDbg" scoped="" ref="0x406a17d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x4069386c" loc="83:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x4069386c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x403ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40693a2c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40693ba8" loc="85:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40693ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40693d68"/>
        <function-ref name="payloadLength" scoped="" ref="0x40693e44"/>
        <function-ref name="getPayload" scoped="" ref="0x40693f20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40692010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406920ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40693204" loc="82:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40693204"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x403ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406933c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x406941b0" loc="80:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x406941b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40694370"/>
        <function-ref name="getPayload" scoped="" ref="0x4069444c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40694528"/>
        <function-ref name="cancel" scoped="" ref="0x40694604"/>
        <function-ref name="sendDone" scoped="" ref="0x406946e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x406a5aac" loc="89:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x406a5aac"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x406a5c6c"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x406a5d48"/>
        <function-ref name="numNeighbors" scoped="" ref="0x406a5e24"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x406a5f00"/>
        <function-ref name="getEtx" scoped="" ref="0x406a4010"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x406a40ec"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x406a41c8"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x406a42a4"/>
        <function-ref name="getParent" scoped="" ref="0x406a4380"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x406a445c"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x406a4538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40694b74" loc="81:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40694b74"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x403ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40694d34"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x406a21d0" loc="91:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x406a21d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x406a2390"/>
        <function-ref name="setClientCongested" scoped="" ref="0x406a246c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x40692a70" loc="87:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x40692a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40692c30"/>
        <function-ref name="option" scoped="" ref="0x40692d0c"/>
        <function-ref name="setEtx" scoped="" ref="0x40692de8"/>
        <function-ref name="setOrigin" scoped="" ref="0x40692ec4"/>
        <function-ref name="clearOption" scoped="" ref="0x406a5010"/>
        <function-ref name="getEtx" scoped="" ref="0x406a50ec"/>
        <function-ref name="getOrigin" scoped="" ref="0x406a51c8"/>
        <function-ref name="setType" scoped="" ref="0x406a52a4"/>
        <function-ref name="setOption" scoped="" ref="0x406a5380"/>
        <function-ref name="matchPacket" scoped="" ref="0x406a545c"/>
        <function-ref name="getThl" scoped="" ref="0x406a5538"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x406a5614"/>
        <function-ref name="matchInstance" scoped="" ref="0x406a56f0"/>
        <function-ref name="getType" scoped="" ref="0x406a584c"/>
        <function-ref name="setThl" scoped="" ref="0x406a5928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4069ba9c" loc="79:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4069ba9c"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4069bc5c"/>
        <function-ref name="stop" scoped="" ref="0x4069bd38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x406a2e70" loc="96:/opt/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x406a2e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x406a10d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x406ad010" loc="41:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x406ad010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x406ad1d0"/>
        <function-ref name="stopDone" scoped="" ref="0x406ad2ac"/>
        <function-ref name="start" scoped="" ref="0x406ad388"/>
        <function-ref name="stop" scoped="" ref="0x406ad464"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x406ab0fc" loc="46:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x406ab0fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406ab2bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x406ab438" loc="48:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x406ab438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406ab5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x406ab6d4"/>
        <function-ref name="getPayload" scoped="" ref="0x406ab7b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406ab88c"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406ab968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x406ad8a0" loc="43:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x406ad8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406ada60"/>
        <function-ref name="getPayload" scoped="" ref="0x406adb3c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406adc18"/>
        <function-ref name="cancel" scoped="" ref="0x406adcf4"/>
        <function-ref name="sendDone" scoped="" ref="0x406addd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x406ac884" loc="45:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x406ac884"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406aca44"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x406bda10" loc="52:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x406bda10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x406bdbd0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x406bdcac"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x406bdd88"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x406bde64"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406ac22c" loc="44:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406ac22c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406ac3ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x406c2ef0" loc="51:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406c2ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x406a80d4"/>
        <function-ref name="noAck" scoped="" ref="0x406a81b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x406a828c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x406cc0ec" loc="53:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x406cc0ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x406cc2ac"/>
        <function-ref name="setRetries" scoped="" ref="0x406cc388"/>
        <function-ref name="getRetries" scoped="" ref="0x406cc464"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x406cc540"/>
        <function-ref name="wasDelivered" scoped="" ref="0x406cc61c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x406b4d80" loc="49:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406b4d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406aa010"/>
        <function-ref name="source" scoped="" ref="0x406aa0ec"/>
        <function-ref name="address" scoped="" ref="0x406aa1c8"/>
        <function-ref name="destination" scoped="" ref="0x406aa2a4"/>
        <function-ref name="setSource" scoped="" ref="0x406aa380"/>
        <function-ref name="setDestination" scoped="" ref="0x406aa45c"/>
        <function-ref name="type" scoped="" ref="0x406aa538"/>
        <function-ref name="setType" scoped="" ref="0x406aa614"/>
        <function-ref name="isForMe" scoped="" ref="0x406aa6f0"/>
        <function-ref name="setGroup" scoped="" ref="0x406aa7cc"/>
        <function-ref name="localGroup" scoped="" ref="0x406aa8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x406cda50" loc="54:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x406cda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x406cdc10"/>
        <function-ref name="setChannel" scoped="" ref="0x406cdcec"/>
        <function-ref name="getChannel" scoped="" ref="0x406cddc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x406be208" loc="56:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x406be208"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406bec84"/>
        <function-ref name="clear" scoped="" ref="0x406c7044"/>
        <function-ref name="isValid" scoped="" ref="0x406be8f8"/>
        <function-ref name="set" scoped="" ref="0x406c73d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x406c7ad4" loc="57:/opt/tinyos/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406c7ad4"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406c6678"/>
        <function-ref name="clear" scoped="" ref="0x406c6a04"/>
        <function-ref name="isValid" scoped="" ref="0x406c62ec"/>
        <function-ref name="set" scoped="" ref="0x406c6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x406c57c4" loc="45:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x406c57c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x406c5984"/>
        <function-ref name="stopDone" scoped="" ref="0x406c5a60"/>
        <function-ref name="start" scoped="" ref="0x406c5b3c"/>
        <function-ref name="stop" scoped="" ref="0x406c5c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x406ce9f8" loc="66:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x406ce9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406de550"/>
        <function-ref name="get" scoped="" ref="0x406de2b0"/>
        <function-ref name="isSet" scoped="" ref="0x406de010"/>
        <function-ref name="set" scoped="" ref="0x406de7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x406da250" loc="71:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406da250"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406daccc"/>
        <function-ref name="clear" scoped="" ref="0x406ed07c"/>
        <function-ref name="isValid" scoped="" ref="0x406da940"/>
        <function-ref name="set" scoped="" ref="0x406ed408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x406d4734" loc="50:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x406d4734"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406d48f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x406d382c" loc="56:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x406d382c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406d39ec"/>
        <function-ref name="payloadLength" scoped="" ref="0x406d3ac8"/>
        <function-ref name="getPayload" scoped="" ref="0x406d3ba4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406d3c80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406d3d5c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x406d60fc" loc="47:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x406d60fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406d62bc"/>
        <function-ref name="getPayload" scoped="" ref="0x406d6398"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406d6474"/>
        <function-ref name="cancel" scoped="" ref="0x406d6550"/>
        <function-ref name="sendDone" scoped="" ref="0x406d662c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x406d40fc" loc="49:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x406d40fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406d42bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x406cf6c4" loc="65:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x406cf6c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406ce2b0"/>
        <function-ref name="get" scoped="" ref="0x406ce010"/>
        <function-ref name="isSet" scoped="" ref="0x406cfcb4"/>
        <function-ref name="set" scoped="" ref="0x406ce550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x406d110c" loc="60:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x406d110c"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x406d12cc"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x406d13a8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x406d1484"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x406d1560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406d6a70" loc="48:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406d6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406d6c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x406dd970" loc="70:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406dd970"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403dabb8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406dc408"/>
        <function-ref name="clear" scoped="" ref="0x406dc794"/>
        <function-ref name="isValid" scoped="" ref="0x406dc07c"/>
        <function-ref name="set" scoped="" ref="0x406dcb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x406dbe38" loc="69:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x406dbe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403dabb8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406dd444"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x406e03c8" loc="64:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x406e03c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406e0ef8"/>
        <function-ref name="get" scoped="" ref="0x406e0c58"/>
        <function-ref name="isSet" scoped="" ref="0x406e09b8"/>
        <function-ref name="set" scoped="" ref="0x406cf1c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x406d2b88" loc="59:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406d2b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x406d2d48"/>
        <function-ref name="noAck" scoped="" ref="0x406d2e24"/>
        <function-ref name="wasAcked" scoped="" ref="0x406d2f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x406d4df8" loc="53:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x406d4df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406d3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x406d1704" loc="61:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x406d1704"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x406d18c4"/>
        <function-ref name="setRetries" scoped="" ref="0x406d19a0"/>
        <function-ref name="getRetries" scoped="" ref="0x406d1a7c"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x406d1b58"/>
        <function-ref name="wasDelivered" scoped="" ref="0x406d1c34"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x406d3eec" loc="57:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406d3eec"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406d20d4"/>
        <function-ref name="source" scoped="" ref="0x406d21b0"/>
        <function-ref name="address" scoped="" ref="0x406d228c"/>
        <function-ref name="destination" scoped="" ref="0x406d2368"/>
        <function-ref name="setSource" scoped="" ref="0x406d2444"/>
        <function-ref name="setDestination" scoped="" ref="0x406d2520"/>
        <function-ref name="type" scoped="" ref="0x406d25fc"/>
        <function-ref name="setType" scoped="" ref="0x406d26d8"/>
        <function-ref name="isForMe" scoped="" ref="0x406d27b4"/>
        <function-ref name="setGroup" scoped="" ref="0x406d2890"/>
        <function-ref name="localGroup" scoped="" ref="0x406d296c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x406d1dec" loc="62:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x406d1dec"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x406d0050"/>
        <function-ref name="setChannel" scoped="" ref="0x406d012c"/>
        <function-ref name="getChannel" scoped="" ref="0x406d0208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x406db968" loc="67:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x406db968"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x406dbb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x406d34f0" loc="54:/opt/tinyos/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x406d34f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406d36b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x406edd64" loc="41:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x406edd64"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x406edf24"/>
        <function-ref name="stopDone" scoped="" ref="0x406ea018"/>
        <function-ref name="start" scoped="" ref="0x406ea0f4"/>
        <function-ref name="stop" scoped="" ref="0x406ea1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x406ff7f0" loc="80:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x406ff7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406fe338"/>
        <function-ref name="get" scoped="" ref="0x406fe098"/>
        <function-ref name="isSet" scoped="" ref="0x406ffde0"/>
        <function-ref name="set" scoped="" ref="0x406fe5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x406f6eb0" loc="60:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x406f6eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406e50b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x406f25ec" loc="62:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x406f25ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406f282c"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406f2908"/>
        <function-ref name="request" scoped="" ref="0x406f29e4"/>
        <function-ref name="granted" scoped="" ref="0x406f2ac0"/>
        <function-ref name="isOwner" scoped="" ref="0x406f2b9c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x406e9ca0" loc="47:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x406e9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406e9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x406ea60c" loc="44:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x406ea60c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406ea7cc"/>
        <function-ref name="getPayload" scoped="" ref="0x406ea8a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406ea984"/>
        <function-ref name="cancel" scoped="" ref="0x406eaa60"/>
        <function-ref name="sendDone" scoped="" ref="0x406eab3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x406e9668" loc="46:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x406e9668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406e9828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40703584" loc="64:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40703584"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40703744"/>
        <function-ref name="address" scoped="" ref="0x40703820"/>
        <function-ref name="destination" scoped="" ref="0x407038fc"/>
        <function-ref name="setSource" scoped="" ref="0x407039d8"/>
        <function-ref name="setDestination" scoped="" ref="0x40703ab4"/>
        <function-ref name="pan" scoped="" ref="0x40703b90"/>
        <function-ref name="setPan" scoped="" ref="0x40703c6c"/>
        <function-ref name="isForMe" scoped="" ref="0x40703d48"/>
        <function-ref name="localPan" scoped="" ref="0x40703e24"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x406e4118" loc="65:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x406e4118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406e42d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x406e43b4"/>
        <function-ref name="getPayload" scoped="" ref="0x406e4490"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406e456c"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406e4648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40701560" loc="79:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40701560"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406ff0a8"/>
        <function-ref name="get" scoped="" ref="0x40701df0"/>
        <function-ref name="isSet" scoped="" ref="0x40701b50"/>
        <function-ref name="set" scoped="" ref="0x406ff348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x406e4dc4" loc="69:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x406e4dc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x406f5010"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x406f50ec"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x406f51c8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x406f52a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x406e7b24" loc="54:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x406e7b24"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406e7ce4"/>
        <function-ref name="payloadLength" scoped="" ref="0x406e7dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x406e7e9c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406e6010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406e60ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406e9010" loc="45:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406e9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406e91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x406fc970" loc="84:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406fc970"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403dabb8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406fb578"/>
        <function-ref name="clear" scoped="" ref="0x406fb904"/>
        <function-ref name="isValid" scoped="" ref="0x406fb1ec"/>
        <function-ref name="set" scoped="" ref="0x406fbc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x406fee40" loc="83:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x406fee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403dabb8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406fc444"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4070226c" loc="78:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4070226c"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40702d9c"/>
        <function-ref name="get" scoped="" ref="0x40702afc"/>
        <function-ref name="isSet" scoped="" ref="0x4070285c"/>
        <function-ref name="set" scoped="" ref="0x40701060"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x406e4864" loc="68:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406e4864"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x406e4a24"/>
        <function-ref name="noAck" scoped="" ref="0x406e4b00"/>
        <function-ref name="wasAcked" scoped="" ref="0x406e4bdc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x406f631c" loc="58:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x406f631c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406f64dc"/>
        <function-ref name="getPayload" scoped="" ref="0x406f65b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406f6694"/>
        <function-ref name="cancel" scoped="" ref="0x406f6770"/>
        <function-ref name="sendDone" scoped="" ref="0x406f684c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x406e8380" loc="50:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x406e8380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406e8540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x406f5448" loc="70:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x406f5448"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x406f5608"/>
        <function-ref name="setRetries" scoped="" ref="0x406f56e4"/>
        <function-ref name="getRetries" scoped="" ref="0x406f57c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x406f589c"/>
        <function-ref name="wasDelivered" scoped="" ref="0x406f5978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x406f5b30" loc="76:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x406f5b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x406f5cf0"/>
        <function-ref name="setChannel" scoped="" ref="0x406f5dcc"/>
        <function-ref name="getChannel" scoped="" ref="0x406f5ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x406e8d70" loc="53:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406e8d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406e7010"/>
        <function-ref name="source" scoped="" ref="0x406e70ec"/>
        <function-ref name="address" scoped="" ref="0x406e71c8"/>
        <function-ref name="destination" scoped="" ref="0x406e72a4"/>
        <function-ref name="setSource" scoped="" ref="0x406e7380"/>
        <function-ref name="setDestination" scoped="" ref="0x406e745c"/>
        <function-ref name="type" scoped="" ref="0x406e7538"/>
        <function-ref name="setType" scoped="" ref="0x406e7614"/>
        <function-ref name="isForMe" scoped="" ref="0x406e76f0"/>
        <function-ref name="setGroup" scoped="" ref="0x406e77cc"/>
        <function-ref name="localGroup" scoped="" ref="0x406e78a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x406fa3b8" loc="85:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406fa3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406fae34"/>
        <function-ref name="clear" scoped="" ref="0x4070e1e0"/>
        <function-ref name="isValid" scoped="" ref="0x406faaa8"/>
        <function-ref name="set" scoped="" ref="0x4070e56c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x406f6a80" loc="59:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x406f6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406f6c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x406fe970" loc="81:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x406fe970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x406feb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x406e8a20" loc="51:/opt/tinyos/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x406e8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406e8be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x4071880c" loc="51:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x4071880c"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x407189cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x40713344" loc="47:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x40713344"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x40713504"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x4071f8b4" loc="50:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x4071f8b4"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4071fa74"/>
        <function-ref name="checkFrame" scoped="" ref="0x4071fb50"/>
        <function-ref name="source" scoped="" ref="0x4071fc2c"/>
        <function-ref name="destination" scoped="" ref="0x4071fd08"/>
        <function-ref name="setSource" scoped="" ref="0x4071fde4"/>
        <function-ref name="setDestination" scoped="" ref="0x4071fec0"/>
        <function-ref name="setGroup" scoped="" ref="0x40718010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x40724bd8" loc="49:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x40724bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x40724d98"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x40724e74"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x40707010"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x407070ec"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x407071c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40736110" loc="61:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40736110"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407362d0"/>
        <function-ref name="wait" scoped="" ref="0x407363ac"/>
        <function-ref name="cancel" scoped="" ref="0x40736488"/>
        <function-ref name="isFree" scoped="" ref="0x40736564"/>
        <function-ref name="getNow" scoped="" ref="0x40736640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x4073217c" loc="62:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x4073217c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4073233c"/>
        <function-ref name="payloadLength" scoped="" ref="0x40732418"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407324f4"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407325d0"/>
        <function-ref name="headerLength" scoped="" ref="0x407326ac"/>
        <function-ref name="metadataLength" scoped="" ref="0x40732788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40732b00" loc="64:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40732b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403dabb8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40739678"/>
        <function-ref name="clear" scoped="" ref="0x40739a04"/>
        <function-ref name="isValid" scoped="" ref="0x407392ec"/>
        <function-ref name="set" scoped="" ref="0x40739d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x4070a010" loc="43:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x4070a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4070a1d0"/>
        <function-ref name="headerLength" scoped="" ref="0x4070a2ac"/>
        <function-ref name="metadataLength" scoped="" ref="0x4070a388"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x4070a464"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x4070a540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x40714698" loc="46:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x40714698"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x40714858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x40709040" loc="44:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40709040"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40709200"/>
        <function-ref name="createAckPacket" scoped="" ref="0x407092dc"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x407093b8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40709494"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40709570"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x4070964c"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40709728"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40709804"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x40725c24" loc="60:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40725c24"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40725de4"/>
        <function-ref name="getDSN" scoped="" ref="0x40725ec0"/>
        <function-ref name="setFCF" scoped="" ref="0x40723010"/>
        <function-ref name="isAckFrame" scoped="" ref="0x407230ec"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x407231c8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x407232a4"/>
        <function-ref name="setDSN" scoped="" ref="0x40723380"/>
        <function-ref name="createAckReply" scoped="" ref="0x4072345c"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40723538"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40723614"/>
        <function-ref name="getAckRequired" scoped="" ref="0x407236f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x407237cc"/>
        <function-ref name="localAddr" scoped="" ref="0x407238a8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40723a04"/>
        <function-ref name="localPan" scoped="" ref="0x40723ae0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40723bbc"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40723c98"/>
        <function-ref name="setFramePending" scoped="" ref="0x40723d74"/>
        <function-ref name="setDestPan" scoped="" ref="0x40723e50"/>
        <function-ref name="isForMe" scoped="" ref="0x4071e010"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4071e0ec"/>
        <function-ref name="getFCF" scoped="" ref="0x4071e1c8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4071e2a4"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4071e380"/>
        <function-ref name="getFramePending" scoped="" ref="0x4071e45c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x407156d4" loc="45:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x407156d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40715894"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40715970"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40715a4c"/>
        <function-ref name="getSender" scoped="" ref="0x40715b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x407102e8" loc="48:/opt/tinyos/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x407102e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x407104a8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40710584"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40710660"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4071073c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40770010" loc="41:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40770010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407701e0"/>
        <function-ref name="wait" scoped="" ref="0x407702bc"/>
        <function-ref name="cancel" scoped="" ref="0x40770398"/>
        <function-ref name="isFree" scoped="" ref="0x40770474"/>
        <function-ref name="getNow" scoped="" ref="0x40770550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40770888" loc="46:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40770888"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4031313c"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4031313c"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403dabb8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x403dae4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4078acc4"/>
        <function-ref name="fired" scoped="" ref="0x4078a4f0"/>
        <function-ref name="startAt" scoped="" ref="0x4078a9a8"/>
        <function-ref name="isRunning" scoped="" ref="0x4078a74c"/>
        <function-ref name="getAlarm" scoped="" ref="0x4078af20"/>
        <function-ref name="start" scoped="" ref="0x4078a010"/>
        <function-ref name="stop" scoped="" ref="0x4078a294"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x413b9674" loc="43:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x413b9674"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x413b9844"/>
        <function-ref name="wait" scoped="" ref="0x413b9920"/>
        <function-ref name="cancel" scoped="" ref="0x413b99fc"/>
        <function-ref name="isFree" scoped="" ref="0x413b9ad8"/>
        <function-ref name="getNow" scoped="" ref="0x413b9bb4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x413b9e30" loc="48:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x413b9e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403dabb8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x403dae4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x413b6238"/>
        <function-ref name="fired" scoped="" ref="0x413b7a24"/>
        <function-ref name="startAt" scoped="" ref="0x413b7edc"/>
        <function-ref name="isRunning" scoped="" ref="0x413b7c80"/>
        <function-ref name="getAlarm" scoped="" ref="0x413b6494"/>
        <function-ref name="start" scoped="" ref="0x413b7544"/>
        <function-ref name="stop" scoped="" ref="0x413b77c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x413b6698" loc="49:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x413b6698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x413b6858"/>
        <function-ref name="suspend" scoped="" ref="0x413b6934"/>
        <function-ref name="resume" scoped="" ref="0x413b6a10"/>
        <function-ref name="run" scoped="" ref="0x413b6aec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x4078bd98" loc="40:/opt/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x4078bd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40788010"/>
        <function-ref name="suspend" scoped="" ref="0x407880ec"/>
        <function-ref name="resume" scoped="" ref="0x407881c8"/>
        <function-ref name="run" scoped="" ref="0x407882a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407e2b84" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407e2b84"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407e2d44"/>
        <function-ref name="cancel" scoped="" ref="0x407e2e20"/>
        <function-ref name="sendDone" scoped="" ref="0x407e2efc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x407e1090" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x407e1090"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407e1250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x407e3934" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x407e3934"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x407e3b04"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x407e4304" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x407e4304"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407e44c4"/>
        <function-ref name="payloadLength" scoped="" ref="0x407e45a0"/>
        <function-ref name="getPayload" scoped="" ref="0x407e467c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407e4758"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407e4834"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x407e4a00" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x407e4a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407e4bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x407e4cac"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407e4d88"/>
        <function-ref name="cancel" scoped="" ref="0x407e4e64"/>
        <function-ref name="sendDone" scoped="" ref="0x407e3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x407e3598" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x407e3598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407e3768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x407e241c" loc="53:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x407e241c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407e25dc"/>
        <function-ref name="payloadLength" scoped="" ref="0x407e26b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407e2794"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407e2870"/>
        <function-ref name="headerLength" scoped="" ref="0x407e294c"/>
        <function-ref name="metadataLength" scoped="" ref="0x407e2a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x407e13ac" loc="56:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x407e13ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x407e156c"/>
        <function-ref name="checkFrame" scoped="" ref="0x407e1648"/>
        <function-ref name="source" scoped="" ref="0x407e1724"/>
        <function-ref name="destination" scoped="" ref="0x407e1800"/>
        <function-ref name="setSource" scoped="" ref="0x407e18dc"/>
        <function-ref name="setDestination" scoped="" ref="0x407e19b8"/>
        <function-ref name="setGroup" scoped="" ref="0x407e1a94"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x407e31dc" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407e31dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407e33ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x407e3cf0" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x407e3cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407e3ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x407e572c" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x407e572c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x407e58ec"/>
        <function-ref name="source" scoped="" ref="0x407e59c8"/>
        <function-ref name="address" scoped="" ref="0x407e5aa4"/>
        <function-ref name="destination" scoped="" ref="0x407e5b80"/>
        <function-ref name="setSource" scoped="" ref="0x407e5c5c"/>
        <function-ref name="setDestination" scoped="" ref="0x407e5d38"/>
        <function-ref name="type" scoped="" ref="0x407e5e14"/>
        <function-ref name="setType" scoped="" ref="0x407e5ef0"/>
        <function-ref name="isForMe" scoped="" ref="0x407e4010"/>
        <function-ref name="setGroup" scoped="" ref="0x407e40ec"/>
        <function-ref name="localGroup" scoped="" ref="0x407e41c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x407e20c0" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x407e20c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407e2290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x413faccc" loc="59:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x413faccc"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413fae8c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x413fa7f8" loc="58:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x413fa7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413fa9b8"/>
        <function-ref name="cancel" scoped="" ref="0x413faa94"/>
        <function-ref name="sendDone" scoped="" ref="0x413fab70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x413fb598" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x413fb598"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x413fb768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x413fc010" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x413fc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413fc1d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x413fc2ac"/>
        <function-ref name="getPayload" scoped="" ref="0x413fc388"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413fc464"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413fc540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x413fc70c" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x413fc70c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413fc8dc"/>
        <function-ref name="getPayload" scoped="" ref="0x413fc9b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413fca94"/>
        <function-ref name="cancel" scoped="" ref="0x413fcb70"/>
        <function-ref name="sendDone" scoped="" ref="0x413fcc4c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x413fb1fc" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x413fb1fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413fb3cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x413afbd0" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x413afbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413afd90"/>
        <function-ref name="payloadLength" scoped="" ref="0x413afe6c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413fd010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413fd0ec"/>
        <function-ref name="headerLength" scoped="" ref="0x413fd1c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x413fd2a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x413f9010" loc="60:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x413f9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x413f9250"/>
        <function-ref name="checkFrame" scoped="" ref="0x413f932c"/>
        <function-ref name="source" scoped="" ref="0x413f9408"/>
        <function-ref name="destination" scoped="" ref="0x413f94e4"/>
        <function-ref name="setSource" scoped="" ref="0x413f95c0"/>
        <function-ref name="setDestination" scoped="" ref="0x413f969c"/>
        <function-ref name="setGroup" scoped="" ref="0x413f9778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x413f98b4" loc="61:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x413f98b4"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x413f9a74"/>
        <function-ref name="changed" scoped="" ref="0x413f9b50"/>
        <function-ref name="amGroup" scoped="" ref="0x413f9c2c"/>
        <function-ref name="setAddress" scoped="" ref="0x413f9d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x413fa090" loc="57:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x413fa090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413fa250"/>
        <function-ref name="payloadLength" scoped="" ref="0x413fa32c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413fa408"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413fa4e4"/>
        <function-ref name="headerLength" scoped="" ref="0x413fa5c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x413fa69c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x413fce18" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x413fce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413fb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x413fb954" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x413fb954"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413fbb24"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x413fd3e0" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x413fd3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x413fd5a0"/>
        <function-ref name="source" scoped="" ref="0x413fd67c"/>
        <function-ref name="address" scoped="" ref="0x413fd758"/>
        <function-ref name="destination" scoped="" ref="0x413fd834"/>
        <function-ref name="setSource" scoped="" ref="0x413fd910"/>
        <function-ref name="setDestination" scoped="" ref="0x413fd9ec"/>
        <function-ref name="type" scoped="" ref="0x413fdac8"/>
        <function-ref name="setType" scoped="" ref="0x413fdba4"/>
        <function-ref name="isForMe" scoped="" ref="0x413fdc80"/>
        <function-ref name="setGroup" scoped="" ref="0x413fdd5c"/>
        <function-ref name="localGroup" scoped="" ref="0x413fde38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x413fbd10" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x413fbd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413fbee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x407d7524" loc="54:/opt/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x407d7524"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x407d76e4"/>
        <function-ref name="changed" scoped="" ref="0x407d77c0"/>
        <function-ref name="amGroup" scoped="" ref="0x407d789c"/>
        <function-ref name="setAddress" scoped="" ref="0x407d7978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407f7ed4" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407f7ed4"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407f60b8"/>
        <function-ref name="cancel" scoped="" ref="0x407f6194"/>
        <function-ref name="sendDone" scoped="" ref="0x407f6270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x407f63ac" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407f63ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407f656c"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407f6648"/>
        <function-ref name="request" scoped="" ref="0x407f6724"/>
        <function-ref name="granted" scoped="" ref="0x407f6800"/>
        <function-ref name="isOwner" scoped="" ref="0x407f68dc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x407f79d0" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x407f79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407f7b90"/>
        <function-ref name="cancel" scoped="" ref="0x407f7c6c"/>
        <function-ref name="sendDone" scoped="" ref="0x407f7d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40838080" loc="86:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40838080"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40838250"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4083832c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x408388f0" loc="89:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x408388f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40838ac0"/>
        <function-ref name="configure" scoped="" ref="0x40838b9c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40806960" loc="85:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40806960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40806b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40806c0c"/>
        <function-ref name="request" scoped="" ref="0x40806ce8"/>
        <function-ref name="granted" scoped="" ref="0x40806dc4"/>
        <function-ref name="isOwner" scoped="" ref="0x40806ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40838468" loc="87:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40838468"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40838628"/>
        <function-ref name="userId" scoped="" ref="0x40838704"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x414189e0" loc="44:/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x414189e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41418ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41418cfc" loc="45:/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x41418cfc"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41418ebc"/>
        <function-ref name="isEmpty" scoped="" ref="0x41416010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x414160ec"/>
        <function-ref name="dequeue" scoped="" ref="0x414161c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41415470" loc="52:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41415470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41415640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4141571c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41415cf0" loc="56:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41415cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41415ec0"/>
        <function-ref name="configure" scoped="" ref="0x41414010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4141416c" loc="57:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4141416c"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4141432c"/>
        <function-ref name="isEmpty" scoped="" ref="0x41414408"/>
        <function-ref name="isEnqueued" scoped="" ref="0x414144e4"/>
        <function-ref name="dequeue" scoped="" ref="0x414145c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41416c88" loc="51:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41416c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41416e58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41415010"/>
        <function-ref name="request" scoped="" ref="0x414150ec"/>
        <function-ref name="granted" scoped="" ref="0x414151c8"/>
        <function-ref name="isOwner" scoped="" ref="0x414152a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41415858" loc="53:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41415858"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41415a18"/>
        <function-ref name="userId" scoped="" ref="0x41415af4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4141473c" loc="69:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4141473c"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414148fc"/>
        <function-ref name="runTask" scoped="" ref="0x414149d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4084eedc" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4084eedc"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4084d0b8"/>
        <function-ref name="cancel" scoped="" ref="0x4084d194"/>
        <function-ref name="sendDone" scoped="" ref="0x4084d270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4084d3cc" loc="50:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4084d3cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4084d58c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40835998" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40835998"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40835b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4083696c" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4083696c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40836b2c"/>
        <function-ref name="payloadLength" scoped="" ref="0x40836c08"/>
        <function-ref name="getPayload" scoped="" ref="0x40836ce4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40836dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40836e9c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x4084e774" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4084e774"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4084e934"/>
        <function-ref name="payloadLength" scoped="" ref="0x4084ea10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4084eaec"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4084ebc8"/>
        <function-ref name="headerLength" scoped="" ref="0x4084eca4"/>
        <function-ref name="metadataLength" scoped="" ref="0x4084ed80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x40835cc4" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40835cc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40835e84"/>
        <function-ref name="getDSN" scoped="" ref="0x4084f010"/>
        <function-ref name="setFCF" scoped="" ref="0x4084f0ec"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4084f1c8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4084f2a4"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4084f380"/>
        <function-ref name="setDSN" scoped="" ref="0x4084f45c"/>
        <function-ref name="createAckReply" scoped="" ref="0x4084f538"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4084f614"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4084f6f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4084f7cc"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4084f8a8"/>
        <function-ref name="localAddr" scoped="" ref="0x4084f984"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4084fae0"/>
        <function-ref name="localPan" scoped="" ref="0x4084fbbc"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4084fc98"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4084fd74"/>
        <function-ref name="setFramePending" scoped="" ref="0x4084fe50"/>
        <function-ref name="setDestPan" scoped="" ref="0x4084e010"/>
        <function-ref name="isForMe" scoped="" ref="0x4084e0ec"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4084e1c8"/>
        <function-ref name="getFCF" scoped="" ref="0x4084e2a4"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4084e380"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4084e45c"/>
        <function-ref name="getFramePending" scoped="" ref="0x4084e538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40835010" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40835010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408351d0"/>
        <function-ref name="getPayload" scoped="" ref="0x408352ac"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40835388"/>
        <function-ref name="cancel" scoped="" ref="0x40835464"/>
        <function-ref name="sendDone" scoped="" ref="0x40835540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x4083569c" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x4083569c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4083585c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4087e50c" loc="69:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4087e50c"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4087e6cc"/>
        <function-ref name="cancel" scoped="" ref="0x4087e7a8"/>
        <function-ref name="sendDone" scoped="" ref="0x4087e884"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4087e9e0" loc="70:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4087e9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4087eba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40849cfc" loc="57:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40849cfc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40849ebc"/>
        <function-ref name="payloadLength" scoped="" ref="0x40848010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408480ec"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408481c8"/>
        <function-ref name="headerLength" scoped="" ref="0x408482a4"/>
        <function-ref name="metadataLength" scoped="" ref="0x40848380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x408489b0" loc="62:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x408489b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40848b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4087ecfc" loc="71:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4087ecfc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4087eebc"/>
        <function-ref name="payloadLength" scoped="" ref="0x4087d010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4087d0ec"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4087d1c8"/>
        <function-ref name="headerLength" scoped="" ref="0x4087d2a4"/>
        <function-ref name="metadataLength" scoped="" ref="0x4087d380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x408484dc" loc="61:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x408484dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4084869c"/>
        <function-ref name="cancel" scoped="" ref="0x40848778"/>
        <function-ref name="sendDone" scoped="" ref="0x40848854"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x4084950c" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x4084950c"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408496cc"/>
        <function-ref name="cancel" scoped="" ref="0x408497a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40849884"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x408499e0" loc="56:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x408499e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40849ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x40848ccc" loc="63:/opt/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x40848ccc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40848e8c"/>
        <function-ref name="payloadLength" scoped="" ref="0x4087e010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4087e0ec"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4087e1c8"/>
        <function-ref name="headerLength" scoped="" ref="0x4087e2a4"/>
        <function-ref name="metadataLength" scoped="" ref="0x4087e380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x408d24e0" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x408d24e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x408d26a0"/>
        <function-ref name="address" scoped="" ref="0x408d277c"/>
        <function-ref name="destination" scoped="" ref="0x408d2858"/>
        <function-ref name="setSource" scoped="" ref="0x408d2934"/>
        <function-ref name="setDestination" scoped="" ref="0x408d2a10"/>
        <function-ref name="pan" scoped="" ref="0x408d2aec"/>
        <function-ref name="setPan" scoped="" ref="0x408d2bc8"/>
        <function-ref name="isForMe" scoped="" ref="0x408d2ca4"/>
        <function-ref name="localPan" scoped="" ref="0x408d2d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x408d2ebc" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x408d2ebc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408d10b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x408d1194"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408d1270"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408d134c"/>
        <function-ref name="headerLength" scoped="" ref="0x408d1428"/>
        <function-ref name="metadataLength" scoped="" ref="0x408d1504"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x4087aa6c" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4087aa6c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4087ac2c"/>
        <function-ref name="getDSN" scoped="" ref="0x4087ad08"/>
        <function-ref name="setFCF" scoped="" ref="0x4087ade4"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4087aec0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x408b7010"/>
        <function-ref name="createDataFrame" scoped="" ref="0x408b70ec"/>
        <function-ref name="setDSN" scoped="" ref="0x408b71c8"/>
        <function-ref name="createAckReply" scoped="" ref="0x408b72a4"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x408b7380"/>
        <function-ref name="isDataFrame" scoped="" ref="0x408b745c"/>
        <function-ref name="getAckRequired" scoped="" ref="0x408b7538"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x408b7614"/>
        <function-ref name="localAddr" scoped="" ref="0x408b76f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x408b784c"/>
        <function-ref name="localPan" scoped="" ref="0x408b7928"/>
        <function-ref name="setDestAddr" scoped="" ref="0x408b7a04"/>
        <function-ref name="createAckFrame" scoped="" ref="0x408b7ae0"/>
        <function-ref name="setFramePending" scoped="" ref="0x408b7bbc"/>
        <function-ref name="setDestPan" scoped="" ref="0x408b7c98"/>
        <function-ref name="isForMe" scoped="" ref="0x408b7d74"/>
        <function-ref name="setAckRequired" scoped="" ref="0x408b7e50"/>
        <function-ref name="getFCF" scoped="" ref="0x408d2010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x408d20ec"/>
        <function-ref name="getDestAddr" scoped="" ref="0x408d21c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x408d22a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x408d1690" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x408d1690"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408d1850"/>
        <function-ref name="payloadLength" scoped="" ref="0x408d192c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408d1a08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408d1ae4"/>
        <function-ref name="headerLength" scoped="" ref="0x408d1bc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x408d1c9c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x41426328" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x41426328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x414264e8"/>
        <function-ref name="address" scoped="" ref="0x414265c4"/>
        <function-ref name="destination" scoped="" ref="0x414266a0"/>
        <function-ref name="setSource" scoped="" ref="0x4142677c"/>
        <function-ref name="setDestination" scoped="" ref="0x41426858"/>
        <function-ref name="pan" scoped="" ref="0x41426934"/>
        <function-ref name="setPan" scoped="" ref="0x41426a10"/>
        <function-ref name="isForMe" scoped="" ref="0x41426aec"/>
        <function-ref name="localPan" scoped="" ref="0x41426bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41426d04" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41426d04"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41426ec4"/>
        <function-ref name="payloadLength" scoped="" ref="0x41425010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414250ec"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x414251c8"/>
        <function-ref name="headerLength" scoped="" ref="0x414252a4"/>
        <function-ref name="metadataLength" scoped="" ref="0x41425380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x4142d8bc" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4142d8bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4142da7c"/>
        <function-ref name="getDSN" scoped="" ref="0x4142db58"/>
        <function-ref name="setFCF" scoped="" ref="0x4142dc34"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4142dd10"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4142ddec"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4142dec8"/>
        <function-ref name="setDSN" scoped="" ref="0x41427010"/>
        <function-ref name="createAckReply" scoped="" ref="0x414270ec"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x414271c8"/>
        <function-ref name="isDataFrame" scoped="" ref="0x414272a4"/>
        <function-ref name="getAckRequired" scoped="" ref="0x41427380"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4142745c"/>
        <function-ref name="localAddr" scoped="" ref="0x41427538"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x41427694"/>
        <function-ref name="localPan" scoped="" ref="0x41427770"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4142784c"/>
        <function-ref name="createAckFrame" scoped="" ref="0x41427928"/>
        <function-ref name="setFramePending" scoped="" ref="0x41427a04"/>
        <function-ref name="setDestPan" scoped="" ref="0x41427ae0"/>
        <function-ref name="isForMe" scoped="" ref="0x41427bbc"/>
        <function-ref name="setAckRequired" scoped="" ref="0x41427c98"/>
        <function-ref name="getFCF" scoped="" ref="0x41427d74"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x41427e50"/>
        <function-ref name="getDestAddr" scoped="" ref="0x41426010"/>
        <function-ref name="getFramePending" scoped="" ref="0x414260ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x414254ec" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x414254ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x414256ac"/>
        <function-ref name="changed" scoped="" ref="0x41425788"/>
        <function-ref name="amGroup" scoped="" ref="0x41425864"/>
        <function-ref name="setAddress" scoped="" ref="0x41425940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41425a9c" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41425a9c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41425c5c"/>
        <function-ref name="payloadLength" scoped="" ref="0x41425d38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41425e14"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41425ef0"/>
        <function-ref name="headerLength" scoped="" ref="0x41424010"/>
        <function-ref name="metadataLength" scoped="" ref="0x414240ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408ce438" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408ce438"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408ce5f8"/>
        <function-ref name="cancel" scoped="" ref="0x408ce6d4"/>
        <function-ref name="sendDone" scoped="" ref="0x408ce7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408ce90c" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408ce90c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408ceacc"/>
        <function-ref name="header" scoped="" ref="0x408ceba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408cfac0" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408cfac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408cfc80"/>
        <function-ref name="cancel" scoped="" ref="0x408cfd5c"/>
        <function-ref name="sendDone" scoped="" ref="0x408cfe38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408ced04" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408ced04"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x408ceec4"/>
        <function-ref name="reportChannelError" scoped="" ref="0x4090b010"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4090b0ec"/>
        <function-ref name="getSender" scoped="" ref="0x4090b1c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408ce010" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408ce010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408ce1d0"/>
        <function-ref name="header" scoped="" ref="0x408ce2ac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41491734" loc="50:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41491734"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414918f4"/>
        <function-ref name="cancel" scoped="" ref="0x414919d0"/>
        <function-ref name="sendDone" scoped="" ref="0x41491aac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41491c08" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41491c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41491dc8"/>
        <function-ref name="header" scoped="" ref="0x41491ea4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x4148fc0c" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4148fc0c"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4148fdcc"/>
        <function-ref name="clearAll" scoped="" ref="0x4148fea8"/>
        <function-ref name="get" scoped="" ref="0x4148e010"/>
        <function-ref name="set" scoped="" ref="0x4148e0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41449a94" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41449a94"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41449c54"/>
        <function-ref name="cancel" scoped="" ref="0x41449d30"/>
        <function-ref name="sendDone" scoped="" ref="0x41449e0c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x4148f5a0" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x4148f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x4148f760"/>
        <function-ref name="insertNode" scoped="" ref="0x4148f83c"/>
        <function-ref name="getNode" scoped="" ref="0x4148f918"/>
        <function-ref name="evicted" scoped="" ref="0x4148f9f4"/>
        <function-ref name="getIndex" scoped="" ref="0x4148fad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x41491010" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41491010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414911d0"/>
        <function-ref name="header" scoped="" ref="0x414912ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x414913e8" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x414913e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x414915a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x4148f010" loc="53:/opt/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x4148f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4148f1d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x4148f2ac"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4148f388"/>
        <function-ref name="getSender" scoped="" ref="0x4148f464"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x408edc90" loc="37:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x408edc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x408ede50"/>
        <function-ref name="insertNode" scoped="" ref="0x408e9010"/>
        <function-ref name="getNode" scoped="" ref="0x408e90ec"/>
        <function-ref name="evicted" scoped="" ref="0x408e91c8"/>
        <function-ref name="getIndex" scoped="" ref="0x408e92a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x408e6670" loc="43:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x408e6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408e6830"/>
        <function-ref name="clearAll" scoped="" ref="0x408e690c"/>
        <function-ref name="get" scoped="" ref="0x408e69e8"/>
        <function-ref name="set" scoped="" ref="0x408e6ac4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x408e9c48" loc="42:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x408e9c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x408e9e08"/>
        <function-ref name="insertNode" scoped="" ref="0x408e9ee4"/>
        <function-ref name="getNode" scoped="" ref="0x408e6010"/>
        <function-ref name="evicted" scoped="" ref="0x408e60ec"/>
        <function-ref name="getIndex" scoped="" ref="0x408e61c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408e98d0" loc="41:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408e98d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408e9a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x4148ef24" loc="37:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4148ef24"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4148d0fc"/>
        <function-ref name="clearAll" scoped="" ref="0x4148d1d8"/>
        <function-ref name="get" scoped="" ref="0x4148d2b4"/>
        <function-ref name="set" scoped="" ref="0x4148d390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409027a8" loc="85:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409027a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40902968"/>
        <function-ref name="cancel" scoped="" ref="0x40902a44"/>
        <function-ref name="sendDone" scoped="" ref="0x40902b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40902c7c" loc="86:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40902c7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40902e3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x40900344" loc="93:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x40900344"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40900504"/>
        <function-ref name="noAck" scoped="" ref="0x409005e0"/>
        <function-ref name="wasAcked" scoped="" ref="0x409006bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40909168" loc="77:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40909168"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40909328"/>
        <function-ref name="cancel" scoped="" ref="0x40909404"/>
        <function-ref name="sendDone" scoped="" ref="0x409094e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40902010" loc="80:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40902010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409021d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x409022ac"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40902388"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40902464"/>
        <function-ref name="headerLength" scoped="" ref="0x40902540"/>
        <function-ref name="metadataLength" scoped="" ref="0x4090261c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40901010" loc="87:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40901010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409011d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x409012ac"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40901388"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40901464"/>
        <function-ref name="headerLength" scoped="" ref="0x40901540"/>
        <function-ref name="metadataLength" scoped="" ref="0x4090161c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x40901c4c" loc="92:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x40901c4c"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40901e0c"/>
        <function-ref name="setRetries" scoped="" ref="0x40901ee8"/>
        <function-ref name="getRetries" scoped="" ref="0x40900010"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x409000ec"/>
        <function-ref name="wasDelivered" scoped="" ref="0x409001c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4090963c" loc="78:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4090963c"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409097fc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40901758" loc="88:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40901758"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40901918"/>
        <function-ref name="noAck" scoped="" ref="0x409019f4"/>
        <function-ref name="wasAcked" scoped="" ref="0x40901ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40909938" loc="79:/opt/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40909938"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40909af8"/>
        <function-ref name="setRetries" scoped="" ref="0x40909bd4"/>
        <function-ref name="getRetries" scoped="" ref="0x40909cb0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40909d8c"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40909e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4091b5b4" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4091b5b4"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4091b774"/>
        <function-ref name="stopDone" scoped="" ref="0x4091b850"/>
        <function-ref name="start" scoped="" ref="0x4091b92c"/>
        <function-ref name="stop" scoped="" ref="0x4091ba08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4090e640" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4090e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4090e800"/>
        <function-ref name="cancel" scoped="" ref="0x4090e8dc"/>
        <function-ref name="sendDone" scoped="" ref="0x4090e9b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4090eb14" loc="50:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4090eb14"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4090ecd4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4091bb64" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4091bb64"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4091bd24"/>
        <function-ref name="cancel" scoped="" ref="0x4091be00"/>
        <function-ref name="sendDone" scoped="" ref="0x4091bedc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4090f34c" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4090f34c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4090f50c"/>
        <function-ref name="payloadLength" scoped="" ref="0x4090f5e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4090f6c4"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4090f7a0"/>
        <function-ref name="headerLength" scoped="" ref="0x4090f87c"/>
        <function-ref name="metadataLength" scoped="" ref="0x4090f958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4090fa94" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4090fa94"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4090fc54"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4090fd30"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4090fe0c"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4090fee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x4090e090" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x4090e090"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4090e250"/>
        <function-ref name="stopDone" scoped="" ref="0x4090e32c"/>
        <function-ref name="start" scoped="" ref="0x4090e408"/>
        <function-ref name="stop" scoped="" ref="0x4090e4e4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4090f050" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4090f050"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4090f210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4090ee30" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4090ee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4092b010"/>
        <function-ref name="payloadLength" scoped="" ref="0x4092b0ec"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4092b1c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4092b2a4"/>
        <function-ref name="headerLength" scoped="" ref="0x4092b380"/>
        <function-ref name="metadataLength" scoped="" ref="0x4092b45c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4147a1e4" loc="37:/opt/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4147a1e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4147a3a4"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4147a480"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4147a55c"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4147a638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40927a1c" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40927a1c"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40927bdc"/>
        <function-ref name="stopDone" scoped="" ref="0x40927cb8"/>
        <function-ref name="start" scoped="" ref="0x40927d94"/>
        <function-ref name="stop" scoped="" ref="0x40927e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40967cc4" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40967cc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40967e84"/>
        <function-ref name="turnOn" scoped="" ref="0x40966010"/>
        <function-ref name="setChannel" scoped="" ref="0x409660ec"/>
        <function-ref name="done" scoped="" ref="0x409661c8"/>
        <function-ref name="standby" scoped="" ref="0x409662a4"/>
        <function-ref name="getChannel" scoped="" ref="0x40966380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40967010" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40967010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409671d0"/>
        <function-ref name="cancel" scoped="" ref="0x409672ac"/>
        <function-ref name="sendDone" scoped="" ref="0x40967388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40966970" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40966970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40966b30"/>
        <function-ref name="header" scoped="" ref="0x40966c0c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409674e4" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409674e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409676a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x409664bc" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409664bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4096667c"/>
        <function-ref name="ready" scoped="" ref="0x40966758"/>
        <function-ref name="sendDone" scoped="" ref="0x40966834"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x409677e0" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x409677e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x409679a0"/>
        <function-ref name="setChannel" scoped="" ref="0x40967a7c"/>
        <function-ref name="getChannel" scoped="" ref="0x40967b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41476398" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41476398"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41476558"/>
        <function-ref name="stopDone" scoped="" ref="0x41476634"/>
        <function-ref name="start" scoped="" ref="0x41476710"/>
        <function-ref name="stop" scoped="" ref="0x414767ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x41476948" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x41476948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41476b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x4147594c" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4147594c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x41475b0c"/>
        <function-ref name="turnOn" scoped="" ref="0x41475be8"/>
        <function-ref name="setChannel" scoped="" ref="0x41475cc4"/>
        <function-ref name="done" scoped="" ref="0x41475da0"/>
        <function-ref name="standby" scoped="" ref="0x41475e7c"/>
        <function-ref name="getChannel" scoped="" ref="0x41474010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41476c64" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41476c64"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41476e24"/>
        <function-ref name="cancel" scoped="" ref="0x41476f00"/>
        <function-ref name="sendDone" scoped="" ref="0x41475010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x41473428" loc="189:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x41473428"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414735e8"/>
        <function-ref name="runTask" scoped="" ref="0x414736c4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x41474b90" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41474b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41474d50"/>
        <function-ref name="header" scoped="" ref="0x41474e2c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x41473840" loc="144:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x41473840"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41473a00"/>
        <function-ref name="runTask" scoped="" ref="0x41473adc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4147516c" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4147516c"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4147532c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x41473010" loc="322:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x41473010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414731d0"/>
        <function-ref name="runTask" scoped="" ref="0x414732ac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x414746dc" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x414746dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4147489c"/>
        <function-ref name="ready" scoped="" ref="0x41474978"/>
        <function-ref name="sendDone" scoped="" ref="0x41474a54"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x41475468" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x41475468"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x41475628"/>
        <function-ref name="setChannel" scoped="" ref="0x41475704"/>
        <function-ref name="getChannel" scoped="" ref="0x414757e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x4147414c" loc="53:/opt/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x4147414c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x4147430c"/>
        <function-ref name="suspend" scoped="" ref="0x414743e8"/>
        <function-ref name="resume" scoped="" ref="0x414744c4"/>
        <function-ref name="run" scoped="" ref="0x414745a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40963ef0" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40963ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4097d0d4"/>
        <function-ref name="ready" scoped="" ref="0x4097d1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x4097d28c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4097d3e8" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4097d3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4097d5a8"/>
        <function-ref name="header" scoped="" ref="0x4097d684"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x4097d7c0" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4097d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4097d980"/>
        <function-ref name="wait" scoped="" ref="0x4097da5c"/>
        <function-ref name="cancel" scoped="" ref="0x4097db38"/>
        <function-ref name="isFree" scoped="" ref="0x4097dc14"/>
        <function-ref name="getNow" scoped="" ref="0x4097dcf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4097de4c" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4097de4c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40994050"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4099412c"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40994208"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x409942e4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40963ac8" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40963ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40963c88"/>
        <function-ref name="header" scoped="" ref="0x40963d64"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40963614" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40963614"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409637d4"/>
        <function-ref name="ready" scoped="" ref="0x409638b0"/>
        <function-ref name="sendDone" scoped="" ref="0x4096398c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x414a1010" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x414a1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414a11d0"/>
        <function-ref name="ready" scoped="" ref="0x414a12ac"/>
        <function-ref name="sendDone" scoped="" ref="0x414a1388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x414a14e4" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x414a14e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414a16a4"/>
        <function-ref name="header" scoped="" ref="0x414a1780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x414a18bc" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x414a18bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x414a1a7c"/>
        <function-ref name="wait" scoped="" ref="0x414a1b58"/>
        <function-ref name="cancel" scoped="" ref="0x414a1c34"/>
        <function-ref name="isFree" scoped="" ref="0x414a1d10"/>
        <function-ref name="getNow" scoped="" ref="0x414a1dec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x414a1f28" loc="50:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x414a1f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x414a00fc"/>
        <function-ref name="rand32" scoped="" ref="0x414a01d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x414a0334" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x414a0334"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x414a04f4"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x414a05d0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x414a06ac"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x414a0788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x414a3b90" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x414a3b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414a3d50"/>
        <function-ref name="header" scoped="" ref="0x414a3e2c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x414a36dc" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x414a36dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414a389c"/>
        <function-ref name="ready" scoped="" ref="0x414a3978"/>
        <function-ref name="sendDone" scoped="" ref="0x414a3a54"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x414a0904" loc="78:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x414a0904"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414a0ac4"/>
        <function-ref name="runTask" scoped="" ref="0x414a0ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40980380" loc="46:/opt/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40980380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40980540"/>
        <function-ref name="rand32" scoped="" ref="0x4098061c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4097eaec" loc="45:/opt/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4097eaec"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409800f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4098394c" loc="44:/opt/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4098394c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40983b0c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x4097cd60" loc="48:/opt/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4097cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4097cf20"/>
        <function-ref name="rand32" scoped="" ref="0x4097a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4097c500" loc="47:/opt/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4097c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4097cad4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4097c010" loc="46:/opt/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4097c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4097c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40991354" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40991354"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40991514"/>
        <function-ref name="ready" scoped="" ref="0x409915f0"/>
        <function-ref name="sendDone" scoped="" ref="0x409916cc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40991828" loc="50:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40991828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409919e8"/>
        <function-ref name="header" scoped="" ref="0x40991ac4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40991c00" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40991c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40991dc0"/>
        <function-ref name="wait" scoped="" ref="0x40991e9c"/>
        <function-ref name="cancel" scoped="" ref="0x409b8010"/>
        <function-ref name="isFree" scoped="" ref="0x409b80ec"/>
        <function-ref name="getNow" scoped="" ref="0x409b81c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x409b8c44" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x409b8c44"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409b8e04"/>
        <function-ref name="get" scoped="" ref="0x409b8ee0"/>
        <function-ref name="setValue" scoped="" ref="0x409b7010"/>
        <function-ref name="set" scoped="" ref="0x409b70ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409b8324" loc="53:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409b8324"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x409b84e4"/>
        <function-ref name="createAckPacket" scoped="" ref="0x409b85c0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x409b869c"/>
        <function-ref name="isAckPacket" scoped="" ref="0x409b8778"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x409b8854"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x409b8930"/>
        <function-ref name="setAckRequired" scoped="" ref="0x409b8a0c"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x409b8ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40992a1c" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40992a1c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40992bdc"/>
        <function-ref name="header" scoped="" ref="0x40992cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40992568" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40992568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40992728"/>
        <function-ref name="ready" scoped="" ref="0x40992804"/>
        <function-ref name="sendDone" scoped="" ref="0x409928e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40992df4" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40992df4"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40991010"/>
        <function-ref name="noAck" scoped="" ref="0x409910ec"/>
        <function-ref name="wasAcked" scoped="" ref="0x409911c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409b3968" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409b3968"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409b3b28"/>
        <function-ref name="stopDone" scoped="" ref="0x409b3c04"/>
        <function-ref name="start" scoped="" ref="0x409b3ce0"/>
        <function-ref name="stop" scoped="" ref="0x409b3dbc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409c86dc" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409c86dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409c889c"/>
        <function-ref name="request" scoped="" ref="0x409c8978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409c6b34" loc="59:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409c6b34"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c6cf4"/>
        <function-ref name="ready" scoped="" ref="0x409c6dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x409c6eac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409c5030" loc="60:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409c5030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409c51f0"/>
        <function-ref name="header" scoped="" ref="0x409c52cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409a96c4" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409a96c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409a9884"/>
        <function-ref name="turnOn" scoped="" ref="0x409a9960"/>
        <function-ref name="setChannel" scoped="" ref="0x409a9a3c"/>
        <function-ref name="done" scoped="" ref="0x409a9b18"/>
        <function-ref name="standby" scoped="" ref="0x409a9bf4"/>
        <function-ref name="getChannel" scoped="" ref="0x409a9cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409c8ab4" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409c8ab4"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c8c74"/>
        <function-ref name="payloadLength" scoped="" ref="0x409c8d50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c8e2c"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409c8f08"/>
        <function-ref name="headerLength" scoped="" ref="0x409c7010"/>
        <function-ref name="metadataLength" scoped="" ref="0x409c70ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x409c634c" loc="58:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x409c634c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409c658c"/>
        <function-ref name="turnOn" scoped="" ref="0x409c6668"/>
        <function-ref name="setChannel" scoped="" ref="0x409c6744"/>
        <function-ref name="done" scoped="" ref="0x409c6820"/>
        <function-ref name="standby" scoped="" ref="0x409c68fc"/>
        <function-ref name="getChannel" scoped="" ref="0x409c69d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x409c7248" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x409c7248"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409c7408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409c8304" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409c8304"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409c84c4"/>
        <function-ref name="header" scoped="" ref="0x409c85a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x409c6030" loc="56:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x409c6030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409c61f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x409c7594" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x409c7594"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409c7754"/>
        <function-ref name="stopDone" scoped="" ref="0x409c7830"/>
        <function-ref name="start" scoped="" ref="0x409c790c"/>
        <function-ref name="stop" scoped="" ref="0x409c79e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409c5820" loc="62:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409c5820"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c59e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x409c5abc"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c5b98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409c5c74"/>
        <function-ref name="headerLength" scoped="" ref="0x409c5d50"/>
        <function-ref name="metadataLength" scoped="" ref="0x409c5e2c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x409a93c8" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x409a93c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409a9588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409c4010" loc="64:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409c4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409c41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x409c7b44" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x409c7b44"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c7d04"/>
        <function-ref name="cancel" scoped="" ref="0x409c7de0"/>
        <function-ref name="sendDone" scoped="" ref="0x409c7ebc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409a9e0c" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409a9e0c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c8010"/>
        <function-ref name="ready" scoped="" ref="0x409c80ec"/>
        <function-ref name="sendDone" scoped="" ref="0x409c81c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x409c5428" loc="61:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x409c5428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409c55e8"/>
        <function-ref name="request" scoped="" ref="0x409c56c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x409b3ef8" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x409b3ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a90d4"/>
        <function-ref name="cancel" scoped="" ref="0x409a91b0"/>
        <function-ref name="sendDone" scoped="" ref="0x409a928c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x409f1010" loc="50:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x409f1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f11d0"/>
        <function-ref name="get" scoped="" ref="0x409f12ac"/>
        <function-ref name="setValue" scoped="" ref="0x409f1388"/>
        <function-ref name="set" scoped="" ref="0x409f1464"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409f3778" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409f3778"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f3938"/>
        <function-ref name="payloadLength" scoped="" ref="0x409f3a14"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409f3af0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409f3bcc"/>
        <function-ref name="headerLength" scoped="" ref="0x409f3ca8"/>
        <function-ref name="metadataLength" scoped="" ref="0x409f3d84"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409f2824" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409f2824"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f29e4"/>
        <function-ref name="payloadLength" scoped="" ref="0x409f2ac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409f2b9c"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409f2c78"/>
        <function-ref name="headerLength" scoped="" ref="0x409f2d54"/>
        <function-ref name="metadataLength" scoped="" ref="0x409f2e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x409f51c0" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409f51c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403dabb8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409f5c3c"/>
        <function-ref name="clear" scoped="" ref="0x409f3010"/>
        <function-ref name="isValid" scoped="" ref="0x409f58b0"/>
        <function-ref name="set" scoped="" ref="0x409f339c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x409f2010" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x409f2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403dabb8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409f2600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x409c1a74" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409c1a74"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409c0578"/>
        <function-ref name="clear" scoped="" ref="0x409c0904"/>
        <function-ref name="isValid" scoped="" ref="0x409c01ec"/>
        <function-ref name="set" scoped="" ref="0x409c0c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x414c019c" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x414c019c"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414c035c"/>
        <function-ref name="get" scoped="" ref="0x414c0438"/>
        <function-ref name="setValue" scoped="" ref="0x414c0514"/>
        <function-ref name="set" scoped="" ref="0x414c05f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x414c292c" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x414c292c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414c2aec"/>
        <function-ref name="payloadLength" scoped="" ref="0x414c2bc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414c2ca4"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x414c2d80"/>
        <function-ref name="headerLength" scoped="" ref="0x414c2e5c"/>
        <function-ref name="metadataLength" scoped="" ref="0x414c0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x414bf8cc" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x414bf8cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414bfa8c"/>
        <function-ref name="payloadLength" scoped="" ref="0x414bfb68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414bfc44"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x414bfd20"/>
        <function-ref name="headerLength" scoped="" ref="0x414bfdfc"/>
        <function-ref name="metadataLength" scoped="" ref="0x414bfed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x414c33a8" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x414c33a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403dabb8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x414c3e24"/>
        <function-ref name="clear" scoped="" ref="0x414c21c4"/>
        <function-ref name="isValid" scoped="" ref="0x414c3a98"/>
        <function-ref name="set" scoped="" ref="0x414c2550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x414c07d4" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x414c07d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403dabb8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414c0dc4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x414bf0b8" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x414bf0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414bf6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x414c8cd4" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x414c8cd4"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x414c4770"/>
        <function-ref name="clear" scoped="" ref="0x414c4afc"/>
        <function-ref name="isValid" scoped="" ref="0x414c43e4"/>
        <function-ref name="set" scoped="" ref="0x414c4e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x409f9ad4" loc="20:/opt/tinyos/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x409f9ad4"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409f60e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409ee7e4" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409ee7e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ee9a4"/>
        <function-ref name="payloadLength" scoped="" ref="0x409eea80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409eeb5c"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409eec38"/>
        <function-ref name="headerLength" scoped="" ref="0x409eed14"/>
        <function-ref name="metadataLength" scoped="" ref="0x409eedf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409ed010" loc="48:/opt/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409ed010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ed1d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x409ed2ac"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409ed388"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409ed464"/>
        <function-ref name="headerLength" scoped="" ref="0x409ed540"/>
        <function-ref name="metadataLength" scoped="" ref="0x409ed61c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x409ee244" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x409ee244"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409ee414"/>
        <function-ref name="get" scoped="" ref="0x409ee4f0"/>
        <function-ref name="setValue" scoped="" ref="0x409ee5cc"/>
        <function-ref name="set" scoped="" ref="0x409ee6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409fd7ac" loc="39:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409fd7ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409fd96c"/>
        <function-ref name="stopDone" scoped="" ref="0x409fda48"/>
        <function-ref name="start" scoped="" ref="0x409fdb24"/>
        <function-ref name="stop" scoped="" ref="0x409fdc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409fb524" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409fb524"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409fb6e4"/>
        <function-ref name="request" scoped="" ref="0x409fb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a1a994" loc="59:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a1a994"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a1ab54"/>
        <function-ref name="ready" scoped="" ref="0x40a1ac30"/>
        <function-ref name="sendDone" scoped="" ref="0x40a1ad0c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40a1ae68" loc="60:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40a1ae68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a19050"/>
        <function-ref name="header" scoped="" ref="0x40a1912c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409fc524" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409fc524"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409fc6e4"/>
        <function-ref name="turnOn" scoped="" ref="0x409fc7c0"/>
        <function-ref name="setChannel" scoped="" ref="0x409fc89c"/>
        <function-ref name="done" scoped="" ref="0x409fc978"/>
        <function-ref name="standby" scoped="" ref="0x409fca54"/>
        <function-ref name="getChannel" scoped="" ref="0x409fcb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409fb8fc" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409fb8fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409fbabc"/>
        <function-ref name="payloadLength" scoped="" ref="0x409fbb98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409fbc74"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409fbd50"/>
        <function-ref name="headerLength" scoped="" ref="0x409fbe2c"/>
        <function-ref name="metadataLength" scoped="" ref="0x409fbf08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40a1a1ac" loc="58:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40a1a1ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a1a3ec"/>
        <function-ref name="turnOn" scoped="" ref="0x40a1a4c8"/>
        <function-ref name="setChannel" scoped="" ref="0x40a1a5a4"/>
        <function-ref name="done" scoped="" ref="0x40a1a680"/>
        <function-ref name="standby" scoped="" ref="0x40a1a75c"/>
        <function-ref name="getChannel" scoped="" ref="0x40a1a838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40a1b090" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40a1b090"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40a1b250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409fb14c" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409fb14c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409fb30c"/>
        <function-ref name="header" scoped="" ref="0x409fb3e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40a1be60" loc="56:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40a1be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a1a050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40a1b3dc" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40a1b3dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a1b59c"/>
        <function-ref name="stopDone" scoped="" ref="0x40a1b678"/>
        <function-ref name="start" scoped="" ref="0x40a1b754"/>
        <function-ref name="stop" scoped="" ref="0x40a1b830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a19680" loc="62:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a19680"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a19840"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a1991c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a199f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a19ad4"/>
        <function-ref name="headerLength" scoped="" ref="0x40a19bb0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a19c8c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x409fc228" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x409fc228"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409fc3e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a19de8" loc="64:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a19de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40a18010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40a1b98c" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40a1b98c"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a1bb4c"/>
        <function-ref name="cancel" scoped="" ref="0x40a1bc28"/>
        <function-ref name="sendDone" scoped="" ref="0x40a1bd04"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409fcc6c" loc="44:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409fcc6c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409fce2c"/>
        <function-ref name="ready" scoped="" ref="0x409fcf08"/>
        <function-ref name="sendDone" scoped="" ref="0x409fb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40a19288" loc="61:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40a19288"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a19448"/>
        <function-ref name="request" scoped="" ref="0x40a19524"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x409fdd3c" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x409fdd3c"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409fdefc"/>
        <function-ref name="cancel" scoped="" ref="0x409fc010"/>
        <function-ref name="sendDone" scoped="" ref="0x409fc0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40a136d0" loc="45:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40a136d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a13890"/>
        <function-ref name="request" scoped="" ref="0x40a1396c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40a117c4" loc="49:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40a117c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0f31c"/>
        <function-ref name="get" scoped="" ref="0x40a0f07c"/>
        <function-ref name="isSet" scoped="" ref="0x40a11db4"/>
        <function-ref name="set" scoped="" ref="0x40a0f5bc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40a26010" loc="64:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40a26010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a261d0"/>
        <function-ref name="get" scoped="" ref="0x40a262ac"/>
        <function-ref name="setValue" scoped="" ref="0x40a26388"/>
        <function-ref name="set" scoped="" ref="0x40a26464"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a2929c" loc="61:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a2929c"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403dabb8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a29d18"/>
        <function-ref name="clear" scoped="" ref="0x40a280c8"/>
        <function-ref name="isValid" scoped="" ref="0x40a2998c"/>
        <function-ref name="set" scoped="" ref="0x40a28454"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40a16550" loc="42:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40a16550"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a16710"/>
        <function-ref name="turnOn" scoped="" ref="0x40a167ec"/>
        <function-ref name="setChannel" scoped="" ref="0x40a168c8"/>
        <function-ref name="done" scoped="" ref="0x40a169a4"/>
        <function-ref name="standby" scoped="" ref="0x40a16a80"/>
        <function-ref name="getChannel" scoped="" ref="0x40a16b5c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40a26c9c" loc="66:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40a26c9c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a26e5c"/>
        <function-ref name="wait" scoped="" ref="0x40a25010"/>
        <function-ref name="cancel" scoped="" ref="0x40a250ec"/>
        <function-ref name="isFree" scoped="" ref="0x40a251c8"/>
        <function-ref name="getNow" scoped="" ref="0x40a252a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40a12524" loc="48:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a12524"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a1107c"/>
        <function-ref name="get" scoped="" ref="0x40a12db4"/>
        <function-ref name="isSet" scoped="" ref="0x40a12b14"/>
        <function-ref name="set" scoped="" ref="0x40a1131c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a13b18" loc="46:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a13b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a13cd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a13db4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a13e90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a12010"/>
        <function-ref name="headerLength" scoped="" ref="0x40a120ec"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a121c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a2a8e8" loc="60:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a2a8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a2ab28"/>
        <function-ref name="headerLength" scoped="" ref="0x40a2ac04"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a2ace0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40a2adbc"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40a2ae98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40a132a4" loc="44:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40a132a4"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a13464"/>
        <function-ref name="header" scoped="" ref="0x40a13540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a2dec8" loc="55:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a2dec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403dabb8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x403dae4c"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a2a32c"/>
        <function-ref name="fired" scoped="" ref="0x40a2caac"/>
        <function-ref name="startAt" scoped="" ref="0x40a2a010"/>
        <function-ref name="isRunning" scoped="" ref="0x40a2cd08"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a2a588"/>
        <function-ref name="start" scoped="" ref="0x40a2c5cc"/>
        <function-ref name="stop" scoped="" ref="0x40a2c850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40a0fac8" loc="50:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a0fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0e628"/>
        <function-ref name="get" scoped="" ref="0x40a0e388"/>
        <function-ref name="isSet" scoped="" ref="0x40a0e0e8"/>
        <function-ref name="set" scoped="" ref="0x40a0e8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40a2d4e0" loc="54:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a2d4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403dabb8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a2dad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40a16cf4" loc="43:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40a16cf4"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a16eb4"/>
        <function-ref name="ready" scoped="" ref="0x40a13010"/>
        <function-ref name="sendDone" scoped="" ref="0x40a130ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40a0edb4" loc="51:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a0edb4"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a0c908"/>
        <function-ref name="get" scoped="" ref="0x40a0c668"/>
        <function-ref name="isSet" scoped="" ref="0x40a0c3c8"/>
        <function-ref name="set" scoped="" ref="0x40a0cba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40a266a4" loc="65:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a266a4"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a26864"/>
        <function-ref name="get" scoped="" ref="0x40a26940"/>
        <function-ref name="setValue" scoped="" ref="0x40a26a1c"/>
        <function-ref name="set" scoped="" ref="0x40a26af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40a28964" loc="63:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a28964"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a28b24"/>
        <function-ref name="get" scoped="" ref="0x40a28c00"/>
        <function-ref name="setValue" scoped="" ref="0x40a28cdc"/>
        <function-ref name="set" scoped="" ref="0x40a28db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a2d010" loc="52:/opt/tinyos/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a2d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a2d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40a20b04" loc="52:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40a20b04"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a20cc4"/>
        <function-ref name="request" scoped="" ref="0x40a20da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40a33010" loc="74:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40a33010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40a33700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40a1ec98" loc="56:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40a1ec98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a3e808"/>
        <function-ref name="get" scoped="" ref="0x40a3e568"/>
        <function-ref name="isSet" scoped="" ref="0x40a3e2c8"/>
        <function-ref name="set" scoped="" ref="0x40a3eaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40a2e228" loc="80:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40a2e228"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a2e3e8"/>
        <function-ref name="get" scoped="" ref="0x40a2e4c4"/>
        <function-ref name="setValue" scoped="" ref="0x40a2e5a0"/>
        <function-ref name="set" scoped="" ref="0x40a2e67c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40a21628" loc="47:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40a21628"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4031313c"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4031313c"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a217e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a4f0ac" loc="83:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a4f0ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403dabb8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a4fc28"/>
        <function-ref name="clear" scoped="" ref="0x40a4e010"/>
        <function-ref name="isValid" scoped="" ref="0x40a4f89c"/>
        <function-ref name="set" scoped="" ref="0x40a4e39c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x40a387f8" loc="70:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40a387f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a389b8"/>
        <function-ref name="isInput" scoped="" ref="0x40a38a94"/>
        <function-ref name="toggle" scoped="" ref="0x40a38b70"/>
        <function-ref name="isOutput" scoped="" ref="0x40a38c4c"/>
        <function-ref name="get" scoped="" ref="0x40a38d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a38e04"/>
        <function-ref name="set" scoped="" ref="0x40a38ee0"/>
        <function-ref name="clr" scoped="" ref="0x40a37010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40a4edb8" loc="86:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40a4edb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a4d010"/>
        <function-ref name="wait" scoped="" ref="0x40a4d0ec"/>
        <function-ref name="cancel" scoped="" ref="0x40a4d1c8"/>
        <function-ref name="isFree" scoped="" ref="0x40a4d2a4"/>
        <function-ref name="getNow" scoped="" ref="0x40a4d380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40a2198c" loc="49:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40a2198c"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a21b4c"/>
        <function-ref name="turnOn" scoped="" ref="0x40a21c28"/>
        <function-ref name="setChannel" scoped="" ref="0x40a21d04"/>
        <function-ref name="done" scoped="" ref="0x40a21de0"/>
        <function-ref name="standby" scoped="" ref="0x40a21ebc"/>
        <function-ref name="getChannel" scoped="" ref="0x40a20010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40a33a50" loc="75:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40a33a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403dabb8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a2f060"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40a1f978" loc="55:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a1f978"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a1e550"/>
        <function-ref name="get" scoped="" ref="0x40a1e2b0"/>
        <function-ref name="isSet" scoped="" ref="0x40a1e010"/>
        <function-ref name="set" scoped="" ref="0x40a1e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a1f010" loc="53:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a1f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a1f1d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a1f2ac"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a1f388"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a1f464"/>
        <function-ref name="headerLength" scoped="" ref="0x40a1f540"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a1f61c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x40a34e28" loc="69:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40a34e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a38010"/>
        <function-ref name="isInput" scoped="" ref="0x40a380ec"/>
        <function-ref name="toggle" scoped="" ref="0x40a381c8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a382a4"/>
        <function-ref name="get" scoped="" ref="0x40a38380"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a3845c"/>
        <function-ref name="set" scoped="" ref="0x40a38538"/>
        <function-ref name="clr" scoped="" ref="0x40a38614"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a2f370" loc="77:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a2f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a2f530"/>
        <function-ref name="headerLength" scoped="" ref="0x40a2f60c"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a2f6e8"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40a2f7c4"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40a2f8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40a206d8" loc="51:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40a206d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a20898"/>
        <function-ref name="header" scoped="" ref="0x40a20974"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x40a89bbc" loc="847:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x40a89bbc"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a89d7c"/>
        <function-ref name="runTask" scoped="" ref="0x40a89e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40a3d010" loc="57:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a3d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a3db40"/>
        <function-ref name="get" scoped="" ref="0x40a3d8a0"/>
        <function-ref name="isSet" scoped="" ref="0x40a3d600"/>
        <function-ref name="set" scoped="" ref="0x40a3dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40a21010" loc="46:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40a21010"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4031313c"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4031313c"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a211d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40a3930c" loc="65:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a3930c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a394cc"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a395a8"/>
        <function-ref name="request" scoped="" ref="0x40a39684"/>
        <function-ref name="granted" scoped="" ref="0x40a39760"/>
        <function-ref name="isOwner" scoped="" ref="0x40a3983c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x40a3a874" loc="64:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40a3a874"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a3aab4"/>
        <function-ref name="isInput" scoped="" ref="0x40a3ab90"/>
        <function-ref name="toggle" scoped="" ref="0x40a3ac6c"/>
        <function-ref name="isOutput" scoped="" ref="0x40a3ad48"/>
        <function-ref name="get" scoped="" ref="0x40a3ae24"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a3af00"/>
        <function-ref name="set" scoped="" ref="0x40a39010"/>
        <function-ref name="clr" scoped="" ref="0x40a390ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40a3b2ec" loc="58:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a3b2ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a3be1c"/>
        <function-ref name="get" scoped="" ref="0x40a3bb7c"/>
        <function-ref name="isSet" scoped="" ref="0x40a3b8dc"/>
        <function-ref name="set" scoped="" ref="0x40a3a0e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40a201a8" loc="50:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40a201a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a20368"/>
        <function-ref name="ready" scoped="" ref="0x40a20444"/>
        <function-ref name="sendDone" scoped="" ref="0x40a20520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x40a317d8" loc="72:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a317d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a31998"/>
        <function-ref name="disable" scoped="" ref="0x40a31a74"/>
        <function-ref name="captured" scoped="" ref="0x40a31b50"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a31c2c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x40a347dc" loc="67:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40a347dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a3499c"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a34a78"/>
        <function-ref name="splitRead" scoped="" ref="0x40a34b54"/>
        <function-ref name="write" scoped="" ref="0x40a34c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40a2e8bc" loc="81:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a2e8bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a2ea7c"/>
        <function-ref name="get" scoped="" ref="0x40a2eb58"/>
        <function-ref name="setValue" scoped="" ref="0x40a2ec34"/>
        <function-ref name="set" scoped="" ref="0x40a2ed10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40a2fb10" loc="79:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a2fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a2fcd0"/>
        <function-ref name="get" scoped="" ref="0x40a2fdac"/>
        <function-ref name="setValue" scoped="" ref="0x40a2fe88"/>
        <function-ref name="set" scoped="" ref="0x40a2e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a3a480" loc="59:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a3a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a3a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40a4e7c0" loc="85:/opt/tinyos/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40a4e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40a4e980"/>
        <function-ref name="suspend" scoped="" ref="0x40a4ea5c"/>
        <function-ref name="resume" scoped="" ref="0x40a4eb38"/>
        <function-ref name="run" scoped="" ref="0x40a4ec14"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40aaabb0" loc="46:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40aaabb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aaad70"/>
        <function-ref name="isInput" scoped="" ref="0x40aaae4c"/>
        <function-ref name="toggle" scoped="" ref="0x40aaaf28"/>
        <function-ref name="isOutput" scoped="" ref="0x40aa9018"/>
        <function-ref name="get" scoped="" ref="0x40aa90f4"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aa91d0"/>
        <function-ref name="set" scoped="" ref="0x40aa92ac"/>
        <function-ref name="clr" scoped="" ref="0x40aa9388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x40aaa208" loc="45:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40aaa208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aaa3c8"/>
        <function-ref name="isInput" scoped="" ref="0x40aaa4a4"/>
        <function-ref name="toggle" scoped="" ref="0x40aaa580"/>
        <function-ref name="isOutput" scoped="" ref="0x40aaa65c"/>
        <function-ref name="get" scoped="" ref="0x40aaa738"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aaa814"/>
        <function-ref name="set" scoped="" ref="0x40aaa8f0"/>
        <function-ref name="clr" scoped="" ref="0x40aaa9cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40aa9d30" loc="49:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40aa9d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403dabb8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40acb11c"/>
        <function-ref name="fired" scoped="" ref="0x40acc924"/>
        <function-ref name="startAt" scoped="" ref="0x40accddc"/>
        <function-ref name="isRunning" scoped="" ref="0x40accb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x40acb378"/>
        <function-ref name="start" scoped="" ref="0x40acc444"/>
        <function-ref name="stop" scoped="" ref="0x40acc6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x40aab4c4" loc="42:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40aab4c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40aab684"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40aab760"/>
        <function-ref name="request" scoped="" ref="0x40aab83c"/>
        <function-ref name="granted" scoped="" ref="0x40aab918"/>
        <function-ref name="isOwner" scoped="" ref="0x40aab9f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x40aafa84" loc="41:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40aafa84"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aafc44"/>
        <function-ref name="isInput" scoped="" ref="0x40aafd20"/>
        <function-ref name="toggle" scoped="" ref="0x40aafdfc"/>
        <function-ref name="isOutput" scoped="" ref="0x40aafed8"/>
        <function-ref name="get" scoped="" ref="0x40aab010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aab0ec"/>
        <function-ref name="set" scoped="" ref="0x40aab1c8"/>
        <function-ref name="clr" scoped="" ref="0x40aab2a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40aa9574" loc="48:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40aa9574"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40aa9734"/>
        <function-ref name="disable" scoped="" ref="0x40aa9810"/>
        <function-ref name="captured" scoped="" ref="0x40aa98ec"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40aa99c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40aabba0" loc="43:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40aabba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40aabd60"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40aabe3c"/>
        <function-ref name="splitRead" scoped="" ref="0x40aabf18"/>
        <function-ref name="write" scoped="" ref="0x40aaa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40acb750" loc="50:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40acb750"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TRadio" ref="0x403dabb8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40acbd40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x40ac4b0c" loc="46:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x40ac4b0c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ac4ccc"/>
        <function-ref name="isInput" scoped="" ref="0x40ac4da8"/>
        <function-ref name="toggle" scoped="" ref="0x40ac4e84"/>
        <function-ref name="isOutput" scoped="" ref="0x40ac0010"/>
        <function-ref name="get" scoped="" ref="0x40ac00ec"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ac01c8"/>
        <function-ref name="set" scoped="" ref="0x40ac02a4"/>
        <function-ref name="clr" scoped="" ref="0x40ac0380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x40ac2e98" loc="45:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40ac2e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40ac4810"/>
        <function-ref name="test" scoped="" ref="0x40ac4358"/>
        <function-ref name="get" scoped="" ref="0x40ac54ac"/>
        <function-ref name="captured" scoped="" ref="0x40ac598c"/>
        <function-ref name="reset" scoped="" ref="0x40ac5c10"/>
        <function-ref name="isOn" scoped="" ref="0x40ac45b4"/>
        <function-ref name="set" scoped="" ref="0x40ac5708"/>
        <function-ref name="start" scoped="" ref="0x40ac5e6c"/>
        <function-ref name="stop" scoped="" ref="0x40ac40fc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x40ac0580" loc="47:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x40ac0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ac0740"/>
        <function-ref name="isInput" scoped="" ref="0x40ac081c"/>
        <function-ref name="toggle" scoped="" ref="0x40ac08f8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ac09d4"/>
        <function-ref name="get" scoped="" ref="0x40ac0ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ac0b8c"/>
        <function-ref name="set" scoped="" ref="0x40ac0c68"/>
        <function-ref name="clr" scoped="" ref="0x40ac0d44"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40ac9ae4" loc="40:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40ac9ae4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ac9ca4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40ac948c" loc="39:/opt/tinyos/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40ac948c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40ac964c"/>
        <function-ref name="disable" scoped="" ref="0x40ac9728"/>
        <function-ref name="captured" scoped="" ref="0x40ac9804"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40ac98e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40ad4404" loc="84:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40ad4404"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ad45c4"/>
        <function-ref name="sendDone" scoped="" ref="0x40ad46a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40adbc00" loc="82:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40adbc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40adbdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40adb010" loc="81:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40adb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40adb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40ada010" loc="83:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40ada010"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40ada1d0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40ada2ac"/>
        <function-ref name="splitRead" scoped="" ref="0x40ada388"/>
        <function-ref name="write" scoped="" ref="0x40ada464"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ad4b10" loc="85:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ad4b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ad4cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ad4dac"/>
        <function-ref name="request" scoped="" ref="0x40ad4e88"/>
        <function-ref name="granted" scoped="" ref="0x40ad9010"/>
        <function-ref name="isOwner" scoped="" ref="0x40ad90ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40af92e4" loc="296:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40af92e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40af94a4"/>
        <function-ref name="runTask" scoped="" ref="0x40af9580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40ad2968" loc="94:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40ad2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ad2b28"/>
        <function-ref name="sendDone" scoped="" ref="0x40ad2c04"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40acf7ac" loc="99:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40acf7ac"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40acf96c"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40acfa48"/>
        <function-ref name="request" scoped="" ref="0x40acfb24"/>
        <function-ref name="granted" scoped="" ref="0x40acfc00"/>
        <function-ref name="isOwner" scoped="" ref="0x40acfcdc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40ad2010" loc="92:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40ad2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40ad21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ad9c2c" loc="91:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ad9c2c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ad9dec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40ae6b54" loc="98:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40ae6b54"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40ae6d14"/>
        <function-ref name="sleep" scoped="" ref="0x40acf1c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40ae6ecc"/>
        <function-ref name="dataReady" scoped="" ref="0x40acf2a4"/>
        <function-ref name="initMaster" scoped="" ref="0x40ad00ec"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40ad01c8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40ad02a4"/>
        <function-ref name="read" scoped="" ref="0x40ad0380"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40ad045c"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40ad0538"/>
        <function-ref name="setClock" scoped="" ref="0x40ad0614"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40ad06f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40ad07cc"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40ad0928"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40ad0a04"/>
        <function-ref name="write" scoped="" ref="0x40ad0ae0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40ad0bbc"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40ad0c98"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40ad0d74"/>
        <function-ref name="getClock" scoped="" ref="0x40ad0e50"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40acf010"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40ae6df0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40ad0010"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40acf0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40ad237c" loc="93:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40ad237c"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40ad253c"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40ad2618"/>
        <function-ref name="splitRead" scoped="" ref="0x40ad26f4"/>
        <function-ref name="write" scoped="" ref="0x40ad27d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ad10fc" loc="95:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ad10fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ad12bc"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ad1398"/>
        <function-ref name="request" scoped="" ref="0x40ad1474"/>
        <function-ref name="granted" scoped="" ref="0x40ad1550"/>
        <function-ref name="isOwner" scoped="" ref="0x40ad162c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40acfe88" loc="100:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40acfe88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ae506c"/>
        <function-ref name="userId" scoped="" ref="0x40ae5148"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40ae5308" loc="101:/opt/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40ae5308"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40ae54c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40b072e0" loc="76:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40b072e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40b074a0"/>
        <function-ref name="sleep" scoped="" ref="0x40b0684c"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40b07658"/>
        <function-ref name="dataReady" scoped="" ref="0x40b06928"/>
        <function-ref name="initMaster" scoped="" ref="0x40b07810"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40b078ec"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40b079c8"/>
        <function-ref name="read" scoped="" ref="0x40b07aa4"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40b07b80"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40b07c5c"/>
        <function-ref name="setClock" scoped="" ref="0x40b07d38"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40b07e14"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40b07ef0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40b06090"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40b0616c"/>
        <function-ref name="write" scoped="" ref="0x40b06248"/>
        <function-ref name="enableSpi" scoped="" ref="0x40b06324"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40b06400"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40b064dc"/>
        <function-ref name="getClock" scoped="" ref="0x40b065b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40b06694"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40b0757c"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40b07734"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40b06770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40b26f14" loc="81:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40b26f14"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b230f4"/>
        <function-ref name="isInput" scoped="" ref="0x40b231d0"/>
        <function-ref name="toggle" scoped="" ref="0x40b232ac"/>
        <function-ref name="isOutput" scoped="" ref="0x40b23388"/>
        <function-ref name="get" scoped="" ref="0x40b23464"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b23540"/>
        <function-ref name="set" scoped="" ref="0x40b2361c"/>
        <function-ref name="clr" scoped="" ref="0x40b236f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40b27bac" loc="79:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40b27bac"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b27d6c"/>
        <function-ref name="isInput" scoped="" ref="0x40b27e48"/>
        <function-ref name="toggle" scoped="" ref="0x40b27f24"/>
        <function-ref name="isOutput" scoped="" ref="0x40b26018"/>
        <function-ref name="get" scoped="" ref="0x40b260f4"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b261d0"/>
        <function-ref name="set" scoped="" ref="0x40b262ac"/>
        <function-ref name="clr" scoped="" ref="0x40b26388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40b27210" loc="78:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40b27210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b273d0"/>
        <function-ref name="isInput" scoped="" ref="0x40b274ac"/>
        <function-ref name="toggle" scoped="" ref="0x40b27588"/>
        <function-ref name="isOutput" scoped="" ref="0x40b27664"/>
        <function-ref name="get" scoped="" ref="0x40b27740"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b2781c"/>
        <function-ref name="set" scoped="" ref="0x40b278f8"/>
        <function-ref name="clr" scoped="" ref="0x40b279d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40b25d00" loc="75:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40b25d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b25ec0"/>
        <function-ref name="stop" scoped="" ref="0x40b27010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40b238f8" loc="82:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40b238f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40b23ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40b05560" loc="74:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40b05560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40b05720"/>
        <function-ref name="sleep" scoped="" ref="0x40b28ae0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40b058d8"/>
        <function-ref name="dataReady" scoped="" ref="0x40b28bbc"/>
        <function-ref name="initMaster" scoped="" ref="0x40b05a90"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40b05b6c"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40b05c48"/>
        <function-ref name="read" scoped="" ref="0x40b05d24"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40b05e00"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40b05edc"/>
        <function-ref name="setClock" scoped="" ref="0x40b28010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40b280ec"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40b281c8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40b28324"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40b28400"/>
        <function-ref name="write" scoped="" ref="0x40b284dc"/>
        <function-ref name="enableSpi" scoped="" ref="0x40b285b8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40b28694"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40b28770"/>
        <function-ref name="getClock" scoped="" ref="0x40b2884c"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40b28928"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40b057fc"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40b059b4"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40b28a04"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40b2656c" loc="80:/opt/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40b2656c"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b2672c"/>
        <function-ref name="isInput" scoped="" ref="0x40b26808"/>
        <function-ref name="toggle" scoped="" ref="0x40b268e4"/>
        <function-ref name="isOutput" scoped="" ref="0x40b269c0"/>
        <function-ref name="get" scoped="" ref="0x40b26a9c"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b26b78"/>
        <function-ref name="set" scoped="" ref="0x40b26c54"/>
        <function-ref name="clr" scoped="" ref="0x40b26d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40b4ac3c" loc="86:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40b4ac3c"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40b4ae0c"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40b4aee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40b494c8" loc="89:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40b494c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40b49698"/>
        <function-ref name="configure" scoped="" ref="0x40b49774"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b4a530" loc="85:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b4a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b4a700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b4a7dc"/>
        <function-ref name="request" scoped="" ref="0x40b4a8b8"/>
        <function-ref name="granted" scoped="" ref="0x40b4a994"/>
        <function-ref name="isOwner" scoped="" ref="0x40b4aa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40b49040" loc="87:/opt/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40b49040"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40b49200"/>
        <function-ref name="userId" scoped="" ref="0x40b492dc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x414e5010" loc="44:/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x414e5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x414e51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x414e532c" loc="45:/opt/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x414e532c"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x414e54ec"/>
        <function-ref name="isEmpty" scoped="" ref="0x414e55c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x414e56a4"/>
        <function-ref name="dequeue" scoped="" ref="0x414e5780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x414e4968" loc="52:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x414e4968"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x414e4b38"/>
        <function-ref name="immediateRequested" scoped="" ref="0x414e4c14"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x414e320c" loc="56:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x414e320c"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x414e33dc"/>
        <function-ref name="configure" scoped="" ref="0x414e34b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x414e3614" loc="57:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x414e3614"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x414e37d4"/>
        <function-ref name="isEmpty" scoped="" ref="0x414e38b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x414e398c"/>
        <function-ref name="dequeue" scoped="" ref="0x414e3a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x414e425c" loc="51:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x414e425c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x414e442c"/>
        <function-ref name="immediateRequest" scoped="" ref="0x414e4508"/>
        <function-ref name="request" scoped="" ref="0x414e45e4"/>
        <function-ref name="granted" scoped="" ref="0x414e46c0"/>
        <function-ref name="isOwner" scoped="" ref="0x414e479c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x414e4d50" loc="53:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x414e4d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x414e4f10"/>
        <function-ref name="userId" scoped="" ref="0x414e3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x414e3be4" loc="69:/opt/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x414e3be4"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414e3da4"/>
        <function-ref name="runTask" scoped="" ref="0x414e3e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40b61aec" loc="80:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40b61aec"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40b61cac"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b61d88"/>
        <function-ref name="getControlA" scoped="" ref="0x40b61e64"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b40010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b400ec"/>
        <function-ref name="setControlB" scoped="" ref="0x40b401c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b402a4"/>
        <function-ref name="getControlB" scoped="" ref="0x40b40380"/>
        <function-ref name="setControlC" scoped="" ref="0x40b4045c"/>
        <function-ref name="setControlA" scoped="" ref="0x40b40538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40b4085c" loc="81:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40b4085c"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40b6026c"/>
        <function-ref name="test" scoped="" ref="0x40b3fce4"/>
        <function-ref name="get" scoped="" ref="0x40b40e4c"/>
        <function-ref name="captured" scoped="" ref="0x40b3f34c"/>
        <function-ref name="reset" scoped="" ref="0x40b3f5d0"/>
        <function-ref name="isOn" scoped="" ref="0x40b60010"/>
        <function-ref name="set" scoped="" ref="0x40b3f0c8"/>
        <function-ref name="start" scoped="" ref="0x40b3f82c"/>
        <function-ref name="stop" scoped="" ref="0x40b3fa88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40b60940" loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40b60940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b5ee60"/>
        <function-ref name="fired" scoped="" ref="0x40b5e4f0"/>
        <function-ref name="get" scoped="" ref="0x40b5e010"/>
        <function-ref name="reset" scoped="" ref="0x40b5e74c"/>
        <function-ref name="isOn" scoped="" ref="0x40b5d0fc"/>
        <function-ref name="set" scoped="" ref="0x40b5e26c"/>
        <function-ref name="start" scoped="" ref="0x40b5e9a8"/>
        <function-ref name="stop" scoped="" ref="0x40b5ec04"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b464f8" loc="79:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b464f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b42e38"/>
        <function-ref name="test" scoped="" ref="0x40b42980"/>
        <function-ref name="get" scoped="" ref="0x40b46ae8"/>
        <function-ref name="setScale" scoped="" ref="0x40b410a8"/>
        <function-ref name="getScale" scoped="" ref="0x40b4132c"/>
        <function-ref name="reset" scoped="" ref="0x40b4226c"/>
        <function-ref name="overflow" scoped="" ref="0x40b42010"/>
        <function-ref name="isOn" scoped="" ref="0x40b42bdc"/>
        <function-ref name="set" scoped="" ref="0x40b46d44"/>
        <function-ref name="start" scoped="" ref="0x40b424c8"/>
        <function-ref name="stop" scoped="" ref="0x40b42724"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40b57010" loc="80:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40b57010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40b571d0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b572ac"/>
        <function-ref name="getControlA" scoped="" ref="0x40b57388"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b57464"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b57540"/>
        <function-ref name="setControlB" scoped="" ref="0x40b5761c"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b576f8"/>
        <function-ref name="getControlB" scoped="" ref="0x40b577d4"/>
        <function-ref name="setControlC" scoped="" ref="0x40b578b0"/>
        <function-ref name="setControlA" scoped="" ref="0x40b5798c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40b55a30" loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40b55a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b53e94"/>
        <function-ref name="fired" scoped="" ref="0x40b53524"/>
        <function-ref name="get" scoped="" ref="0x40b53044"/>
        <function-ref name="reset" scoped="" ref="0x40b53780"/>
        <function-ref name="isOn" scoped="" ref="0x40b52118"/>
        <function-ref name="set" scoped="" ref="0x40b532a0"/>
        <function-ref name="start" scoped="" ref="0x40b539dc"/>
        <function-ref name="stop" scoped="" ref="0x40b53c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40b57cb0" loc="81:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40b57cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40b55610"/>
        <function-ref name="test" scoped="" ref="0x40b55158"/>
        <function-ref name="get" scoped="" ref="0x40b562c8"/>
        <function-ref name="captured" scoped="" ref="0x40b567a8"/>
        <function-ref name="reset" scoped="" ref="0x40b56a2c"/>
        <function-ref name="isOn" scoped="" ref="0x40b553b4"/>
        <function-ref name="set" scoped="" ref="0x40b56524"/>
        <function-ref name="start" scoped="" ref="0x40b56c88"/>
        <function-ref name="stop" scoped="" ref="0x40b56ee4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40b52510" loc="83:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40b52510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b51980"/>
        <function-ref name="fired" scoped="" ref="0x40b51010"/>
        <function-ref name="get" scoped="" ref="0x40b52b00"/>
        <function-ref name="reset" scoped="" ref="0x40b5126c"/>
        <function-ref name="isOn" scoped="" ref="0x40b51bdc"/>
        <function-ref name="set" scoped="" ref="0x40b52d5c"/>
        <function-ref name="start" scoped="" ref="0x40b514c8"/>
        <function-ref name="stop" scoped="" ref="0x40b51724"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40b76010" loc="84:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40b76010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b754c8"/>
        <function-ref name="fired" scoped="" ref="0x40b76ae0"/>
        <function-ref name="get" scoped="" ref="0x40b76600"/>
        <function-ref name="reset" scoped="" ref="0x40b76d3c"/>
        <function-ref name="isOn" scoped="" ref="0x40b75724"/>
        <function-ref name="set" scoped="" ref="0x40b7685c"/>
        <function-ref name="start" scoped="" ref="0x40b75010"/>
        <function-ref name="stop" scoped="" ref="0x40b7526c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b5dd18" loc="79:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b5dd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b58724"/>
        <function-ref name="test" scoped="" ref="0x40b5826c"/>
        <function-ref name="get" scoped="" ref="0x40b5a344"/>
        <function-ref name="setScale" scoped="" ref="0x40b58980"/>
        <function-ref name="getScale" scoped="" ref="0x40b58c04"/>
        <function-ref name="reset" scoped="" ref="0x40b5aa80"/>
        <function-ref name="overflow" scoped="" ref="0x40b5a824"/>
        <function-ref name="isOn" scoped="" ref="0x40b584c8"/>
        <function-ref name="set" scoped="" ref="0x40b5a5a0"/>
        <function-ref name="start" scoped="" ref="0x40b5acdc"/>
        <function-ref name="stop" scoped="" ref="0x40b58010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40bafc98" loc="30:/opt/tinyos/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40bafc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TOne" ref="0x4038ad38"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bd1098"/>
        <function-ref name="fired" scoped="" ref="0x40bae8a8"/>
        <function-ref name="startAt" scoped="" ref="0x40baed60"/>
        <function-ref name="isRunning" scoped="" ref="0x40baeb04"/>
        <function-ref name="getAlarm" scoped="" ref="0x40bd12f4"/>
        <function-ref name="start" scoped="" ref="0x40bae3c8"/>
        <function-ref name="stop" scoped="" ref="0x40bae64c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ba7ba0" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ba7ba0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4030ef18"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4030ef18"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ba7d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40ba6010" loc="47:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ba6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40bc7980"/>
        <function-ref name="test" scoped="" ref="0x40bc74c8"/>
        <function-ref name="get" scoped="" ref="0x40ba6600"/>
        <function-ref name="setScale" scoped="" ref="0x40bc7bdc"/>
        <function-ref name="getScale" scoped="" ref="0x40bc7e60"/>
        <function-ref name="reset" scoped="" ref="0x40ba6d3c"/>
        <function-ref name="overflow" scoped="" ref="0x40ba6ae0"/>
        <function-ref name="isOn" scoped="" ref="0x40bc7724"/>
        <function-ref name="set" scoped="" ref="0x40ba685c"/>
        <function-ref name="start" scoped="" ref="0x40bc7010"/>
        <function-ref name="stop" scoped="" ref="0x40bc726c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4151e7bc" loc="55:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4151e7bc"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x4030ed24"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x4030ed24"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TOne" ref="0x4038ad38"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4151db88"/>
        <function-ref name="fired" scoped="" ref="0x4151d3b4"/>
        <function-ref name="startAt" scoped="" ref="0x4151d86c"/>
        <function-ref name="isRunning" scoped="" ref="0x4151d610"/>
        <function-ref name="getAlarm" scoped="" ref="0x4151dde4"/>
        <function-ref name="start" scoped="" ref="0x4151eeac"/>
        <function-ref name="stop" scoped="" ref="0x4151d158"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x41519188" loc="58:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x41519188"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x415185f0"/>
        <function-ref name="fired" scoped="" ref="0x41519c58"/>
        <function-ref name="get" scoped="" ref="0x41519778"/>
        <function-ref name="reset" scoped="" ref="0x41519eb4"/>
        <function-ref name="isOn" scoped="" ref="0x4151884c"/>
        <function-ref name="set" scoped="" ref="0x415199d4"/>
        <function-ref name="start" scoped="" ref="0x41518138"/>
        <function-ref name="stop" scoped="" ref="0x41518394"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x4151c0b8" loc="57:/opt/tinyos/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x4151c0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4151a9d0"/>
        <function-ref name="test" scoped="" ref="0x4151a518"/>
        <function-ref name="get" scoped="" ref="0x4151c6a8"/>
        <function-ref name="setScale" scoped="" ref="0x4151ac2c"/>
        <function-ref name="getScale" scoped="" ref="0x4151aeb0"/>
        <function-ref name="reset" scoped="" ref="0x4151cde4"/>
        <function-ref name="overflow" scoped="" ref="0x4151cb88"/>
        <function-ref name="isOn" scoped="" ref="0x4151a774"/>
        <function-ref name="set" scoped="" ref="0x4151c904"/>
        <function-ref name="start" scoped="" ref="0x4151a060"/>
        <function-ref name="stop" scoped="" ref="0x4151a2bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40bd03dc" loc="39:/opt/tinyos/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40bd03dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bd09cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40bcb46c" loc="24:/opt/tinyos/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bcb46c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TOne" ref="0x4038ad38"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bcbb5c"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bca044"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bcbdb8"/>
        <function-ref name="overflow" scoped="" ref="0x40bca2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40bc94f0" loc="45:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bc94f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TOne" ref="0x4038ad38"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bc9be0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40be70c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bc9e3c"/>
        <function-ref name="overflow" scoped="" ref="0x40be7324"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40be75f0" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40be75f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40be6f10"/>
        <function-ref name="test" scoped="" ref="0x40be6a58"/>
        <function-ref name="get" scoped="" ref="0x40be7be0"/>
        <function-ref name="setScale" scoped="" ref="0x40be5188"/>
        <function-ref name="getScale" scoped="" ref="0x40be540c"/>
        <function-ref name="reset" scoped="" ref="0x40be6344"/>
        <function-ref name="overflow" scoped="" ref="0x40be60e8"/>
        <function-ref name="isOn" scoped="" ref="0x40be6cb4"/>
        <function-ref name="set" scoped="" ref="0x40be7e3c"/>
        <function-ref name="start" scoped="" ref="0x40be65a0"/>
        <function-ref name="stop" scoped="" ref="0x40be67fc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40bfec78" loc="63:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40bfec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bfd37c"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bfd834"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bfd5d8"/>
        <function-ref name="overflow" scoped="" ref="0x40bfda90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40be3b00" loc="62:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40be3b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bfe210"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bfe6c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bfe46c"/>
        <function-ref name="overflow" scoped="" ref="0x40bfe924"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40bfc8d8" loc="48:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40bfc8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bfcec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40bfa210" loc="49:/opt/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40bfa210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bfa900"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bfadb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40bfab5c"/>
        <function-ref name="overflow" scoped="" ref="0x40bf9044"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40bf6188" loc="36:/opt/tinyos/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40bf6188"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40bf6878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40cf3010" loc="142:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40cf3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cf31d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x40cf2228" loc="145:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40cf2228"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40cf23e8"/>
        <function-ref name="setRoot" scoped="" ref="0x40cf24c4"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40cf25a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40cd3b1c" loc="126:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40cd3b1c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cd3cdc"/>
        <function-ref name="getPayload" scoped="" ref="0x40cd3db8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cd3e94"/>
        <function-ref name="cancel" scoped="" ref="0x40cd2010"/>
        <function-ref name="sendDone" scoped="" ref="0x40cd20ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40cf06dc" loc="156:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40cf06dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40cf089c"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40cf0978"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40cf0a54"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40cf0b30"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40cf0c0c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40cd4010" loc="116:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40cd4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40cd41d0"/>
        <function-ref name="setOrigin" scoped="" ref="0x40cd42ac"/>
        <function-ref name="setType" scoped="" ref="0x40cd4388"/>
        <function-ref name="getOrigin" scoped="" ref="0x40cd4464"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40cd4540"/>
        <function-ref name="getType" scoped="" ref="0x40cd461c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x40cd0870" loc="129:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40cd0870"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x40cd0a30"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40cd0b0c"/>
        <function-ref name="txNoAck" scoped="" ref="0x40cd0be8"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40cd0cc4"/>
        <function-ref name="evicted" scoped="" ref="0x40cd0da0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40cd0e7c"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40cce010"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40cce0ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0x40cf42ec" loc="140:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SentCache" scoped="" ref="0x40cf42ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
              <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x40cf48c0"/>
        <function-ref name="flush" scoped="" ref="0x40cf4d90"/>
        <function-ref name="lookup" scoped="" ref="0x40cf4b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40cd565c" loc="114:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40cd565c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x403ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40cd582c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40cd5968" loc="115:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40cd5968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cd5b28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cd5c04"/>
        <function-ref name="getPayload" scoped="" ref="0x40cd5ce0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cd5dbc"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cd5e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40cd52c0" loc="113:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40cd52c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x403ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cd5490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40cf0304" loc="149:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40cf0304"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40cf04c4"/>
        <function-ref name="rand32" scoped="" ref="0x40cf05a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40cd77d4" loc="111:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40cd77d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cd79a4"/>
        <function-ref name="getPayload" scoped="" ref="0x40cd7a80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cd7b5c"/>
        <function-ref name="cancel" scoped="" ref="0x40cd7c38"/>
        <function-ref name="sendDone" scoped="" ref="0x40cd7d14"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0x40cd2784" loc="128:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxmitTimer" scoped="" ref="0x40cd2784"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40cd01ec"/>
        <function-ref name="fired" scoped="" ref="0x40cd1508"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40cd1bc8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40cd1988"/>
        <function-ref name="getdt" scoped="" ref="0x40cd066c"/>
        <function-ref name="gett0" scoped="" ref="0x40cd042c"/>
        <function-ref name="isRunning" scoped="" ref="0x40cd1748"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40cd2dd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40cd1ec8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40cd1060"/>
        <function-ref name="stop" scoped="" ref="0x40cd12c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40cf0d68" loc="162:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40cf0d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40cf0f28"/>
        <function-ref name="stopDone" scoped="" ref="0x40cee018"/>
        <function-ref name="start" scoped="" ref="0x40cee0f4"/>
        <function-ref name="stop" scoped="" ref="0x40cee1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x40cee34c" loc="234:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x40cee34c"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40cee50c"/>
        <function-ref name="runTask" scoped="" ref="0x40cee5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x40ccef08" loc="137:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x40ccef08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40c21d84"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40c20044"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40ccdbc8"/>
        <function-ref name="enqueue" scoped="" ref="0x40cf9278"/>
        <function-ref name="element" scoped="" ref="0x40cf95ac"/>
        <function-ref name="maxSize" scoped="" ref="0x40ccd988"/>
        <function-ref name="dequeue" scoped="" ref="0x40ccdf14"/>
        <function-ref name="empty" scoped="" ref="0x40ccd508"/>
        <function-ref name="size" scoped="" ref="0x40ccd748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x40cf3628" loc="144:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40cf3628"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40cf37e8"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40cf38c4"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40cf39a0"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40cf3a7c"/>
        <function-ref name="getEtx" scoped="" ref="0x40cf3b58"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40cf3c34"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40cf3d10"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40cf3dec"/>
        <function-ref name="getParent" scoped="" ref="0x40cf3ec8"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40cf2010"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40cf20ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40cce7d8" loc="131:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40cce7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cce998"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ccea74"/>
        <function-ref name="getPayload" scoped="" ref="0x40cceb50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ccec2c"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cced08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cd7070" loc="109:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cd7070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cd7230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40cd7ee0" loc="112:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40cd7ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x403ff160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cd50d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40cd36f4" loc="118:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40cd36f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40cd38b4"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40cd3990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0x40cce228" loc="130:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x40cce228"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x40cce3e8"/>
        <function-ref name="routeFound" scoped="" ref="0x40cce4c4"/>
        <function-ref name="nextHop" scoped="" ref="0x40cce5a0"/>
        <function-ref name="noRoute" scoped="" ref="0x40cce67c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40cf1750" loc="148:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40cf1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40cf1910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40cf19ec"/>
        <function-ref name="led1On" scoped="" ref="0x40cf1ac8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40cf1ba4"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40cf1c80"/>
        <function-ref name="get" scoped="" ref="0x40cf1d5c"/>
        <function-ref name="led1Off" scoped="" ref="0x40cf1e38"/>
        <function-ref name="led2On" scoped="" ref="0x40cf01c8"/>
        <function-ref name="set" scoped="" ref="0x40cf0010"/>
        <function-ref name="led2Off" scoped="" ref="0x40cf1f14"/>
        <function-ref name="led0On" scoped="" ref="0x40cf00ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40cd2228" loc="127:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cd2228"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40cd23e8"/>
        <function-ref name="noAck" scoped="" ref="0x40cd24c4"/>
        <function-ref name="wasAcked" scoped="" ref="0x40cd25a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x40cd4758" loc="117:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x40cd4758"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40cd4918"/>
        <function-ref name="option" scoped="" ref="0x40cd49f4"/>
        <function-ref name="setEtx" scoped="" ref="0x40cd4ad0"/>
        <function-ref name="setOrigin" scoped="" ref="0x40cd4bac"/>
        <function-ref name="clearOption" scoped="" ref="0x40cd4c88"/>
        <function-ref name="getEtx" scoped="" ref="0x40cd4d64"/>
        <function-ref name="getOrigin" scoped="" ref="0x40cd4e40"/>
        <function-ref name="setType" scoped="" ref="0x40cd4f1c"/>
        <function-ref name="setOption" scoped="" ref="0x40cd3010"/>
        <function-ref name="matchPacket" scoped="" ref="0x40cd30ec"/>
        <function-ref name="getThl" scoped="" ref="0x40cd31c8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40cd32a4"/>
        <function-ref name="matchInstance" scoped="" ref="0x40cd3380"/>
        <function-ref name="getType" scoped="" ref="0x40cd34dc"/>
        <function-ref name="setThl" scoped="" ref="0x40cd35b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0x40cf998c" loc="138:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QEntryPool" scoped="" ref="0x40cf998c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40c21d84"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40c20044"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cf7a40"/>
        <function-ref name="maxSize" scoped="" ref="0x40cf7490"/>
        <function-ref name="empty" scoped="" ref="0x40cf7010"/>
        <function-ref name="put" scoped="" ref="0x40cf76d0"/>
        <function-ref name="size" scoped="" ref="0x40cf7250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40cf2b78" loc="147:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40cf2b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40cf2d38"/>
        <function-ref name="source" scoped="" ref="0x40cf2e14"/>
        <function-ref name="address" scoped="" ref="0x40cf2ef0"/>
        <function-ref name="destination" scoped="" ref="0x40cf1010"/>
        <function-ref name="setSource" scoped="" ref="0x40cf10ec"/>
        <function-ref name="setDestination" scoped="" ref="0x40cf11c8"/>
        <function-ref name="type" scoped="" ref="0x40cf12a4"/>
        <function-ref name="setType" scoped="" ref="0x40cf1380"/>
        <function-ref name="isForMe" scoped="" ref="0x40cf145c"/>
        <function-ref name="setGroup" scoped="" ref="0x40cf1538"/>
        <function-ref name="localGroup" scoped="" ref="0x40cf1614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40cd736c" loc="110:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40cd736c"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40cd752c"/>
        <function-ref name="stop" scoped="" ref="0x40cd7608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x40cf332c" loc="143:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x40cf332c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cf34ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x40cf7e50" loc="139:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x40cf7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
            <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cf6ea4"/>
        <function-ref name="maxSize" scoped="" ref="0x40cf68f4"/>
        <function-ref name="empty" scoped="" ref="0x40cf6474"/>
        <function-ref name="put" scoped="" ref="0x40cf6b34"/>
        <function-ref name="size" scoped="" ref="0x40cf66b4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x40cf276c" loc="146:/opt/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x40cf276c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x40cf2a3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40ce97c4" loc="42:/opt/tinyos/tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40ce97c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
            <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ce8800"/>
        <function-ref name="maxSize" scoped="" ref="0x40ce8250"/>
        <function-ref name="empty" scoped="" ref="0x40ce9d98"/>
        <function-ref name="put" scoped="" ref="0x40ce8490"/>
        <function-ref name="size" scoped="" ref="0x40ce8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x4158a898" loc="56:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x4158a898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
            <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x415898d0"/>
        <function-ref name="maxSize" scoped="" ref="0x41589320"/>
        <function-ref name="empty" scoped="" ref="0x4158ae6c"/>
        <function-ref name="put" scoped="" ref="0x41589560"/>
        <function-ref name="size" scoped="" ref="0x415890e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4158a514" loc="55:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4158a514"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4158a6d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40d02a1c" loc="42:/opt/tinyos/tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40d02a1c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40c21d84"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40c20044"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d01a40"/>
        <function-ref name="maxSize" scoped="" ref="0x40d01490"/>
        <function-ref name="empty" scoped="" ref="0x40d01010"/>
        <function-ref name="put" scoped="" ref="0x40d016d0"/>
        <function-ref name="size" scoped="" ref="0x40d01250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41581c40" loc="56:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41581c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40c21d84"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40c20044"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4157fc74"/>
        <function-ref name="maxSize" scoped="" ref="0x4157f6c4"/>
        <function-ref name="empty" scoped="" ref="0x4157f244"/>
        <function-ref name="put" scoped="" ref="0x4157f904"/>
        <function-ref name="size" scoped="" ref="0x4157f484"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x415818bc" loc="55:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x415818bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41581a7c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x40cfe508" loc="43:/opt/tinyos/tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40cfe508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40c21d84"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40c20044"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40cfd250"/>
        <function-ref name="enqueue" scoped="" ref="0x40cfd8e8"/>
        <function-ref name="element" scoped="" ref="0x40cfdc1c"/>
        <function-ref name="maxSize" scoped="" ref="0x40cfd010"/>
        <function-ref name="dequeue" scoped="" ref="0x40cfd59c"/>
        <function-ref name="empty" scoped="" ref="0x40cfeadc"/>
        <function-ref name="size" scoped="" ref="0x40cfed1c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x40d1a288" loc="39:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x40d1a288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
              <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x40d1a85c"/>
        <function-ref name="flush" scoped="" ref="0x40d1ad2c"/>
        <function-ref name="lookup" scoped="" ref="0x40d1aac4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x415c16bc" loc="46:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x415c16bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
              <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x415c1c90"/>
        <function-ref name="flush" scoped="" ref="0x415c018c"/>
        <function-ref name="lookup" scoped="" ref="0x415c1ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x415c131c" loc="45:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x415c131c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x415c14dc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0x415c03c0" loc="49:/opt/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x415c03c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x415c0580"/>
        <function-ref name="option" scoped="" ref="0x415c065c"/>
        <function-ref name="setEtx" scoped="" ref="0x415c0738"/>
        <function-ref name="setOrigin" scoped="" ref="0x415c0814"/>
        <function-ref name="clearOption" scoped="" ref="0x415c08f0"/>
        <function-ref name="getEtx" scoped="" ref="0x415c09cc"/>
        <function-ref name="getOrigin" scoped="" ref="0x415c0aa8"/>
        <function-ref name="setType" scoped="" ref="0x415c0b84"/>
        <function-ref name="setOption" scoped="" ref="0x415c0c60"/>
        <function-ref name="matchPacket" scoped="" ref="0x415c0d3c"/>
        <function-ref name="getThl" scoped="" ref="0x415c0e18"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x415c0ef4"/>
        <function-ref name="matchInstance" scoped="" ref="0x415bf010"/>
        <function-ref name="getType" scoped="" ref="0x415bf16c"/>
        <function-ref name="setThl" scoped="" ref="0x415bf248"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d2ec54" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d2ec54"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d2c644"/>
        <function-ref name="fired" scoped="" ref="0x40d2d954"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d2c044"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d2ddd4"/>
        <function-ref name="getdt" scoped="" ref="0x40d2cac4"/>
        <function-ref name="gett0" scoped="" ref="0x40d2c884"/>
        <function-ref name="isRunning" scoped="" ref="0x40d2db94"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d2d244"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d2c344"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d2d4ac"/>
        <function-ref name="stop" scoped="" ref="0x40d2d714"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d2b838" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d2b838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d2821c"/>
        <function-ref name="fired" scoped="" ref="0x40d29534"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d29bf4"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d299b4"/>
        <function-ref name="getdt" scoped="" ref="0x40d2869c"/>
        <function-ref name="gett0" scoped="" ref="0x40d2845c"/>
        <function-ref name="isRunning" scoped="" ref="0x40d29774"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d2be0c"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d29ef4"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d2908c"/>
        <function-ref name="stop" scoped="" ref="0x40d292f4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d49010" loc="57:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d49010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d491d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x40d4e8e0" loc="47:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40d4e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x40d4eaa0"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40d4eb7c"/>
        <function-ref name="txNoAck" scoped="" ref="0x40d4ec58"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40d4ed34"/>
        <function-ref name="evicted" scoped="" ref="0x40d4ee10"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40d4eeec"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40d4d010"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40d4d0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d4d590" loc="49:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d4d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d4d750"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d4d82c"/>
        <function-ref name="getPayload" scoped="" ref="0x40d4d908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d4d9e4"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d4dac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40d4c38c" loc="54:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d4c38c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d4c54c"/>
        <function-ref name="getPayload" scoped="" ref="0x40d4c628"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d4c704"/>
        <function-ref name="cancel" scoped="" ref="0x40d4c7e0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d4c8bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d50e80" loc="45:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d50e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d4e06c"/>
        <function-ref name="getPayload" scoped="" ref="0x40d4e148"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d4e224"/>
        <function-ref name="cancel" scoped="" ref="0x40d4e300"/>
        <function-ref name="sendDone" scoped="" ref="0x40d4e3dc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40d49700" loc="59:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40d49700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40d49940"/>
        <function-ref name="rand32" scoped="" ref="0x40d49a1c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40d4b80c" loc="56:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40d4b80c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d4b9cc"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d4baa8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d4bb84"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d4bc60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d4bd3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d4d254" loc="48:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d4d254"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d4d414"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x40d4cadc" loc="55:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x40d4cadc"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d4cc9c"/>
        <function-ref name="source" scoped="" ref="0x40d4cd78"/>
        <function-ref name="address" scoped="" ref="0x40d4ce54"/>
        <function-ref name="destination" scoped="" ref="0x40d4b010"/>
        <function-ref name="setSource" scoped="" ref="0x40d4b0ec"/>
        <function-ref name="setDestination" scoped="" ref="0x40d4b1c8"/>
        <function-ref name="type" scoped="" ref="0x40d4b2a4"/>
        <function-ref name="setType" scoped="" ref="0x40d4b380"/>
        <function-ref name="isForMe" scoped="" ref="0x40d4b45c"/>
        <function-ref name="setGroup" scoped="" ref="0x40d4b538"/>
        <function-ref name="localGroup" scoped="" ref="0x40d4b614"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d4e560" loc="46:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d4e560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d4e720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0x40d4c010" loc="50:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x40d4c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x40d4c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d50a1c" loc="44:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d50a1c"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d50bdc"/>
        <function-ref name="stop" scoped="" ref="0x40d50cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x40d493c4" loc="58:/opt/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40d493c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40d49584"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40d5490c" loc="49:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d5490c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d54acc"/>
        <function-ref name="getPayload" scoped="" ref="0x40d54ba8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d54c84"/>
        <function-ref name="cancel" scoped="" ref="0x40d54d60"/>
        <function-ref name="sendDone" scoped="" ref="0x40d54e3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40da0010" loc="50:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40da0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40da01d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40da02ac"/>
        <function-ref name="getPayload" scoped="" ref="0x40da0388"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40da0464"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40da0540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40da067c" loc="51:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40da067c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40da083c"/>
        <function-ref name="source" scoped="" ref="0x40da0918"/>
        <function-ref name="address" scoped="" ref="0x40da09f4"/>
        <function-ref name="destination" scoped="" ref="0x40da0ad0"/>
        <function-ref name="setSource" scoped="" ref="0x40da0bac"/>
        <function-ref name="setDestination" scoped="" ref="0x40da0c88"/>
        <function-ref name="type" scoped="" ref="0x40da0d64"/>
        <function-ref name="setType" scoped="" ref="0x40da0e40"/>
        <function-ref name="isForMe" scoped="" ref="0x40da0f1c"/>
        <function-ref name="setGroup" scoped="" ref="0x40de9010"/>
        <function-ref name="localGroup" scoped="" ref="0x40de90ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40de9248" loc="52:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40de9248"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40de9408"/>
        <function-ref name="noAck" scoped="" ref="0x40de94e4"/>
        <function-ref name="wasAcked" scoped="" ref="0x40de95c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x415adc04" loc="49:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x415adc04"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415addc4"/>
        <function-ref name="getPayload" scoped="" ref="0x415adea0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415a9010"/>
        <function-ref name="cancel" scoped="" ref="0x415a90ec"/>
        <function-ref name="sendDone" scoped="" ref="0x415a91c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x415a9304" loc="50:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x415a9304"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x415a94c4"/>
        <function-ref name="payloadLength" scoped="" ref="0x415a95a0"/>
        <function-ref name="getPayload" scoped="" ref="0x415a967c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415a9758"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x415a9834"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x415a9970" loc="51:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x415a9970"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x415a9b30"/>
        <function-ref name="source" scoped="" ref="0x415a9c0c"/>
        <function-ref name="address" scoped="" ref="0x415a9ce8"/>
        <function-ref name="destination" scoped="" ref="0x415a9dc4"/>
        <function-ref name="setSource" scoped="" ref="0x415a9ea0"/>
        <function-ref name="setDestination" scoped="" ref="0x415a8010"/>
        <function-ref name="type" scoped="" ref="0x415a80ec"/>
        <function-ref name="setType" scoped="" ref="0x415a81c8"/>
        <function-ref name="isForMe" scoped="" ref="0x415a82a4"/>
        <function-ref name="setGroup" scoped="" ref="0x415a8380"/>
        <function-ref name="localGroup" scoped="" ref="0x415a845c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x415a85b8" loc="52:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x415a85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x415a8778"/>
        <function-ref name="noAck" scoped="" ref="0x415a8854"/>
        <function-ref name="wasAcked" scoped="" ref="0x415a8930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x415f6e84" loc="44:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x415f6e84"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415f306c"/>
        <function-ref name="getPayload" scoped="" ref="0x415f3148"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415f3224"/>
        <function-ref name="cancel" scoped="" ref="0x415f3300"/>
        <function-ref name="sendDone" scoped="" ref="0x415f33dc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x415f3548" loc="46:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x415f3548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415f3708"/>
        <function-ref name="getPayload" scoped="" ref="0x415f37e4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415f38c0"/>
        <function-ref name="cancel" scoped="" ref="0x415f399c"/>
        <function-ref name="sendDone" scoped="" ref="0x415f3a78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x415f3bb4" loc="47:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x415f3bb4"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x415f3d74"/>
        <function-ref name="source" scoped="" ref="0x415f3e50"/>
        <function-ref name="address" scoped="" ref="0x415f2010"/>
        <function-ref name="destination" scoped="" ref="0x415f20ec"/>
        <function-ref name="setSource" scoped="" ref="0x415f21c8"/>
        <function-ref name="setDestination" scoped="" ref="0x415f22a4"/>
        <function-ref name="type" scoped="" ref="0x415f2380"/>
        <function-ref name="setType" scoped="" ref="0x415f245c"/>
        <function-ref name="isForMe" scoped="" ref="0x415f2538"/>
        <function-ref name="setGroup" scoped="" ref="0x415f2614"/>
        <function-ref name="localGroup" scoped="" ref="0x415f26f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40dbc7b0" loc="43:/opt/tinyos/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40dbc7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dbc970"/>
        <function-ref name="getPayload" scoped="" ref="0x40dbca4c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dbcb28"/>
        <function-ref name="cancel" scoped="" ref="0x40dbcc04"/>
        <function-ref name="sendDone" scoped="" ref="0x40dbcce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40db7d30" loc="48:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40db7d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40db7f00"/>
        <function-ref name="getPayload" scoped="" ref="0x40df1010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40df10ec"/>
        <function-ref name="cancel" scoped="" ref="0x40df11c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40df12a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40db75f4" loc="46:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40db75f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40db77c4"/>
        <function-ref name="getPayload" scoped="" ref="0x40db78a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40db797c"/>
        <function-ref name="cancel" scoped="" ref="0x40db7a58"/>
        <function-ref name="sendDone" scoped="" ref="0x40db7b34"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40df0010" loc="50:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40df0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40df01d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40df02ac"/>
        <function-ref name="getPayload" scoped="" ref="0x40df0388"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40df0464"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40df0540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40df06bc" loc="169:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40df06bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40df087c"/>
        <function-ref name="runTask" scoped="" ref="0x40df0958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40df0ad4" loc="126:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40df0ad4"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40df0c94"/>
        <function-ref name="runTask" scoped="" ref="0x40df0d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40df13e0" loc="49:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40df13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40df15a0"/>
        <function-ref name="source" scoped="" ref="0x40df167c"/>
        <function-ref name="address" scoped="" ref="0x40df1758"/>
        <function-ref name="destination" scoped="" ref="0x40df1834"/>
        <function-ref name="setSource" scoped="" ref="0x40df1910"/>
        <function-ref name="setDestination" scoped="" ref="0x40df19ec"/>
        <function-ref name="type" scoped="" ref="0x40df1ac8"/>
        <function-ref name="setType" scoped="" ref="0x40df1ba4"/>
        <function-ref name="isForMe" scoped="" ref="0x40df1c80"/>
        <function-ref name="setGroup" scoped="" ref="0x40df1d5c"/>
        <function-ref name="localGroup" scoped="" ref="0x40df1e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40de7b78" loc="46:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40de7b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40de7d38"/>
        <function-ref name="payloadLength" scoped="" ref="0x40de7e14"/>
        <function-ref name="getPayload" scoped="" ref="0x40de7ef0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40de6010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40de60ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40de787c" loc="45:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40de787c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40de7a3c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40de6228" loc="47:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40de6228"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40de63e8"/>
        <function-ref name="source" scoped="" ref="0x40de64c4"/>
        <function-ref name="address" scoped="" ref="0x40de65a0"/>
        <function-ref name="destination" scoped="" ref="0x40de667c"/>
        <function-ref name="setSource" scoped="" ref="0x40de6758"/>
        <function-ref name="setDestination" scoped="" ref="0x40de6834"/>
        <function-ref name="type" scoped="" ref="0x40de6910"/>
        <function-ref name="setType" scoped="" ref="0x40de69ec"/>
        <function-ref name="isForMe" scoped="" ref="0x40de6ac8"/>
        <function-ref name="setGroup" scoped="" ref="0x40de6ba4"/>
        <function-ref name="localGroup" scoped="" ref="0x40de6c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e121f4" loc="47:/opt/tinyos/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e121f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e123b4"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e12490"/>
        <function-ref name="getPayload" scoped="" ref="0x40e1256c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e12648"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e12724"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e13ed8" loc="46:/opt/tinyos/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e13ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e120b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e12860" loc="48:/opt/tinyos/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e12860"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e12a20"/>
        <function-ref name="source" scoped="" ref="0x40e12afc"/>
        <function-ref name="address" scoped="" ref="0x40e12bd8"/>
        <function-ref name="destination" scoped="" ref="0x40e12cb4"/>
        <function-ref name="setSource" scoped="" ref="0x40e12d90"/>
        <function-ref name="setDestination" scoped="" ref="0x40e12e6c"/>
        <function-ref name="type" scoped="" ref="0x40e0f010"/>
        <function-ref name="setType" scoped="" ref="0x40e0f0ec"/>
        <function-ref name="isForMe" scoped="" ref="0x40e0f1c8"/>
        <function-ref name="setGroup" scoped="" ref="0x40e0f2a4"/>
        <function-ref name="localGroup" scoped="" ref="0x40e0f380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x40e7f420" loc="110:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40e7f420"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40e7f5e0"/>
        <function-ref name="setRoot" scoped="" ref="0x40e7f6bc"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40e7f798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0x40ea7310" loc="271:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateRouteTask" scoped="" ref="0x40ea7310"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ea74d0"/>
        <function-ref name="runTask" scoped="" ref="0x40ea75ac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40ea814c" loc="125:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40ea814c"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40ea830c"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40ea83e8"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40ea84c4"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40ea85a0"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40ea867c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x40e7defc" loc="119:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40e7defc"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x40eb00d4"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40eb01b0"/>
        <function-ref name="txNoAck" scoped="" ref="0x40eb028c"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40eb0368"/>
        <function-ref name="evicted" scoped="" ref="0x40eb0444"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40eb0520"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40eb05fc"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40eb06d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0x40e7e894" loc="113:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpRoutingPacket" scoped="" ref="0x40e7e894"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0x40e7ea54"/>
        <function-ref name="setEtx" scoped="" ref="0x40e7eb30"/>
        <function-ref name="clearOption" scoped="" ref="0x40e7ec0c"/>
        <function-ref name="getEtx" scoped="" ref="0x40e7ece8"/>
        <function-ref name="setOption" scoped="" ref="0x40e7edc4"/>
        <function-ref name="setParent" scoped="" ref="0x40e7eea0"/>
        <function-ref name="getParent" scoped="" ref="0x40e7d010"/>
        <function-ref name="getOption" scoped="" ref="0x40e7d0ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40eaf400" loc="121:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40eaf400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40eaf5c0"/>
        <function-ref name="stopDone" scoped="" ref="0x40eaf69c"/>
        <function-ref name="start" scoped="" ref="0x40eaf778"/>
        <function-ref name="stop" scoped="" ref="0x40eaf854"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40eaac94" loc="124:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40eaac94"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40eaae54"/>
        <function-ref name="rand32" scoped="" ref="0x40ea8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x40e7f8d4" loc="111:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40e7f8d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40e7fa94"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40e7fb70"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40e7fc4c"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40e7fd28"/>
        <function-ref name="getEtx" scoped="" ref="0x40e7fe04"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40e7fee0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40e7e010"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40e7e0ec"/>
        <function-ref name="getParent" scoped="" ref="0x40e7e1c8"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40e7e2a4"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40e7e380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x40ea8ecc" loc="390:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBeaconTask" scoped="" ref="0x40ea8ecc"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ea70b8"/>
        <function-ref name="runTask" scoped="" ref="0x40ea7194"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e7d228" loc="114:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e7d228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e7d3e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x40e7d574" loc="117:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x40e7d574"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e7d734"/>
        <function-ref name="getPayload" scoped="" ref="0x40e7d810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e7d8ec"/>
        <function-ref name="cancel" scoped="" ref="0x40e7d9c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40e7daa4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x40eafa38" loc="122:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x40eafa38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40eac43c"/>
        <function-ref name="fired" scoped="" ref="0x40eae754"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40eaee14"/>
        <function-ref name="isOneShot" scoped="" ref="0x40eaebd4"/>
        <function-ref name="getdt" scoped="" ref="0x40eac8bc"/>
        <function-ref name="gett0" scoped="" ref="0x40eac67c"/>
        <function-ref name="isRunning" scoped="" ref="0x40eae994"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40eae044"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40eac13c"/>
        <function-ref name="startOneShot" scoped="" ref="0x40eae2ac"/>
        <function-ref name="stop" scoped="" ref="0x40eae514"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0x40eacb68" loc="123:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteTimer" scoped="" ref="0x40eacb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40eaa610"/>
        <function-ref name="fired" scoped="" ref="0x40eab8e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40eaa010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40eabd60"/>
        <function-ref name="getdt" scoped="" ref="0x40eaaa90"/>
        <function-ref name="gett0" scoped="" ref="0x40eaa850"/>
        <function-ref name="isRunning" scoped="" ref="0x40eabb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40eab1d0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40eaa310"/>
        <function-ref name="startOneShot" scoped="" ref="0x40eab438"/>
        <function-ref name="stop" scoped="" ref="0x40eab6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x40ea87b8" loc="126:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40ea87b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40ea8978"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40ea8a54"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0x40ea8b90" loc="128:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x40ea8b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x40ea8d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x40e7dc00" loc="118:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x40e7dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e7ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40eb0814" loc="120:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40eb0814"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40eb09d4"/>
        <function-ref name="source" scoped="" ref="0x40eb0ab0"/>
        <function-ref name="address" scoped="" ref="0x40eb0b8c"/>
        <function-ref name="destination" scoped="" ref="0x40eb0c68"/>
        <function-ref name="setSource" scoped="" ref="0x40eb0d44"/>
        <function-ref name="setDestination" scoped="" ref="0x40eb0e20"/>
        <function-ref name="type" scoped="" ref="0x40eb0efc"/>
        <function-ref name="setType" scoped="" ref="0x40eaf010"/>
        <function-ref name="isForMe" scoped="" ref="0x40eaf0ec"/>
        <function-ref name="setGroup" scoped="" ref="0x40eaf1c8"/>
        <function-ref name="localGroup" scoped="" ref="0x40eaf2a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40e7e4bc" loc="112:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40e7e4bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e7e67c"/>
        <function-ref name="stop" scoped="" ref="0x40e7e758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0x40e80e6c" loc="109:/opt/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Routing" scoped="" ref="0x40e80e6c"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x40e7f050"/>
        <function-ref name="routeFound" scoped="" ref="0x40e7f12c"/>
        <function-ref name="nextHop" scoped="" ref="0x40e7f208"/>
        <function-ref name="noRoute" scoped="" ref="0x40e7f2e4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ea2010" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ea2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ea1a90"/>
        <function-ref name="fired" scoped="" ref="0x40ea2cf4"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ea1490"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ea1250"/>
        <function-ref name="getdt" scoped="" ref="0x40ea1f10"/>
        <function-ref name="gett0" scoped="" ref="0x40ea1cd0"/>
        <function-ref name="isRunning" scoped="" ref="0x40ea1010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ea25e4"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ea1790"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ea284c"/>
        <function-ref name="stop" scoped="" ref="0x40ea2ab4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40e9c0f4" loc="49:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e9c0f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e9c2b4"/>
        <function-ref name="getPayload" scoped="" ref="0x40e9c390"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e9c46c"/>
        <function-ref name="cancel" scoped="" ref="0x40e9c548"/>
        <function-ref name="sendDone" scoped="" ref="0x40e9c624"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e9c760" loc="50:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e9c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e9c920"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e9c9fc"/>
        <function-ref name="getPayload" scoped="" ref="0x40e9cad8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e9cbb4"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e9cc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e9cdcc" loc="51:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e9cdcc"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e9b010"/>
        <function-ref name="source" scoped="" ref="0x40e9b0ec"/>
        <function-ref name="address" scoped="" ref="0x40e9b1c8"/>
        <function-ref name="destination" scoped="" ref="0x40e9b2a4"/>
        <function-ref name="setSource" scoped="" ref="0x40e9b380"/>
        <function-ref name="setDestination" scoped="" ref="0x40e9b45c"/>
        <function-ref name="type" scoped="" ref="0x40e9b538"/>
        <function-ref name="setType" scoped="" ref="0x40e9b614"/>
        <function-ref name="isForMe" scoped="" ref="0x40e9b6f0"/>
        <function-ref name="setGroup" scoped="" ref="0x40e9b7cc"/>
        <function-ref name="localGroup" scoped="" ref="0x40e9b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40e9ba04" loc="52:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40e9ba04"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40e9bbc4"/>
        <function-ref name="noAck" scoped="" ref="0x40e9bca0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40e9bd7c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4162dd04" loc="49:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4162dd04"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4162dec4"/>
        <function-ref name="getPayload" scoped="" ref="0x41629010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416290ec"/>
        <function-ref name="cancel" scoped="" ref="0x416291c8"/>
        <function-ref name="sendDone" scoped="" ref="0x416292a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x416293e0" loc="50:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x416293e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x416295a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4162967c"/>
        <function-ref name="getPayload" scoped="" ref="0x41629758"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41629834"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41629910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41629a4c" loc="51:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41629a4c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41629c0c"/>
        <function-ref name="source" scoped="" ref="0x41629ce8"/>
        <function-ref name="address" scoped="" ref="0x41629dc4"/>
        <function-ref name="destination" scoped="" ref="0x41629ea0"/>
        <function-ref name="setSource" scoped="" ref="0x41628010"/>
        <function-ref name="setDestination" scoped="" ref="0x416280ec"/>
        <function-ref name="type" scoped="" ref="0x416281c8"/>
        <function-ref name="setType" scoped="" ref="0x416282a4"/>
        <function-ref name="isForMe" scoped="" ref="0x41628380"/>
        <function-ref name="setGroup" scoped="" ref="0x4162845c"/>
        <function-ref name="localGroup" scoped="" ref="0x41628538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41628694" loc="52:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41628694"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41628854"/>
        <function-ref name="noAck" scoped="" ref="0x41628930"/>
        <function-ref name="wasAcked" scoped="" ref="0x41628a0c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41623060" loc="44:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41623060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41623220"/>
        <function-ref name="getPayload" scoped="" ref="0x416232fc"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416233d8"/>
        <function-ref name="cancel" scoped="" ref="0x416234b4"/>
        <function-ref name="sendDone" scoped="" ref="0x41623590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x416236fc" loc="46:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x416236fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416238bc"/>
        <function-ref name="getPayload" scoped="" ref="0x41623998"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41623a74"/>
        <function-ref name="cancel" scoped="" ref="0x41623b50"/>
        <function-ref name="sendDone" scoped="" ref="0x41623c2c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41623d68" loc="47:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41623d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41623f28"/>
        <function-ref name="source" scoped="" ref="0x41622018"/>
        <function-ref name="address" scoped="" ref="0x416220f4"/>
        <function-ref name="destination" scoped="" ref="0x416221d0"/>
        <function-ref name="setSource" scoped="" ref="0x416222ac"/>
        <function-ref name="setDestination" scoped="" ref="0x41622388"/>
        <function-ref name="type" scoped="" ref="0x41622464"/>
        <function-ref name="setType" scoped="" ref="0x41622540"/>
        <function-ref name="isForMe" scoped="" ref="0x4162261c"/>
        <function-ref name="setGroup" scoped="" ref="0x416226f8"/>
        <function-ref name="localGroup" scoped="" ref="0x416227d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e99210" loc="46:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e99210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e993d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e994ac"/>
        <function-ref name="getPayload" scoped="" ref="0x40e99588"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e99664"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e99740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e9aefc" loc="45:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e9aefc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e990d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e9987c" loc="47:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e9987c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e99a3c"/>
        <function-ref name="source" scoped="" ref="0x40e99b18"/>
        <function-ref name="address" scoped="" ref="0x40e99bf4"/>
        <function-ref name="destination" scoped="" ref="0x40e99cd0"/>
        <function-ref name="setSource" scoped="" ref="0x40e99dac"/>
        <function-ref name="setDestination" scoped="" ref="0x40e99e88"/>
        <function-ref name="type" scoped="" ref="0x40e98010"/>
        <function-ref name="setType" scoped="" ref="0x40e980ec"/>
        <function-ref name="isForMe" scoped="" ref="0x40e981c8"/>
        <function-ref name="setGroup" scoped="" ref="0x40e982a4"/>
        <function-ref name="localGroup" scoped="" ref="0x40e98380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40eba070" loc="46:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="SenseAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40eba070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40eba230"/>
        <function-ref name="payloadLength" scoped="" ref="0x40eba30c"/>
        <function-ref name="getPayload" scoped="" ref="0x40eba3e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eba4c4"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40eba5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ebb9d4" loc="45:/opt/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="SenseAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ebb9d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ebbb94"/>
        <function-ref name="getPayload" scoped="" ref="0x40ebbc70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ebbd4c"/>
        <function-ref name="cancel" scoped="" ref="0x40ebbe28"/>
        <function-ref name="sendDone" scoped="" ref="0x40ebbf04"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41667304" loc="38:/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="SenseAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41667304"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x416674c4"/>
        <function-ref name="payloadLength" scoped="" ref="0x416675a0"/>
        <function-ref name="getPayload" scoped="" ref="0x4166767c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41667758"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41667834"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41669c68" loc="37:/opt/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="SenseAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41669c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41669e28"/>
        <function-ref name="getPayload" scoped="" ref="0x41669f04"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41667010"/>
        <function-ref name="cancel" scoped="" ref="0x416670ec"/>
        <function-ref name="sendDone" scoped="" ref="0x416671c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x416631e4" loc="46:/opt/tinyos/tos/lib/net/CollectionIdP.nc">
      <component-ref qname="SenseAppC.CollectionSenderC.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x416631e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x416633a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40ee40dc" loc="46:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40ee40dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ee429c"/>
        <function-ref name="stopDone" scoped="" ref="0x40ee4378"/>
        <function-ref name="start" scoped="" ref="0x40ee4454"/>
        <function-ref name="stop" scoped="" ref="0x40ee4530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40ee496c" loc="47:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40ee496c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ee4b2c"/>
        <function-ref name="getPayload" scoped="" ref="0x40ee4c08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ee4ce4"/>
        <function-ref name="cancel" scoped="" ref="0x40ee4dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x40ee4e9c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ee363c" loc="49:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ee363c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ee37fc"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ee38d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40ee39b4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ee3a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ee3b6c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ee3300" loc="48:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ee3300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ee34c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ee2ef8" loc="53:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ee2ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ee10d4"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ee11b0"/>
        <function-ref name="led1On" scoped="" ref="0x40ee128c"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ee1368"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ee1444"/>
        <function-ref name="get" scoped="" ref="0x40ee1520"/>
        <function-ref name="led1Off" scoped="" ref="0x40ee15fc"/>
        <function-ref name="led2Off" scoped="" ref="0x40ee196c"/>
        <function-ref name="set" scoped="" ref="0x40ee16d8"/>
        <function-ref name="led0On" scoped="" ref="0x40ee17b4"/>
        <function-ref name="led2On" scoped="" ref="0x40ee1890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40ee29e8" loc="51:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ee29e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ee2ba8"/>
        <function-ref name="noAck" scoped="" ref="0x40ee2c84"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ee2d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40ee3cfc" loc="50:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40ee3cfc"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ee3ebc"/>
        <function-ref name="source" scoped="" ref="0x40ee2010"/>
        <function-ref name="address" scoped="" ref="0x40ee20ec"/>
        <function-ref name="destination" scoped="" ref="0x40ee21c8"/>
        <function-ref name="setSource" scoped="" ref="0x40ee22a4"/>
        <function-ref name="setDestination" scoped="" ref="0x40ee2380"/>
        <function-ref name="type" scoped="" ref="0x40ee245c"/>
        <function-ref name="setType" scoped="" ref="0x40ee2538"/>
        <function-ref name="isForMe" scoped="" ref="0x40ee2614"/>
        <function-ref name="setGroup" scoped="" ref="0x40ee26f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40ee27cc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40f1a050" loc="54:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40f1a050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f1a210"/>
        <function-ref name="getPayload" scoped="" ref="0x40f1a2ec"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f1a3c8"/>
        <function-ref name="cancel" scoped="" ref="0x40f1a4a4"/>
        <function-ref name="sendDone" scoped="" ref="0x40f1a580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40f1a6dc" loc="55:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40f1a6dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f1a89c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40ee0d9c" loc="47:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40ee0d9c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40edf010"/>
        <function-ref name="getPayload" scoped="" ref="0x40edf0ec"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40edf1c8"/>
        <function-ref name="cancel" scoped="" ref="0x40edf2a4"/>
        <function-ref name="sendDone" scoped="" ref="0x40edf380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f1b4bc" loc="50:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f1b4bc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f1b67c"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f1b758"/>
        <function-ref name="getPayload" scoped="" ref="0x40f1b834"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f1b910"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f1b9ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40edf54c" loc="48:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40edf54c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40edf71c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40f1bb28" loc="51:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40f1bb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f1bce8"/>
        <function-ref name="noAck" scoped="" ref="0x40f1bdc4"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f1bea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40edf858" loc="49:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40edf858"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40edfa18"/>
        <function-ref name="source" scoped="" ref="0x40edfaf4"/>
        <function-ref name="address" scoped="" ref="0x40edfbd0"/>
        <function-ref name="destination" scoped="" ref="0x40edfcac"/>
        <function-ref name="setSource" scoped="" ref="0x40edfd88"/>
        <function-ref name="setDestination" scoped="" ref="0x40edfe64"/>
        <function-ref name="type" scoped="" ref="0x40f1b010"/>
        <function-ref name="setType" scoped="" ref="0x40f1b0ec"/>
        <function-ref name="isForMe" scoped="" ref="0x40f1b1c8"/>
        <function-ref name="setGroup" scoped="" ref="0x40f1b2a4"/>
        <function-ref name="localGroup" scoped="" ref="0x40f1b380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40f18c94" loc="50:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40f18c94"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f18e54"/>
        <function-ref name="stopDone" scoped="" ref="0x40f15010"/>
        <function-ref name="start" scoped="" ref="0x40f150ec"/>
        <function-ref name="stop" scoped="" ref="0x40f151c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f15bac" loc="52:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f15bac"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403f12c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f15d6c"/>
        <function-ref name="getPayload" scoped="" ref="0x40f15e48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f15f24"/>
        <function-ref name="cancel" scoped="" ref="0x40f14018"/>
        <function-ref name="sendDone" scoped="" ref="0x40f140f4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f1891c" loc="49:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f1891c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f18adc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f155e8" loc="51:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f155e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403f12c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f157a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f13630" loc="56:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f13630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f137f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f138cc"/>
        <function-ref name="led1On" scoped="" ref="0x40f139a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f13a84"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f13b60"/>
        <function-ref name="get" scoped="" ref="0x40f13c3c"/>
        <function-ref name="led1Off" scoped="" ref="0x40f13d18"/>
        <function-ref name="led2Off" scoped="" ref="0x40f110ec"/>
        <function-ref name="set" scoped="" ref="0x40f13df4"/>
        <function-ref name="led0On" scoped="" ref="0x40f13ed0"/>
        <function-ref name="led2On" scoped="" ref="0x40f11010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40f13150" loc="55:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40f13150"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403f12c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40f13310"/>
        <function-ref name="offset" scoped="" ref="0x40f133ec"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40f134c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40f34558" loc="66:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40f34558"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f34718"/>
        <function-ref name="stopDone" scoped="" ref="0x40f347f4"/>
        <function-ref name="start" scoped="" ref="0x40f348d0"/>
        <function-ref name="stop" scoped="" ref="0x40f349ac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x40f670d0" loc="332:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x40f670d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f67290"/>
        <function-ref name="runTask" scoped="" ref="0x40f6736c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40f2c334" loc="74:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40f2c334"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f2c4f4"/>
        <function-ref name="stop" scoped="" ref="0x40f2c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x40f4f010" loc="191:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x40f4f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f4f1d0"/>
        <function-ref name="runTask" scoped="" ref="0x40f4f2ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f341e0" loc="65:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f341e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f343a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x40f27268" loc="75:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x40f27268"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x40f27428"/>
        <function-ref name="flush" scoped="" ref="0x40f27504"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x40f6998c" loc="322:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x40f6998c"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f69b4c"/>
        <function-ref name="runTask" scoped="" ref="0x40f69c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x40f2ad64" loc="72:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40f2ad64"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40f2af24"/>
        <function-ref name="resetSend" scoped="" ref="0x40f2f018"/>
        <function-ref name="dataReceived" scoped="" ref="0x40f2f0f4"/>
        <function-ref name="resetReceive" scoped="" ref="0x40f2f1d0"/>
        <function-ref name="putData" scoped="" ref="0x40f2f2ac"/>
        <function-ref name="putDone" scoped="" ref="0x40f2f388"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40f2f464"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f2f5cc" loc="73:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f2f5cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f2f78c"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f2f868"/>
        <function-ref name="led1On" scoped="" ref="0x40f2f944"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f2fa20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f2fafc"/>
        <function-ref name="get" scoped="" ref="0x40f2fbd8"/>
        <function-ref name="led1Off" scoped="" ref="0x40f2fcb4"/>
        <function-ref name="led2Off" scoped="" ref="0x40f2c0ec"/>
        <function-ref name="set" scoped="" ref="0x40f2fd90"/>
        <function-ref name="led0On" scoped="" ref="0x40f2fe6c"/>
        <function-ref name="led2On" scoped="" ref="0x40f2c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x40f66c00" loc="341:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40f66c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f66dc0"/>
        <function-ref name="runTask" scoped="" ref="0x40f66e9c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x40f30d08" loc="67:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40f30d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40f30ec8"/>
        <function-ref name="nextByte" scoped="" ref="0x40f33010"/>
        <function-ref name="startSend" scoped="" ref="0x40f330ec"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40f331c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x40f2ed40" loc="68:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40f2ed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40f2ef00"/>
        <function-ref name="byteReceived" scoped="" ref="0x40f32010"/>
        <function-ref name="endPacket" scoped="" ref="0x40f320ec"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x40fd5010" loc="275:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x40fd5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fd51d0"/>
        <function-ref name="runTask" scoped="" ref="0x40fd52ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f9ed28" loc="51:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f9ed28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403f12c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f9eef8"/>
        <function-ref name="getPayload" scoped="" ref="0x40fd7010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fd70ec"/>
        <function-ref name="cancel" scoped="" ref="0x40fd71c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40fd72a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x40fd5428" loc="158:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x40fd5428"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fd55e8"/>
        <function-ref name="runTask" scoped="" ref="0x40fd56c4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f9e98c" loc="50:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f9e98c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403f12c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f9eb5c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x40fd74c0" loc="54:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x40fd74c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x403f12c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40fd7690"/>
        <function-ref name="offset" scoped="" ref="0x40fd776c"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40fd7848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40fd63e0" loc="57:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40fd63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40fd65a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40fd667c"/>
        <function-ref name="led1On" scoped="" ref="0x40fd6758"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40fd6834"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40fd6910"/>
        <function-ref name="get" scoped="" ref="0x40fd69ec"/>
        <function-ref name="led1Off" scoped="" ref="0x40fd6ac8"/>
        <function-ref name="led2On" scoped="" ref="0x40fd6e38"/>
        <function-ref name="set" scoped="" ref="0x40fd6c80"/>
        <function-ref name="led2Off" scoped="" ref="0x40fd6ba4"/>
        <function-ref name="led0On" scoped="" ref="0x40fd6d5c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x40fd7e38" loc="56:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40fd7e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40fd6010"/>
        <function-ref name="nextByte" scoped="" ref="0x40fd60ec"/>
        <function-ref name="startSend" scoped="" ref="0x40fd61c8"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40fd62a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x40fd7984" loc="55:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40fd7984"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40fd7b44"/>
        <function-ref name="byteReceived" scoped="" ref="0x40fd7c20"/>
        <function-ref name="endPacket" scoped="" ref="0x40fd7cfc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x40fc9610" loc="50:/opt/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40fc9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fc97d0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40fc98ac"/>
        <function-ref name="receive" scoped="" ref="0x40fc9988"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40fc9a64"/>
        <function-ref name="receiveDone" scoped="" ref="0x40fc9b40"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40fc9c1c"/>
        <function-ref name="sendDone" scoped="" ref="0x40fc9cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40fd4680" loc="48:/opt/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40fd4680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40fd4840"/>
        <function-ref name="resetSend" scoped="" ref="0x40fd491c"/>
        <function-ref name="dataReceived" scoped="" ref="0x40fd49f8"/>
        <function-ref name="resetReceive" scoped="" ref="0x40fd4ad4"/>
        <function-ref name="putData" scoped="" ref="0x40fd4bb0"/>
        <function-ref name="putDone" scoped="" ref="0x40fd4c8c"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40fd4d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40fc9e60" loc="51:/opt/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40fc9e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40fd0050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40fd012c"/>
        <function-ref name="led1On" scoped="" ref="0x40fd0208"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40fd02e4"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40fd03c0"/>
        <function-ref name="get" scoped="" ref="0x40fd049c"/>
        <function-ref name="led1Off" scoped="" ref="0x40fd0578"/>
        <function-ref name="led2Off" scoped="" ref="0x40fd08e8"/>
        <function-ref name="set" scoped="" ref="0x40fd0654"/>
        <function-ref name="led0On" scoped="" ref="0x40fd0730"/>
        <function-ref name="led2On" scoped="" ref="0x40fd080c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40ff17d4" loc="42:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40ff17d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ff1994"/>
        <function-ref name="receive" scoped="" ref="0x40ff1a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40fd3a44" loc="41:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40fd3a44"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fd3c04"/>
        <function-ref name="receivedByte" scoped="" ref="0x40fd3ce0"/>
        <function-ref name="receive" scoped="" ref="0x40fd3dbc"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40fd3e98"/>
        <function-ref name="receiveDone" scoped="" ref="0x40ff4010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40ff40ec"/>
        <function-ref name="sendDone" scoped="" ref="0x40ff41c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40fd35e4" loc="40:/opt/tinyos/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40fd35e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fd37a4"/>
        <function-ref name="stop" scoped="" ref="0x40fd3880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40ff05d4" loc="41:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40ff05d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ff0794"/>
        <function-ref name="receive" scoped="" ref="0x40ff0870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40ff0a34" loc="42:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40ff0a34"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ff0bf4"/>
        <function-ref name="receivedByte" scoped="" ref="0x40ff0cd0"/>
        <function-ref name="receive" scoped="" ref="0x40ff0dac"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40ff0e88"/>
        <function-ref name="receiveDone" scoped="" ref="0x40fee010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40fee0ec"/>
        <function-ref name="sendDone" scoped="" ref="0x40fee1c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40fee510" loc="43:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40fee510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40feec00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40fed0fc"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40feee5c"/>
        <function-ref name="overflow" scoped="" ref="0x40fed358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40ff0188" loc="40:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40ff0188"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ff0348"/>
        <function-ref name="stop" scoped="" ref="0x40ff0424"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40feca10" loc="50:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40feca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fecbd0"/>
        <function-ref name="receive" scoped="" ref="0x40feccac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x40feb6b4" loc="53:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x40feb6b4"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40feb874"/>
        <function-ref name="stop" scoped="" ref="0x40feb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40fec2fc" loc="48:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40fec2fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fec4bc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40fece08" loc="51:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40fece08"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40feb010"/>
        <function-ref name="receivedByte" scoped="" ref="0x40feb0ec"/>
        <function-ref name="receive" scoped="" ref="0x40feb1c8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40feb2a4"/>
        <function-ref name="receiveDone" scoped="" ref="0x40feb380"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40feb45c"/>
        <function-ref name="sendDone" scoped="" ref="0x40feb538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x41000ae0" loc="56:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41000ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ffe1ec"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ffe6a4"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ffe448"/>
        <function-ref name="overflow" scoped="" ref="0x40ffe900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x40febee4" loc="55:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x40febee4"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x410000b8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x41000194"/>
        <function-ref name="rxDone" scoped="" ref="0x41000270"/>
        <function-ref name="txDone" scoped="" ref="0x4100034c"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x41000428"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x41000504"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x410005e0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x410006bc"/>
        <function-ref name="tx" scoped="" ref="0x41000798"/>
        <function-ref name="rx" scoped="" ref="0x41000874"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40fec618" loc="49:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40fec618"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fec7d8"/>
        <function-ref name="stop" scoped="" ref="0x40fec8b4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40febacc" loc="54:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40febacc"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40febc8c"/>
        <function-ref name="stop" scoped="" ref="0x40febd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x41027810" loc="49:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x41027810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x410279d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x41027aac"/>
        <function-ref name="rxDone" scoped="" ref="0x41027b88"/>
        <function-ref name="txDone" scoped="" ref="0x41027c64"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x41027d40"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x41027e1c"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x41027ef8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x41025010"/>
        <function-ref name="tx" scoped="" ref="0x410250ec"/>
        <function-ref name="rx" scoped="" ref="0x410251c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x41025ddc" loc="53:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x41025ddc"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x41024010"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x410240ec"/>
        <function-ref name="rxDone" scoped="" ref="0x410241c8"/>
        <function-ref name="txDone" scoped="" ref="0x410242a4"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x41024380"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x4102445c"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x41024538"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x41024614"/>
        <function-ref name="tx" scoped="" ref="0x410246f0"/>
        <function-ref name="rx" scoped="" ref="0x410247cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x41027340" loc="48:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x41027340"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41027500"/>
        <function-ref name="stop" scoped="" ref="0x410275dc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x4102541c" loc="51:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x4102541c"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410255dc"/>
        <function-ref name="stop" scoped="" ref="0x410256b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x4102590c" loc="52:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x4102590c"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41025acc"/>
        <function-ref name="stop" scoped="" ref="0x41025ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x41028df4" loc="47:/opt/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x41028df4"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41027010"/>
        <function-ref name="stop" scoped="" ref="0x410270ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x41021010" loc="114:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x41021010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410211d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x41021e44" loc="117:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x41021e44"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x41020050"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x4102012c"/>
        <function-ref name="rxDone" scoped="" ref="0x41020208"/>
        <function-ref name="txDone" scoped="" ref="0x410202e4"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x410203c0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x4102049c"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x41020578"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x41020654"/>
        <function-ref name="tx" scoped="" ref="0x41020730"/>
        <function-ref name="rx" scoped="" ref="0x4102080c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x41020a10" loc="119:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x41020a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41020bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x4101f890" loc="122:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x4101f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x4101fa50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x4101fb2c"/>
        <function-ref name="rxDone" scoped="" ref="0x4101fc08"/>
        <function-ref name="txDone" scoped="" ref="0x4101fce4"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x4101fdc0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x4101fe9c"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x4101e010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x4101e0ec"/>
        <function-ref name="tx" scoped="" ref="0x4101e1c8"/>
        <function-ref name="rx" scoped="" ref="0x4101e2a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x41021954" loc="116:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x41021954"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41021b14"/>
        <function-ref name="stop" scoped="" ref="0x41021bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x41020e44" loc="120:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x41020e44"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4101f050"/>
        <function-ref name="stop" scoped="" ref="0x4101f12c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x4101f3a0" loc="121:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x4101f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4101f560"/>
        <function-ref name="stop" scoped="" ref="0x4101f63c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x4101e498" loc="124:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4101e498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4101e658"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4101e734"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4101e810"/>
        <function-ref name="actualMicro" scoped="" ref="0x4101e8ec"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4101e9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x4101eba8" loc="125:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4101eba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4101ed68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x41021444" loc="115:/opt/tinyos/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x41021444"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41021604"/>
        <function-ref name="stop" scoped="" ref="0x410216e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ff2774" loc="24:/opt/tinyos/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ff2774"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ff2e64"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4105e358"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4105e0fc"/>
        <function-ref name="overflow" scoped="" ref="0x4105e5b4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4105b0c8" loc="24:/opt/tinyos/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4105b0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TThree" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4105b7b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4105bc70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4105ba14"/>
        <function-ref name="overflow" scoped="" ref="0x4105becc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x41055a98" loc="80:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x41055a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x41055c58"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x41055d34"/>
        <function-ref name="getControlA" scoped="" ref="0x41055e10"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x41055eec"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x41054010"/>
        <function-ref name="setControlB" scoped="" ref="0x410540ec"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x410541c8"/>
        <function-ref name="getControlB" scoped="" ref="0x410542a4"/>
        <function-ref name="setControlC" scoped="" ref="0x41054380"/>
        <function-ref name="setControlA" scoped="" ref="0x4105445c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x41054780" loc="81:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x41054780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x410520fc"/>
        <function-ref name="test" scoped="" ref="0x41053c2c"/>
        <function-ref name="get" scoped="" ref="0x41054d70"/>
        <function-ref name="captured" scoped="" ref="0x41053294"/>
        <function-ref name="reset" scoped="" ref="0x41053518"/>
        <function-ref name="isOn" scoped="" ref="0x41053e88"/>
        <function-ref name="set" scoped="" ref="0x41053010"/>
        <function-ref name="start" scoped="" ref="0x41053774"/>
        <function-ref name="stop" scoped="" ref="0x410539d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x410527d0" loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x410527d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4108bc38"/>
        <function-ref name="fired" scoped="" ref="0x4108b2c8"/>
        <function-ref name="get" scoped="" ref="0x41052dc0"/>
        <function-ref name="reset" scoped="" ref="0x4108b524"/>
        <function-ref name="isOn" scoped="" ref="0x4108be94"/>
        <function-ref name="set" scoped="" ref="0x4108b044"/>
        <function-ref name="start" scoped="" ref="0x4108b780"/>
        <function-ref name="stop" scoped="" ref="0x4108b9dc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4105a92c" loc="79:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4105a92c"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4105526c"/>
        <function-ref name="test" scoped="" ref="0x41057d84"/>
        <function-ref name="get" scoped="" ref="0x4105af1c"/>
        <function-ref name="setScale" scoped="" ref="0x410554c8"/>
        <function-ref name="getScale" scoped="" ref="0x4105574c"/>
        <function-ref name="reset" scoped="" ref="0x41057670"/>
        <function-ref name="overflow" scoped="" ref="0x41057414"/>
        <function-ref name="isOn" scoped="" ref="0x41055010"/>
        <function-ref name="set" scoped="" ref="0x41057190"/>
        <function-ref name="start" scoped="" ref="0x410578cc"/>
        <function-ref name="stop" scoped="" ref="0x41057b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x41085cf4" loc="80:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x41085cf4"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x41085eb4"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x41084010"/>
        <function-ref name="getControlA" scoped="" ref="0x410840ec"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x410841c8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x410842a4"/>
        <function-ref name="setControlB" scoped="" ref="0x41084380"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4108445c"/>
        <function-ref name="getControlB" scoped="" ref="0x41084538"/>
        <function-ref name="setControlC" scoped="" ref="0x41084614"/>
        <function-ref name="setControlA" scoped="" ref="0x410846f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x410827b4" loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x410827b4"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41080c38"/>
        <function-ref name="fired" scoped="" ref="0x410802c8"/>
        <function-ref name="get" scoped="" ref="0x41082da4"/>
        <function-ref name="reset" scoped="" ref="0x41080524"/>
        <function-ref name="isOn" scoped="" ref="0x41080e94"/>
        <function-ref name="set" scoped="" ref="0x41080044"/>
        <function-ref name="start" scoped="" ref="0x41080780"/>
        <function-ref name="stop" scoped="" ref="0x410809dc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x41084a14" loc="81:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x41084a14"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x41082394"/>
        <function-ref name="test" scoped="" ref="0x41083ebc"/>
        <function-ref name="get" scoped="" ref="0x41083044"/>
        <function-ref name="captured" scoped="" ref="0x41083524"/>
        <function-ref name="reset" scoped="" ref="0x410837a8"/>
        <function-ref name="isOn" scoped="" ref="0x41082138"/>
        <function-ref name="set" scoped="" ref="0x410832a0"/>
        <function-ref name="start" scoped="" ref="0x41083a04"/>
        <function-ref name="stop" scoped="" ref="0x41083c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x4107f2b4" loc="83:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x4107f2b4"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4107e724"/>
        <function-ref name="fired" scoped="" ref="0x4107fd84"/>
        <function-ref name="get" scoped="" ref="0x4107f8a4"/>
        <function-ref name="reset" scoped="" ref="0x4107e010"/>
        <function-ref name="isOn" scoped="" ref="0x4107e980"/>
        <function-ref name="set" scoped="" ref="0x4107fb00"/>
        <function-ref name="start" scoped="" ref="0x4107e26c"/>
        <function-ref name="stop" scoped="" ref="0x4107e4c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x4107ed78" loc="84:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x4107ed78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4107b26c"/>
        <function-ref name="fired" scoped="" ref="0x4107c88c"/>
        <function-ref name="get" scoped="" ref="0x4107c3ac"/>
        <function-ref name="reset" scoped="" ref="0x4107cae8"/>
        <function-ref name="isOn" scoped="" ref="0x4107b4c8"/>
        <function-ref name="set" scoped="" ref="0x4107c608"/>
        <function-ref name="start" scoped="" ref="0x4107cd44"/>
        <function-ref name="stop" scoped="" ref="0x4107b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4108aad8" loc="79:/opt/tinyos/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4108aad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x410854c8"/>
        <function-ref name="test" scoped="" ref="0x41085010"/>
        <function-ref name="get" scoped="" ref="0x410870e8"/>
        <function-ref name="setScale" scoped="" ref="0x41085724"/>
        <function-ref name="getScale" scoped="" ref="0x410859a8"/>
        <function-ref name="reset" scoped="" ref="0x41087824"/>
        <function-ref name="overflow" scoped="" ref="0x410875c8"/>
        <function-ref name="isOn" scoped="" ref="0x4108526c"/>
        <function-ref name="set" scoped="" ref="0x41087344"/>
        <function-ref name="start" scoped="" ref="0x41087a80"/>
        <function-ref name="stop" scoped="" ref="0x41087cdc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410b3010" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410b3010"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4030ef18"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4030ef18"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410b31d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x410b33d4" loc="47:/opt/tinyos/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x410b33d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x410b2ce4"/>
        <function-ref name="test" scoped="" ref="0x410b282c"/>
        <function-ref name="get" scoped="" ref="0x410b39c4"/>
        <function-ref name="setScale" scoped="" ref="0x410b0010"/>
        <function-ref name="getScale" scoped="" ref="0x410b0294"/>
        <function-ref name="reset" scoped="" ref="0x410b2118"/>
        <function-ref name="overflow" scoped="" ref="0x410b3ea4"/>
        <function-ref name="isOn" scoped="" ref="0x410b2a88"/>
        <function-ref name="set" scoped="" ref="0x410b3c20"/>
        <function-ref name="start" scoped="" ref="0x410b2374"/>
        <function-ref name="stop" scoped="" ref="0x410b25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x410b5414" loc="45:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x410b5414"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TThree" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410b5b04"/>
        <function-ref name="clearOverflow" scoped="" ref="0x410af010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x410b5d60"/>
        <function-ref name="overflow" scoped="" ref="0x410af26c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x410af538" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x410af538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x410ade6c"/>
        <function-ref name="test" scoped="" ref="0x410ad9b4"/>
        <function-ref name="get" scoped="" ref="0x410afb28"/>
        <function-ref name="setScale" scoped="" ref="0x410ac0fc"/>
        <function-ref name="getScale" scoped="" ref="0x410ac380"/>
        <function-ref name="reset" scoped="" ref="0x410ad2a0"/>
        <function-ref name="overflow" scoped="" ref="0x410ad044"/>
        <function-ref name="isOn" scoped="" ref="0x410adc10"/>
        <function-ref name="set" scoped="" ref="0x410afd84"/>
        <function-ref name="start" scoped="" ref="0x410ad4fc"/>
        <function-ref name="stop" scoped="" ref="0x410ad758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x410e50b8" loc="63:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x410e50b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TThree" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410e57a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x410e5c60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x410e5a04"/>
        <function-ref name="overflow" scoped="" ref="0x410e5ebc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4105cf10" loc="62:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4105cf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403618bc"/>
            <typename><typedef-ref name="TMicro" ref="0x40361c78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410e6624"/>
        <function-ref name="clearOverflow" scoped="" ref="0x410e6adc"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x410e6880"/>
        <function-ref name="overflow" scoped="" ref="0x410e6d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x410e01fc" loc="47:/opt/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x410e01fc"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x410e03bc"/>
        <function-ref name="offset" scoped="" ref="0x410e0498"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x410e0574"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x410d9b08" loc="49:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="SenseAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x410d9b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410d9cc8"/>
        <function-ref name="getPayload" scoped="" ref="0x410d9da4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410d9e80"/>
        <function-ref name="cancel" scoped="" ref="0x410ca010"/>
        <function-ref name="sendDone" scoped="" ref="0x410ca0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x410ca228" loc="50:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="SenseAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x410ca228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410ca3e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x410ca4c4"/>
        <function-ref name="getPayload" scoped="" ref="0x410ca5a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410ca67c"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410ca758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x410ca894" loc="51:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="SenseAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410ca894"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410caa54"/>
        <function-ref name="source" scoped="" ref="0x410cab30"/>
        <function-ref name="address" scoped="" ref="0x410cac0c"/>
        <function-ref name="destination" scoped="" ref="0x410cace8"/>
        <function-ref name="setSource" scoped="" ref="0x410cadc4"/>
        <function-ref name="setDestination" scoped="" ref="0x410caea0"/>
        <function-ref name="type" scoped="" ref="0x410c9010"/>
        <function-ref name="setType" scoped="" ref="0x410c90ec"/>
        <function-ref name="isForMe" scoped="" ref="0x410c91c8"/>
        <function-ref name="setGroup" scoped="" ref="0x410c92a4"/>
        <function-ref name="localGroup" scoped="" ref="0x410c9380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x410c94dc" loc="52:/opt/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="SenseAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x410c94dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x410c969c"/>
        <function-ref name="noAck" scoped="" ref="0x410c9778"/>
        <function-ref name="wasAcked" scoped="" ref="0x410c9854"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x416ae0c4" loc="44:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SenseAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x416ae0c4"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416ae284"/>
        <function-ref name="getPayload" scoped="" ref="0x416ae360"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416ae43c"/>
        <function-ref name="cancel" scoped="" ref="0x416ae518"/>
        <function-ref name="sendDone" scoped="" ref="0x416ae5f4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x416ae760" loc="46:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SenseAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x416ae760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416ae920"/>
        <function-ref name="getPayload" scoped="" ref="0x416ae9fc"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416aead8"/>
        <function-ref name="cancel" scoped="" ref="0x416aebb4"/>
        <function-ref name="sendDone" scoped="" ref="0x416aec90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x416aedcc" loc="47:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="SenseAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416aedcc"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416ad010"/>
        <function-ref name="source" scoped="" ref="0x416ad0ec"/>
        <function-ref name="address" scoped="" ref="0x416ad1c8"/>
        <function-ref name="destination" scoped="" ref="0x416ad2a4"/>
        <function-ref name="setSource" scoped="" ref="0x416ad380"/>
        <function-ref name="setDestination" scoped="" ref="0x416ad45c"/>
        <function-ref name="type" scoped="" ref="0x416ad538"/>
        <function-ref name="setType" scoped="" ref="0x416ad614"/>
        <function-ref name="isForMe" scoped="" ref="0x416ad6f0"/>
        <function-ref name="setGroup" scoped="" ref="0x416ad7cc"/>
        <function-ref name="localGroup" scoped="" ref="0x416ad8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x410d1328" loc="44:/opt/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x410d1328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410d14e8"/>
        <function-ref name="getPayload" scoped="" ref="0x410d15c4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410d16a0"/>
        <function-ref name="cancel" scoped="" ref="0x410d177c"/>
        <function-ref name="sendDone" scoped="" ref="0x410d1858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x410cf100" loc="48:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x410cf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410cf2d0"/>
        <function-ref name="getPayload" scoped="" ref="0x410cf3ac"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410cf488"/>
        <function-ref name="cancel" scoped="" ref="0x410cf564"/>
        <function-ref name="sendDone" scoped="" ref="0x410cf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x410d0984" loc="46:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x410d0984"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410d0b54"/>
        <function-ref name="getPayload" scoped="" ref="0x410d0c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410d0d0c"/>
        <function-ref name="cancel" scoped="" ref="0x410d0de8"/>
        <function-ref name="sendDone" scoped="" ref="0x410d0ec4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x410ce3e0" loc="50:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x410ce3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410ce5a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x410ce67c"/>
        <function-ref name="getPayload" scoped="" ref="0x410ce758"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410ce834"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410ce910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x410cea8c" loc="169:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x410cea8c"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410cec4c"/>
        <function-ref name="runTask" scoped="" ref="0x410ced28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x410ceea4" loc="126:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x410ceea4"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410cd078"/>
        <function-ref name="runTask" scoped="" ref="0x410cd154"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x410cf77c" loc="49:/opt/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410cf77c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410cf93c"/>
        <function-ref name="source" scoped="" ref="0x410cfa18"/>
        <function-ref name="address" scoped="" ref="0x410cfaf4"/>
        <function-ref name="destination" scoped="" ref="0x410cfbd0"/>
        <function-ref name="setSource" scoped="" ref="0x410cfcac"/>
        <function-ref name="setDestination" scoped="" ref="0x410cfd88"/>
        <function-ref name="type" scoped="" ref="0x410cfe64"/>
        <function-ref name="setType" scoped="" ref="0x410ce010"/>
        <function-ref name="isForMe" scoped="" ref="0x410ce0ec"/>
        <function-ref name="setGroup" scoped="" ref="0x410ce1c8"/>
        <function-ref name="localGroup" scoped="" ref="0x410ce2a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41104b68" loc="42:/opt/tinyos/tos/system/PoolC.nc">
      <component-ref qname="SenseAppC.UARTMessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41104b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
            <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41102c00"/>
        <function-ref name="maxSize" scoped="" ref="0x41102650"/>
        <function-ref name="empty" scoped="" ref="0x411021d0"/>
        <function-ref name="put" scoped="" ref="0x41102890"/>
        <function-ref name="size" scoped="" ref="0x41102410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x416dc570" loc="56:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="SenseAppC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x416dc570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
            <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x416db5c0"/>
        <function-ref name="maxSize" scoped="" ref="0x416db010"/>
        <function-ref name="empty" scoped="" ref="0x416dcb44"/>
        <function-ref name="put" scoped="" ref="0x416db250"/>
        <function-ref name="size" scoped="" ref="0x416dcd84"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x416dc1ec" loc="55:/opt/tinyos/tos/system/PoolP.nc">
      <component-ref qname="SenseAppC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x416dc1ec"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x416dc3ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x41101dc4" loc="43:/opt/tinyos/tos/system/QueueC.nc">
      <component-ref qname="SenseAppC.UARTQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41101dc4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
              <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x41100a6c"/>
        <function-ref name="enqueue" scoped="" ref="0x410fe124"/>
        <function-ref name="element" scoped="" ref="0x410fe458"/>
        <function-ref name="maxSize" scoped="" ref="0x4110082c"/>
        <function-ref name="dequeue" scoped="" ref="0x41100db8"/>
        <function-ref name="empty" scoped="" ref="0x411003ac"/>
        <function-ref name="size" scoped="" ref="0x411005ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x410f899c" loc="47:/opt/tinyos/tos/lib/net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x410f899c"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410f8b5c"/>
        <function-ref name="stop" scoped="" ref="0x410f8c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x410f326c" loc="52:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x410f326c"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x410f342c"/>
        <function-ref name="incrementCounter" scoped="" ref="0x410f3508"/>
        <function-ref name="reset" scoped="" ref="0x410f35e4"/>
        <function-ref name="start" scoped="" ref="0x410f36c0"/>
        <function-ref name="stop" scoped="" ref="0x410f379c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x410f4028" loc="51:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x410f4028"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x410f42c4"/>
        <function-ref name="stop" scoped="" ref="0x410f4634"/>
        <function-ref name="newData" scoped="" ref="0x410f43a0"/>
        <function-ref name="start" scoped="" ref="0x410f447c"/>
        <function-ref name="requestSeqno" scoped="" ref="0x410f4558"/>
        <function-ref name="requestData" scoped="" ref="0x410f41e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x410f74f0" loc="48:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x410f74f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410f76b0"/>
        <function-ref name="stop" scoped="" ref="0x410f778c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x410f3cec" loc="53:/opt/tinyos/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x410f3cec"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410f3eac"/>
        <function-ref name="stop" scoped="" ref="0x410ed010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x410e8b5c" loc="57:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeReceive" scoped="" ref="0x410e8b5c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410e8d1c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x410e840c" loc="56:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeAMSend" scoped="" ref="0x410e840c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410e85cc"/>
        <function-ref name="getPayload" scoped="" ref="0x410e86a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410e8784"/>
        <function-ref name="cancel" scoped="" ref="0x410e8860"/>
        <function-ref name="sendDone" scoped="" ref="0x410e893c"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x410e9978" loc="53:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x410e9978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410e9b38"/>
        <function-ref name="getPayload" scoped="" ref="0x410e9c14"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410e9cf0"/>
        <function-ref name="cancel" scoped="" ref="0x410e9dcc"/>
        <function-ref name="sendDone" scoped="" ref="0x410e9ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x410eaaa8" loc="50:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x410eaaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x410eac68"/>
        <function-ref name="incrementCounter" scoped="" ref="0x410ead44"/>
        <function-ref name="reset" scoped="" ref="0x410eae20"/>
        <function-ref name="start" scoped="" ref="0x410eaefc"/>
        <function-ref name="stop" scoped="" ref="0x410e9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x410ea010" loc="49:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x410ea010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x410ea2ac"/>
        <function-ref name="stop" scoped="" ref="0x410ea61c"/>
        <function-ref name="newData" scoped="" ref="0x410ea388"/>
        <function-ref name="start" scoped="" ref="0x410ea464"/>
        <function-ref name="requestSeqno" scoped="" ref="0x410ea540"/>
        <function-ref name="requestData" scoped="" ref="0x410ea1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x410e8040" loc="54:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x410e8040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410e8200"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x410e8e84" loc="59:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x410e8e84"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x410e706c"/>
        <function-ref name="led0Toggle" scoped="" ref="0x410e7148"/>
        <function-ref name="led1On" scoped="" ref="0x410e7224"/>
        <function-ref name="led1Toggle" scoped="" ref="0x410e7300"/>
        <function-ref name="led2Toggle" scoped="" ref="0x410e73dc"/>
        <function-ref name="get" scoped="" ref="0x410e74b8"/>
        <function-ref name="led1Off" scoped="" ref="0x410e7594"/>
        <function-ref name="led2Off" scoped="" ref="0x410e7904"/>
        <function-ref name="set" scoped="" ref="0x410e7670"/>
        <function-ref name="led0On" scoped="" ref="0x410e774c"/>
        <function-ref name="led2On" scoped="" ref="0x410e7828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x410ed860" loc="46:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x410ed860"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410eda20"/>
        <function-ref name="stop" scoped="" ref="0x410edafc"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x410e9560" loc="51:/opt/tinyos/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x410e9560"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410e9720"/>
        <function-ref name="stop" scoped="" ref="0x410e97fc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41139010" loc="49:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41139010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411391d0"/>
        <function-ref name="getPayload" scoped="" ref="0x411392ac"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41139388"/>
        <function-ref name="cancel" scoped="" ref="0x41139464"/>
        <function-ref name="sendDone" scoped="" ref="0x41139540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4113967c" loc="50:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4113967c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4113983c"/>
        <function-ref name="payloadLength" scoped="" ref="0x41139918"/>
        <function-ref name="getPayload" scoped="" ref="0x411399f4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41139ad0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41139bac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41139ce8" loc="51:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41139ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41139ea8"/>
        <function-ref name="source" scoped="" ref="0x41138010"/>
        <function-ref name="address" scoped="" ref="0x411380ec"/>
        <function-ref name="destination" scoped="" ref="0x411381c8"/>
        <function-ref name="setSource" scoped="" ref="0x411382a4"/>
        <function-ref name="setDestination" scoped="" ref="0x41138380"/>
        <function-ref name="type" scoped="" ref="0x4113845c"/>
        <function-ref name="setType" scoped="" ref="0x41138538"/>
        <function-ref name="isForMe" scoped="" ref="0x41138614"/>
        <function-ref name="setGroup" scoped="" ref="0x411386f0"/>
        <function-ref name="localGroup" scoped="" ref="0x411387cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41138928" loc="52:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41138928"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41138ae8"/>
        <function-ref name="noAck" scoped="" ref="0x41138bc4"/>
        <function-ref name="wasAcked" scoped="" ref="0x41138ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x416ca398" loc="49:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x416ca398"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416ca558"/>
        <function-ref name="getPayload" scoped="" ref="0x416ca634"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416ca710"/>
        <function-ref name="cancel" scoped="" ref="0x416ca7ec"/>
        <function-ref name="sendDone" scoped="" ref="0x416ca8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x416caa04" loc="50:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x416caa04"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x416cabc4"/>
        <function-ref name="payloadLength" scoped="" ref="0x416caca0"/>
        <function-ref name="getPayload" scoped="" ref="0x416cad7c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416cae58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x416c9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x416c914c" loc="51:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416c914c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416c930c"/>
        <function-ref name="source" scoped="" ref="0x416c93e8"/>
        <function-ref name="address" scoped="" ref="0x416c94c4"/>
        <function-ref name="destination" scoped="" ref="0x416c95a0"/>
        <function-ref name="setSource" scoped="" ref="0x416c967c"/>
        <function-ref name="setDestination" scoped="" ref="0x416c9758"/>
        <function-ref name="type" scoped="" ref="0x416c9834"/>
        <function-ref name="setType" scoped="" ref="0x416c9910"/>
        <function-ref name="isForMe" scoped="" ref="0x416c99ec"/>
        <function-ref name="setGroup" scoped="" ref="0x416c9ac8"/>
        <function-ref name="localGroup" scoped="" ref="0x416c9ba4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x416c9d00" loc="52:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x416c9d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x416c9ec0"/>
        <function-ref name="noAck" scoped="" ref="0x416c8010"/>
        <function-ref name="wasAcked" scoped="" ref="0x416c80ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x416c6a80" loc="44:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x416c6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416c6c40"/>
        <function-ref name="getPayload" scoped="" ref="0x416c6d1c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416c6df8"/>
        <function-ref name="cancel" scoped="" ref="0x416c6ed4"/>
        <function-ref name="sendDone" scoped="" ref="0x41717010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4171717c" loc="46:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4171717c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4171733c"/>
        <function-ref name="getPayload" scoped="" ref="0x41717418"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417174f4"/>
        <function-ref name="cancel" scoped="" ref="0x417175d0"/>
        <function-ref name="sendDone" scoped="" ref="0x417176ac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x417177e8" loc="47:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x417177e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x417179a8"/>
        <function-ref name="source" scoped="" ref="0x41717a84"/>
        <function-ref name="address" scoped="" ref="0x41717b60"/>
        <function-ref name="destination" scoped="" ref="0x41717c3c"/>
        <function-ref name="setSource" scoped="" ref="0x41717d18"/>
        <function-ref name="setDestination" scoped="" ref="0x41717df4"/>
        <function-ref name="type" scoped="" ref="0x41717ed0"/>
        <function-ref name="setType" scoped="" ref="0x41716010"/>
        <function-ref name="isForMe" scoped="" ref="0x417160ec"/>
        <function-ref name="setGroup" scoped="" ref="0x417161c8"/>
        <function-ref name="localGroup" scoped="" ref="0x417162a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4113654c" loc="46:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4113654c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4113670c"/>
        <function-ref name="payloadLength" scoped="" ref="0x411367e8"/>
        <function-ref name="getPayload" scoped="" ref="0x411368c4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411369a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41136a7c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41136250" loc="45:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41136250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41136410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41136bb8" loc="47:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41136bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41136d78"/>
        <function-ref name="source" scoped="" ref="0x41136e54"/>
        <function-ref name="address" scoped="" ref="0x41134010"/>
        <function-ref name="destination" scoped="" ref="0x411340ec"/>
        <function-ref name="setSource" scoped="" ref="0x411341c8"/>
        <function-ref name="setDestination" scoped="" ref="0x411342a4"/>
        <function-ref name="type" scoped="" ref="0x41134380"/>
        <function-ref name="setType" scoped="" ref="0x4113445c"/>
        <function-ref name="isForMe" scoped="" ref="0x41134538"/>
        <function-ref name="setGroup" scoped="" ref="0x41134614"/>
        <function-ref name="localGroup" scoped="" ref="0x411346f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41133b68" loc="49:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41133b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41133d28"/>
        <function-ref name="getPayload" scoped="" ref="0x41133e04"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41133ee0"/>
        <function-ref name="cancel" scoped="" ref="0x41132010"/>
        <function-ref name="sendDone" scoped="" ref="0x411320ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41132228" loc="50:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41132228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411323e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x411324c4"/>
        <function-ref name="getPayload" scoped="" ref="0x411325a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4113267c"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41132758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41132894" loc="51:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41132894"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41132a54"/>
        <function-ref name="source" scoped="" ref="0x41132b30"/>
        <function-ref name="address" scoped="" ref="0x41132c0c"/>
        <function-ref name="destination" scoped="" ref="0x41132ce8"/>
        <function-ref name="setSource" scoped="" ref="0x41132dc4"/>
        <function-ref name="setDestination" scoped="" ref="0x41132ea0"/>
        <function-ref name="type" scoped="" ref="0x41131010"/>
        <function-ref name="setType" scoped="" ref="0x411310ec"/>
        <function-ref name="isForMe" scoped="" ref="0x411311c8"/>
        <function-ref name="setGroup" scoped="" ref="0x411312a4"/>
        <function-ref name="localGroup" scoped="" ref="0x41131380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x411314dc" loc="52:/opt/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x411314dc"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4113169c"/>
        <function-ref name="noAck" scoped="" ref="0x41131778"/>
        <function-ref name="wasAcked" scoped="" ref="0x41131854"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41709628" loc="49:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41709628"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417097e8"/>
        <function-ref name="getPayload" scoped="" ref="0x417098c4"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417099a0"/>
        <function-ref name="cancel" scoped="" ref="0x41709a7c"/>
        <function-ref name="sendDone" scoped="" ref="0x41709b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41709c94" loc="50:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41709c94"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41709e54"/>
        <function-ref name="payloadLength" scoped="" ref="0x41708010"/>
        <function-ref name="getPayload" scoped="" ref="0x417080ec"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417081c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x417082a4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x417083e0" loc="51:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x417083e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x417085a0"/>
        <function-ref name="source" scoped="" ref="0x4170867c"/>
        <function-ref name="address" scoped="" ref="0x41708758"/>
        <function-ref name="destination" scoped="" ref="0x41708834"/>
        <function-ref name="setSource" scoped="" ref="0x41708910"/>
        <function-ref name="setDestination" scoped="" ref="0x417089ec"/>
        <function-ref name="type" scoped="" ref="0x41708ac8"/>
        <function-ref name="setType" scoped="" ref="0x41708ba4"/>
        <function-ref name="isForMe" scoped="" ref="0x41708c80"/>
        <function-ref name="setGroup" scoped="" ref="0x41708d5c"/>
        <function-ref name="localGroup" scoped="" ref="0x41708e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41707010" loc="52:/opt/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41707010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x417071d0"/>
        <function-ref name="noAck" scoped="" ref="0x417072ac"/>
        <function-ref name="wasAcked" scoped="" ref="0x41707388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41705d28" loc="44:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41705d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41705ee8"/>
        <function-ref name="getPayload" scoped="" ref="0x41701010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417010ec"/>
        <function-ref name="cancel" scoped="" ref="0x417011c8"/>
        <function-ref name="sendDone" scoped="" ref="0x417012a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41701410" loc="46:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41701410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417015d0"/>
        <function-ref name="getPayload" scoped="" ref="0x417016ac"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41701788"/>
        <function-ref name="cancel" scoped="" ref="0x41701864"/>
        <function-ref name="sendDone" scoped="" ref="0x41701940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41701a7c" loc="47:/opt/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41701a7c"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41701c3c"/>
        <function-ref name="source" scoped="" ref="0x41701d18"/>
        <function-ref name="address" scoped="" ref="0x41701df4"/>
        <function-ref name="destination" scoped="" ref="0x41701ed0"/>
        <function-ref name="setSource" scoped="" ref="0x41700010"/>
        <function-ref name="setDestination" scoped="" ref="0x417000ec"/>
        <function-ref name="type" scoped="" ref="0x417001c8"/>
        <function-ref name="setType" scoped="" ref="0x417002a4"/>
        <function-ref name="isForMe" scoped="" ref="0x41700380"/>
        <function-ref name="setGroup" scoped="" ref="0x4170045c"/>
        <function-ref name="localGroup" scoped="" ref="0x41700538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4112f1f4" loc="46:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4112f1f4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4112f3b4"/>
        <function-ref name="payloadLength" scoped="" ref="0x4112f490"/>
        <function-ref name="getPayload" scoped="" ref="0x4112f56c"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4112f648"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4112f724"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41130ec8" loc="45:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41130ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4112f0b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4112f860" loc="47:/opt/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4112f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4112fa20"/>
        <function-ref name="source" scoped="" ref="0x4112fafc"/>
        <function-ref name="address" scoped="" ref="0x4112fbd8"/>
        <function-ref name="destination" scoped="" ref="0x4112fcb4"/>
        <function-ref name="setSource" scoped="" ref="0x4112fd90"/>
        <function-ref name="setDestination" scoped="" ref="0x4112fe6c"/>
        <function-ref name="type" scoped="" ref="0x4112e010"/>
        <function-ref name="setType" scoped="" ref="0x4112e0ec"/>
        <function-ref name="isForMe" scoped="" ref="0x4112e1c8"/>
        <function-ref name="setGroup" scoped="" ref="0x4112e2a4"/>
        <function-ref name="localGroup" scoped="" ref="0x4112e380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4112d384" loc="46:/opt/tinyos/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4112d384"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4112d544"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4112d6cc" loc="47:/opt/tinyos/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4112d6cc"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4112d88c"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4112d968"/>
        <function-ref name="led1On" scoped="" ref="0x4112da44"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4112db20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4112dbfc"/>
        <function-ref name="get" scoped="" ref="0x4112dcd8"/>
        <function-ref name="led1Off" scoped="" ref="0x4112ddb4"/>
        <function-ref name="led2Off" scoped="" ref="0x4112a1c8"/>
        <function-ref name="set" scoped="" ref="0x4112de90"/>
        <function-ref name="led0On" scoped="" ref="0x4112a010"/>
        <function-ref name="led2On" scoped="" ref="0x4112a0ec"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x411ab400" loc="51:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="SenseAppC.ChangerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x411ab400"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="changesensor" ref="0x403ade74"/>
            <typename><typedef-ref name="changesensor_t" ref="0x403b33c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x411ab9d4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x4112c65c" loc="50:/opt/tinyos/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="SenseAppC.ChangerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x4112c65c"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="changesensor" ref="0x403ade74"/>
            <typename><typedef-ref name="changesensor_t" ref="0x403b33c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x411ab154"/>
        <function-ref name="get" scoped="" ref="0x4112cc4c"/>
        <function-ref name="set" scoped="" ref="0x4112cea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x416f0a24" loc="62:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="SenseAppC.ChangerC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x416f0a24"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x416f0be4"/>
        <function-ref name="runTask" scoped="" ref="0x416f0cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x416f26d4" loc="50:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="SenseAppC.ChangerC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x416f26d4"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x416f2970"/>
        <function-ref name="storeData" scoped="" ref="0x416f2ce0"/>
        <function-ref name="newData" scoped="" ref="0x416f2a4c"/>
        <function-ref name="start" scoped="" ref="0x416f2b28"/>
        <function-ref name="requestSeqno" scoped="" ref="0x416f2c04"/>
        <function-ref name="stop" scoped="" ref="0x416f2894"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x416f3d88" loc="49:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="SenseAppC.ChangerC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x416f3d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="changesensor" ref="0x403ade74"/>
            <typename><typedef-ref name="changesensor_t" ref="0x403b33c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x416f2390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x416f2e3c" loc="52:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="SenseAppC.ChangerC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x416f2e3c"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x416f0010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x416f00ec"/>
        <function-ref name="led1On" scoped="" ref="0x416f01c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x416f02a4"/>
        <function-ref name="led2Toggle" scoped="" ref="0x416f0380"/>
        <function-ref name="get" scoped="" ref="0x416f045c"/>
        <function-ref name="led1Off" scoped="" ref="0x416f0538"/>
        <function-ref name="led0On" scoped="" ref="0x416f08a8"/>
        <function-ref name="set" scoped="" ref="0x416f06f0"/>
        <function-ref name="led2On" scoped="" ref="0x416f0614"/>
        <function-ref name="led2Off" scoped="" ref="0x416f07cc"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x416f3010" loc="48:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="SenseAppC.ChangerC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x416f3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><nx_struct-ref name="changesensor" ref="0x403ade74"/>
            <typename><typedef-ref name="changesensor_t" ref="0x403b33c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x416f3adc"/>
        <function-ref name="get" scoped="" ref="0x416f3600"/>
        <function-ref name="set" scoped="" ref="0x416f385c"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x416f5b18" loc="46:/opt/tinyos/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="SenseAppC.ChangerC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x416f5b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x416f5cd8"/>
        <function-ref name="stop" scoped="" ref="0x416f5db4"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x41181634" loc="45:/opt/tinyos/tos/lib/net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x41181634"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411817f4"/>
        <function-ref name="incrementCounter" scoped="" ref="0x411818d0"/>
        <function-ref name="reset" scoped="" ref="0x411819ac"/>
        <function-ref name="start" scoped="" ref="0x41181a88"/>
        <function-ref name="stop" scoped="" ref="0x41181b64"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x411ad904" loc="55:/opt/tinyos/tos/lib/net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x411ad904"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411adad4"/>
        <function-ref name="incrementCounter" scoped="" ref="0x411adbb0"/>
        <function-ref name="reset" scoped="" ref="0x411adc8c"/>
        <function-ref name="start" scoped="" ref="0x411add68"/>
        <function-ref name="stop" scoped="" ref="0x411ade44"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x41736cb4" loc="62:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pending" scoped="" ref="0x41736cb4"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41736e74"/>
        <function-ref name="clear" scoped="" ref="0x41734010"/>
        <function-ref name="toggle" scoped="" ref="0x417340ec"/>
        <function-ref name="get" scoped="" ref="0x417341c8"/>
        <function-ref name="assign" scoped="" ref="0x417342a4"/>
        <function-ref name="setAll" scoped="" ref="0x41734380"/>
        <function-ref name="set" scoped="" ref="0x4173445c"/>
        <function-ref name="size" scoped="" ref="0x41734538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x41734694" loc="63:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Changed" scoped="" ref="0x41734694"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41734854"/>
        <function-ref name="clear" scoped="" ref="0x41734930"/>
        <function-ref name="toggle" scoped="" ref="0x41734a0c"/>
        <function-ref name="get" scoped="" ref="0x41734ae8"/>
        <function-ref name="assign" scoped="" ref="0x41734bc4"/>
        <function-ref name="setAll" scoped="" ref="0x41734ca0"/>
        <function-ref name="set" scoped="" ref="0x41734d7c"/>
        <function-ref name="size" scoped="" ref="0x41734e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x41733010" loc="64:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x41733010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x417331d0"/>
        <function-ref name="rand32" scoped="" ref="0x417332ac"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x41738470" loc="58:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x41738470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41738640"/>
        <function-ref name="incrementCounter" scoped="" ref="0x4173871c"/>
        <function-ref name="reset" scoped="" ref="0x417387f8"/>
        <function-ref name="start" scoped="" ref="0x417388d4"/>
        <function-ref name="stop" scoped="" ref="0x417389b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x417380e4" loc="57:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x417380e4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x417382a4"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x41732010" loc="154:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTask" scoped="" ref="0x41732010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x417321d0"/>
        <function-ref name="runTask" scoped="" ref="0x417322ac"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x417333e8" loc="65:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x417333e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x417335a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41733684"/>
        <function-ref name="led1On" scoped="" ref="0x41733760"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4173383c"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41733918"/>
        <function-ref name="get" scoped="" ref="0x417339f4"/>
        <function-ref name="led1Off" scoped="" ref="0x41733ad0"/>
        <function-ref name="led0On" scoped="" ref="0x41733e40"/>
        <function-ref name="set" scoped="" ref="0x41733c88"/>
        <function-ref name="led2On" scoped="" ref="0x41733bac"/>
        <function-ref name="led2Off" scoped="" ref="0x41733d64"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41738ba4" loc="61:/opt/tinyos/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41738ba4"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41736610"/>
        <function-ref name="fired" scoped="" ref="0x417378e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41736010"/>
        <function-ref name="isOneShot" scoped="" ref="0x41737d60"/>
        <function-ref name="getdt" scoped="" ref="0x41736a90"/>
        <function-ref name="gett0" scoped="" ref="0x41736850"/>
        <function-ref name="isRunning" scoped="" ref="0x41737b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x417371d0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41736310"/>
        <function-ref name="startOneShot" scoped="" ref="0x41737438"/>
        <function-ref name="stop" scoped="" ref="0x417376a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x417317a0" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x417317a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4036107c"/>
            <typename><typedef-ref name="TMilli" ref="0x40361238"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4172f190"/>
        <function-ref name="fired" scoped="" ref="0x417304b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41730b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x41730938"/>
        <function-ref name="getdt" scoped="" ref="0x4172f610"/>
        <function-ref name="gett0" scoped="" ref="0x4172f3d0"/>
        <function-ref name="isRunning" scoped="" ref="0x417306f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41731d74"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41730e78"/>
        <function-ref name="startOneShot" scoped="" ref="0x41730010"/>
        <function-ref name="stop" scoped="" ref="0x41730278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4172d240" loc="46:/opt/tinyos/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4172d240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4172d400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x4172d55c" loc="47:/opt/tinyos/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x4172d55c"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x4172d71c"/>
        <function-ref name="clear" scoped="" ref="0x4172d7f8"/>
        <function-ref name="toggle" scoped="" ref="0x4172d8d4"/>
        <function-ref name="get" scoped="" ref="0x4172d9b0"/>
        <function-ref name="assign" scoped="" ref="0x4172da8c"/>
        <function-ref name="setAll" scoped="" ref="0x4172db68"/>
        <function-ref name="set" scoped="" ref="0x4172dc44"/>
        <function-ref name="size" scoped="" ref="0x4172dd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4172c950" loc="46:/opt/tinyos/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4172c950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4172cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x4172cc6c" loc="47:/opt/tinyos/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x4172cc6c"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x4172ce2c"/>
        <function-ref name="clear" scoped="" ref="0x4172cf08"/>
        <function-ref name="toggle" scoped="" ref="0x4172b010"/>
        <function-ref name="get" scoped="" ref="0x4172b0ec"/>
        <function-ref name="assign" scoped="" ref="0x4172b1c8"/>
        <function-ref name="setAll" scoped="" ref="0x4172b2a4"/>
        <function-ref name="set" scoped="" ref="0x4172b380"/>
        <function-ref name="size" scoped="" ref="0x4172b45c"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="RootControl" loc="40:/opt/tinyos/tos/lib/net/RootControl.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x40403230" loc="43:/opt/tinyos/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x403b7aa8" loc="41:/opt/tinyos/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x403b7e70" loc="42:/opt/tinyos/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x40405bb0" loc="50:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40405870" loc="50:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x40405a58" loc="50:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x403fd1bc" loc="44:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403ffe30" loc="44:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x403fd064" loc="44:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x403fde88" loc="47:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x403ff160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403fdb14" loc="47:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x403fdd30" loc="47:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x403ff160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x403ffa64" loc="43:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403ff914" loc="43:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40405454" loc="49:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40405304" loc="49:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x403fd75c" loc="46:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x403ff160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403fd60c" loc="46:/opt/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403b6010" loc="60:/opt/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x403b5700" loc="113:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x403b55b0" loc="113:/opt/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x403bc3fc" loc="138:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x403bc2ac" loc="138:/opt/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x403b6db8" loc="104:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x403b5bdc" loc="130:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="48:/opt/tinyos/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="33:/opt/tinyos/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x4041984c" loc="48:/opt/tinyos/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4041984c"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x4041f010" loc="60:/opt/tinyos/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="49:/opt/tinyos/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4041984c"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40419e44" loc="60:/opt/tinyos/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4041984c"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40425368" loc="49:/opt/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40425368"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x404257d4" loc="55:/opt/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x4042c010" loc="63:/opt/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40425368"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40425c24" loc="63:/opt/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40425de4" loc="63:/opt/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40425368"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x4032c010" loc="67:/opt/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x4032c4f8" loc="75:/opt/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos/tos/interfaces/Send.nc">
      <function command="" provided="0" name="send" ref="0x403f3c10" loc="75:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403f38e4" loc="75:/opt/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403f3ab8" loc="75:/opt/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x403fa884" loc="125:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403fa53c" loc="125:/opt/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403fa710" loc="125:/opt/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x403fa010" loc="112:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x403fcae0" loc="89:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403fc990" loc="89:/opt/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x403f9718" loc="100:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403f93d8" loc="100:/opt/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x403f95c0" loc="100:/opt/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/tinyos/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x4040c410" loc="50:/opt/tinyos/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4040c410"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40412010" loc="97:/opt/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4040c410"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x4041329c" loc="80:/opt/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x4040c868" loc="61:/opt/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x40413864" loc="89:/opt/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4040c410"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40413714" loc="89:/opt/tinyos/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4040c410"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x4040cd44" loc="72:/opt/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x403b8c40" loc="95:/opt/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x403ba0ec" loc="105:/opt/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40402364" loc="80:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40403e0c" loc="80:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40402030" loc="80:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40402204" loc="80:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40408ddc" loc="135:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40408a94" loc="135:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40408c68" loc="135:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40408568" loc="123:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4040a010" loc="96:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40402e58" loc="96:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4040ac8c" loc="110:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4040a94c" loc="110:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4040ab34" loc="110:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x403f83b4" loc="78:/opt/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
              <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40401e5c" loc="78:/opt/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x403f8064" loc="78:/opt/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403f8238" loc="78:/opt/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x4041de34" loc="61:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x4041c258" loc="67:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x4041c6a0" loc="72:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x4041cea0" loc="83:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40424b38" loc="100:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40423010" loc="117:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x4041ca90" loc="77:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40423718" loc="134:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x404235c8" loc="134:/opt/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x4041da44" loc="56:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40424338" loc="89:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40424728" loc="94:/opt/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x403bb650" loc="43:/opt/tinyos/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403bb650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x4040f780" loc="73:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403bb650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x4040d5a4" loc="90:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403bb650"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x4040d454" loc="90:/opt/tinyos/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403bb650"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x4003563c"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x4003563c"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x4040de34" loc="101:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403bb650"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x4040dce4" loc="101:/opt/tinyos/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x4040f384" loc="65:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x4040fdc8" loc="81:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x403bb650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x403bbaa8" loc="50:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x403bbebc" loc="58:/opt/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="44:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
      <documentation loc="33:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x404113ac" loc="44:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404113ac"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x404182b0" loc="69:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
        <documentation loc="66:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40411808" loc="55:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
        <documentation loc="46:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404113ac"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40411e04" loc="64:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
        <documentation loc="57:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404113ac"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x40411cb4" loc="64:/opt/tinyos/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404113ac"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40417bdc" loc="53:/opt/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40417bdc"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4042712c" loc="136:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x404200bc" loc="83:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40428168" loc="114:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40420e18" loc="114:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40428010" loc="114:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x404209a0" loc="98:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40427a30" loc="151:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40427538" loc="144:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40420514" loc="92:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40421208" loc="64:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404210b8" loc="64:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40428b0c" loc="129:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404287dc" loc="129:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404289b4" loc="129:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40421868" loc="73:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40421718" loc="73:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40421d04" loc="78:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4045b6b8" loc="62:/opt/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x4045f010" loc="60:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x40460de0" loc="60:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x404616c4" loc="31:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x40461cb8" loc="39:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40461b68" loc="39:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x40460354" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40460204" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x40460878" loc="53:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x4046b7e4" loc="44:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4046bb98" loc="45:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4046b0bc" loc="42:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4046a3d0" loc="47:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4046b448" loc="43:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4046a010" loc="46:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4046e9c0" loc="40:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4046ed20" loc="41:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x400319f4" loc="57:/opt/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x403252bc" loc="72:/opt/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40031e04" loc="65:/opt/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x4038eb0c" loc="76:/opt/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403a4f04" loc="62:/opt/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4034db4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403a09d4" loc="52:/opt/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40572aac" loc="53:/opt/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40572aac"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4057e010" loc="61:/opt/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405843c0" loc="57:/opt/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405843c0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4058451c" loc="57:/opt/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4058451c"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x405849bc" loc="64:/opt/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4058451c"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x405833a0" loc="76:/opt/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40584ea4" loc="71:/opt/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4058376c" loc="82:/opt/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4057a3ac" loc="56:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4057a3ac"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4057a508" loc="56:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4057a508"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40578698" loc="109:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4057a508"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40579438" loc="78:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x4057808c" loc="103:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4057a508"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4057a508"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40579d40" loc="103:/opt/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4057a508"/></type-var>
          </variable>
          <variable name="dt" ref="0x40579f20" loc="103:/opt/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4057a508"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40579868" loc="88:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40578ae8" loc="116:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4057a508"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4057aae8" loc="66:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4057a508"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4057a998" loc="66:/opt/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4057a508"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40579010" loc="73:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40599b70" loc="89:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x405991b0" loc="85:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x40593e6c" loc="79:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40599734" loc="86:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x405995e4" loc="86:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x4059ad4c" loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4059abfc" loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40598160" loc="90:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40598010" loc="90:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x4059a2c4" loc="80:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x4059a808" loc="81:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x4059a6b8" loc="81:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x405af288" loc="92:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x405a006c" loc="68:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x405a0460" loc="74:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x405a090c" loc="80:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x405af70c" loc="98:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x405a0db8" loc="86:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x4059b5fc" loc="57:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037837c"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40378598"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x4059bbb0" loc="63:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037837c"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40378598"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x4059ba60" loc="63:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4037837c"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40378598"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x405a7120" loc="41:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a7120"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x405a5e7c" loc="74:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405a7f1c" loc="58:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405a75d0" loc="48:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a7120"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405a5300" loc="62:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405a42bc" loc="80:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405a7b18" loc="54:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a7120"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x405a79c8" loc="54:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a7120"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405a56d0" loc="65:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405a5a90" loc="68:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x405923e4" loc="55:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405923e4"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x4059f9b4" loc="98:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4059f194" loc="87:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40592890" loc="61:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405923e4"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x4059ff08" loc="104:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x4059fdb8" loc="104:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x4059e378" loc="110:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405915d8" loc="75:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x405911f0" loc="70:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4059f5c0" loc="93:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40592dcc" loc="67:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405923e4"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40592c7c" loc="67:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405923e4"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405919a8" loc="78:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40591d68" loc="81:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="59:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0x40699160" loc="61:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40699010" loc="61:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0x40696010" loc="73:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40698834" loc="73:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40698a14" loc="73:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0x40698c1c" loc="73:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0x40698e10" loc="73:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0x406998cc" loc="64:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40699594" loc="64:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0x40699774" loc="64:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0x40696bb0" loc="79:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40696438" loc="79:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x40696640" loc="79:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0x40696848" loc="79:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0x40696a48" loc="79:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0x40698420" loc="67:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40699ce0" loc="67:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x40699ecc" loc="67:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x406980cc" loc="67:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x406982b8" loc="67:/opt/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos/tos/interfaces/Intercept.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x40677010" loc="31:/opt/tinyos/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4067aadc" loc="31:/opt/tinyos/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x4067acac" loc="31:/opt/tinyos/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4067ae80" loc="31:/opt/tinyos/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4067972c" loc="65:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406795dc" loc="65:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40675160" loc="78:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40675010" loc="78:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40686184" loc="126:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40687e04" loc="126:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40686010" loc="126:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4068784c" loc="106:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40675d50" loc="94:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40675a24" loc="94:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40675bf8" loc="94:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="44:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0x4068b918" loc="96:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4068b7c8" loc="96:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0x4068c12c" loc="83:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="80:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
          <long> &#10; Tell the routing engine it might want to recompute its routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x4068b368" loc="95:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0x4068d6e8" loc="71:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="66:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x4068d160" loc="64:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="55:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the ETX for the current path to the root through the current&#10; parent.</short>
          <long>&#10; Get the ETX for the current path to the root through the current&#10; parent. Sets etx argument to ETX*10.  The pointer is allocated by&#10; the caller.  If the parent is invalid, return FAIL (no info).&#10; The caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to&#10; 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0x4068d010" loc="64:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0x4068dc0c" loc="78:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="73:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0x4068c91c" loc="88:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="85:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4068c5d0" loc="88:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0x4068c7c4" loc="88:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x40689458" loc="98:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40689308" loc="98:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x40685a50" loc="53:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="46:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x40685900" loc="53:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0x4068bed0" loc="97:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4068bd80" loc="97:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0x4068cee4" loc="93:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="90:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4068cd94" loc="93:/opt/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:/opt/tinyos/tos/lib/net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0x40684778" loc="7:/opt/tinyos/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0x40684cf0" loc="14:/opt/tinyos/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0x40684ba0" loc="14:/opt/tinyos/tos/lib/net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
      <documentation loc="33:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-11-28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x4067e644" loc="64:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4067e304" loc="64:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x4067e4ec" loc="64:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0x406823cc" loc="52:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066b5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40682064" loc="52:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40682274" loc="52:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066b5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x40681c4c" loc="58:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40681914" loc="58:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x40681af4" loc="58:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x4067f908" loc="61:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4067f5bc" loc="61:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4067f7b0" loc="61:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x40683c38" loc="49:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066b5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406838b0" loc="49:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x40683ae0" loc="49:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066b5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x40681564" loc="57:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40681414" loc="57:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x4067f1f0" loc="60:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4067f0a0" loc="60:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40691334" loc="67:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40691010" loc="67:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x406911dc" loc="67:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x406834c0" loc="46:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066b5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40683138" loc="46:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x40683368" loc="46:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066b5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0x4068f290" loc="70:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x40691f24" loc="70:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x4068f138" loc="70:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0x40682914" loc="54:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406827c4" loc="54:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x4067febc" loc="63:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4067fd6c" loc="63:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0x40691b20" loc="69:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x406917cc" loc="69:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x406919c8" loc="69:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x4067eb94" loc="66:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4067ea44" loc="66:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0x40681010" loc="55:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40682cc4" loc="55:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0x40682e98" loc="55:/opt/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:/opt/tinyos/tos/lib/net/CollectionId.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0x4068ee80" loc="46:/opt/tinyos/tos/lib/net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x403ff160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="46:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="txAck" ref="0x4069f5e8" loc="62:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x4069f498" loc="62:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0x406a0a94" loc="55:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x406a0944" loc="55:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x4069fb60" loc="66:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x4069fa10" loc="66:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0x406a04f4" loc="52:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x406a03a4" loc="52:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x4069e690" loc="72:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x4069e540" loc="72:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0x4069e160" loc="69:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x4069e010" loc="69:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0x4069f084" loc="58:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x406a0ef8" loc="58:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x406a4f0c" loc="49:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x406a4dbc" loc="49:/opt/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x406a9834" loc="59:/opt/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x406a94d8" loc="59:/opt/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x406a96dc" loc="59:/opt/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x406c0af4" loc="65:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c0774" loc="65:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x406c099c" loc="65:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x406bd560" loc="71:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bd410" loc="71:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x406c02d0" loc="57:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x406a8bfc" loc="52:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x406a8aac" loc="52:/opt/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x406c3330" loc="59:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c31e0" loc="59:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x406c3dc4" loc="71:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c3c74" loc="71:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x406c28ec" loc="85:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c279c" loc="85:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x406bb38c" loc="65:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bb23c" loc="65:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x406b08d4" loc="46:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b0554" loc="46:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x406b077c" loc="46:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x406bca90" loc="59:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bc940" loc="59:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x406bc45c" loc="53:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bc0dc" loc="53:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x406bc304" loc="53:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x406bbc44" loc="71:/opt/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bbaf4" loc="71:/opt/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x406b36cc" loc="177:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403e5988"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406b357c" loc="177:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x406a6294" loc="88:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406a6144" loc="88:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x406a7254" loc="68:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x406a78a8" loc="78:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406a7758" loc="78:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x406b8b5c" loc="121:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406b8810" loc="121:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406b8a04" loc="121:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x406a6e04" loc="103:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406a6ab8" loc="103:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406a6cac" loc="103:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x406b7180" loc="147:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406b7030" loc="147:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x406b7c40" loc="162:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406b7928" loc="162:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x406b7ae8" loc="162:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403e5740"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x406b66a4" loc="136:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406b6554" loc="136:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x406b435c" loc="187:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e5988"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406b4010" loc="187:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x406b4204" loc="187:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e5988"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x406b4b7c" loc="195:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403e5988"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x406cd3c8" loc="48:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x406cce64" loc="42:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x406ccd14" loc="42:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x406cd894" loc="53:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x406c128c" loc="35:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406c128c"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x406c13e8" loc="35:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406c13e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x406c852c" loc="63:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406c13e8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c83dc" loc="63:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x406ca010" loc="70:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c8e0c" loc="70:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x406c1a1c" loc="49:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406c18cc" loc="49:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406caa54" loc="78:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406c13e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406ca700" loc="78:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x406ca8fc" loc="78:/opt/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406c13e8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x406d0634" loc="35:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x406d0634"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x406e2860" loc="51:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406e2710" loc="51:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406e2288" loc="46:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x406d0634"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406e2138" loc="46:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x406d0c54" loc="40:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406d0b04" loc="40:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406e0010" loc="57:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x406d0634"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406e2c54" loc="57:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x406e2e5c" loc="57:/opt/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x406d0634"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x406db36c" loc="47:/opt/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406db21c" loc="47:/opt/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x406f48c8" loc="120:/opt/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x406f4010" loc="97:/opt/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x406e5974" loc="88:/opt/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x406f4490" loc="102:/opt/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x406f2010" loc="128:/opt/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x406f1e4c" loc="41:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x403e140c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f1cfc" loc="41:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x406f12ec" loc="37:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x403e140c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x406f18b4" loc="39:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x403e140c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f1764" loc="39:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x406f0da8" loc="45:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403e140c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f0a20" loc="45:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406f0c50" loc="45:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403e140c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x406f0654" loc="43:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403e140c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f02cc" loc="43:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406f04fc" loc="43:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403e140c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x406ef868" loc="49:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x403e1188"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406ef718" loc="49:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x40703010" loc="51:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x403e1188"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406efc18" loc="51:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x406efe3c" loc="51:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x403e1188"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x406ef2f0" loc="47:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406ef1a0" loc="47:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40703420" loc="53:/opt/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x403e1188"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x406e6dc4" loc="67:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403e140c"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x406e688c" loc="67:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x403e140c"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x406e6a90" loc="67:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406e6c64" loc="67:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x406f605c" loc="122:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f7d00" loc="122:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406f7ed4" loc="122:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x406f77d4" loc="110:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x406f883c" loc="83:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f86ec" loc="83:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x406f7210" loc="97:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f8e8c" loc="97:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x406f70b8" loc="97:/opt/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x40718660" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x40713180" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40713030" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x407208e8" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403e5988"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40720798" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x4071f5fc" loc="63:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071f4ac" loc="63:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40722c00" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40722ab0" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40707ed4" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40707d84" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x4072035c" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40720010" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40720204" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40722670" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40722324" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40722518" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4071f05c" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e5988"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40720cd8" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40720ecc" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e5988"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x40710f1c" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x4070f504" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x407249e4" loc="65:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40724894" loc="65:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x4070fb74" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4070fa24" loc="54:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x40724288" loc="60:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40724138" loc="60:/opt/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x40737a98" loc="60:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x407372a8" loc="50:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x403dae4c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x40737158" loc="50:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x403dae4c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x407376b8" loc="55:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x4071ebdc" loc="45:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x40737f20" loc="65:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x403dae4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x40733eb0" loc="70:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40733d60" loc="70:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x407355b4" loc="49:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40735464" loc="49:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40733294" loc="59:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40735dbc" loc="54:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40735a70" loc="54:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40735c64" loc="54:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x40736ea4" loc="43:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40736d54" loc="43:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x407338d8" loc="65:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40733788" loc="65:/opt/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x4070bb08" loc="46:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x4070b63c" loc="40:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4070b4ec" loc="40:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x407081d0" loc="52:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40708080" loc="52:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x407086e0" loc="59:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x40708dcc" loc="65:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40708c7c" loc="65:/opt/tinyos/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x4071444c" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407142fc" loc="41:/opt/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x40719e0c" loc="86:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x40719984" loc="80:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40719628" loc="80:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4071982c" loc="80:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40705b08" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407059b8" loc="55:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x407041b4" loc="62:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40704064" loc="62:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x40704a8c" loc="69:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40704730" loc="69:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40704934" loc="69:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x4070acac" loc="43:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x407054f0" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407051e0" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40705398" loc="49:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40719180" loc="75:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40719030" loc="75:/opt/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x4072a9b8" loc="131:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072a868" loc="131:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x4072bc10" loc="120:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072bac0" loc="120:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x4071cda4" loc="57:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071ca6c" loc="57:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x4071cc4c" loc="57:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x4072f160" loc="75:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072f010" loc="75:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x40727c60" loc="156:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072791c" loc="156:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40727b08" loc="156:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x4071aa60" loc="69:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071a910" loc="69:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x4072a3ec" loc="125:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072a0c0" loc="125:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x4072a294" loc="125:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x4072e05c" loc="88:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4072fcd4" loc="88:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4072fed8" loc="88:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x407274dc" loc="151:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072738c" loc="151:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x4071a3fc" loc="63:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071a2ac" loc="63:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x4072c010" loc="99:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072ee2c" loc="99:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x4072e90c" loc="94:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4072e5b0" loc="94:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4072e7b4" loc="94:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x40725300" loc="178:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x403e140c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40726288" loc="162:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40726138" loc="162:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40726dfc" loc="173:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x403e1188"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x40728ee4" loc="146:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40728ba0" loc="146:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40728d8c" loc="146:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x4072f7d0" loc="81:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072f680" loc="81:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x4072b644" loc="115:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072b30c" loc="115:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x4072b4ec" loc="115:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x40728168" loc="136:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072ae1c" loc="136:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x40728010" loc="136:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40725898" loc="185:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40725748" loc="185:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x4072c7c8" loc="105:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072c4b8" loc="105:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4072c670" loc="105:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x4071c5f0" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071c4a0" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x4072694c" loc="168:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407267fc" loc="168:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x40728754" loc="141:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40728604" loc="141:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x4072ce30" loc="110:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072cce0" loc="110:/opt/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x40715010" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40716bf8" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x40716dec" loc="52:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x40715470" loc="58:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40716160" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40716010" loc="42:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x40716764" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40716614" loc="47:/opt/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x40712520" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407123d0" loc="46:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x40713e78" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40713d28" loc="40:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x407129dc" loc="51:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x40710084" loc="57:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40712f04" loc="57:/opt/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x4077d0bc" loc="59:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x4077d65c" loc="72:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x4077dc6c" loc="79:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x40768cbc" loc="48:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x40792b40" loc="46:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407929f0" loc="46:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4078fb30" loc="64:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4078f9e0" loc="64:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4078f478" loc="54:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4078f138" loc="54:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4078f320" loc="54:/opt/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40791a68" loc="42:/opt/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
              <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407918fc" loc="42:/opt/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x4079a010" loc="50:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x4079a810" loc="60:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x4079a448" loc="55:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403e5988"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x4079db04" loc="45:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e5988"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x4079d7b8" loc="45:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403e5988"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x4079d9ac" loc="45:/opt/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40803a28" loc="53:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x407ff010" loc="61:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x407fda28" loc="65:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x407fd598" loc="59:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x407fe1f0" loc="90:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x407fe6b8" loc="98:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40810160" loc="79:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40802c4c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40810010" loc="79:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40802c4c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x407fbe6c" loc="53:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40812500" loc="62:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40802c4c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x408123b0" loc="62:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40802c4c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40812a7c" loc="70:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40802c4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x408ca63c" loc="53:/opt/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
              <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ca4d0" loc="53:/opt/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x408cdd5c" loc="46:/opt/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cdc0c" loc="46:/opt/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x408db160" loc="57:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x408db010" loc="57:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x408db5a8" loc="62:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x408c5720" loc="46:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x408c55d0" loc="46:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x408c5c34" loc="51:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x408c5ae4" loc="51:/opt/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x408df160" loc="57:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x408df010" loc="57:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x408dfdd4" loc="71:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x408dfc84" loc="71:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x408df7f8" loc="62:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x408df6a8" loc="62:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x408dd584" loc="80:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x408dd434" loc="80:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x408c6a3c" loc="49:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x408c68ec" loc="49:/opt/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x409230ec" loc="44:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x40923abc" loc="56:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40922160" loc="63:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40922010" loc="63:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x40922598" loc="69:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x409235fc" loc="50:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40922aa0" loc="74:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x40925aa0" loc="48:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40925950" loc="48:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x4091f6ec" loc="63:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4091f208" loc="56:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4091f0b8" loc="56:/opt/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x4095a928" loc="52:/opt/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x4095a4b8" loc="46:/opt/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x4097e090" loc="53:/opt/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4097e090"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x4097e690" loc="64:/opt/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4097e090"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x4097e540" loc="64:/opt/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4097e090"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x4098a480" loc="55:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4098a330" loc="55:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4098b210" loc="40:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4098b0c0" loc="40:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x4098b988" loc="45:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4098b664" loc="45:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x4098b830" loc="45:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4098bf08" loc="50:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4098bdb8" loc="50:/opt/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x409ae500" loc="52:/opt/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x409ae3b0" loc="52:/opt/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x409b1e48" loc="44:/opt/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a30438" loc="59:/opt/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a30438"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40a30594" loc="59:/opt/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a30594"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40a30b5c" loc="66:/opt/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a30594"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40a30a0c" loc="66:/opt/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a30594"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x40a37c98" loc="54:/opt/tinyos/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40a315e8" loc="66:/opt/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40a311d4" loc="61:/opt/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40a31084" loc="61:/opt/tinyos/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x40a377c4" loc="53:/opt/tinyos/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x40a36368" loc="62:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a36218" loc="62:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x40a36ed8" loc="74:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a36d88" loc="74:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x40a36840" loc="68:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40a3453c" loc="81:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a343ec" loc="81:/opt/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40ac6290" loc="40:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ac6290"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x40ac2b64" loc="88:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x40ac2a14" loc="88:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40ac21f0" loc="76:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40ac6740" loc="47:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ac6290"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40ac3258" loc="60:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ac6290"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40ac3108" loc="60:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ac6290"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40ac3660" loc="64:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40ac2614" loc="82:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40ac6c78" loc="53:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ac6290"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40ac6b28" loc="53:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ac6290"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40ac3a30" loc="67:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40ac3df0" loc="70:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40ad73a4" loc="70:/opt/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40adae48" loc="70:/opt/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40ad7064" loc="70:/opt/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ad7244" loc="70:/opt/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40ad6924" loc="82:/opt/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40ad61e0" loc="82:/opt/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40ad63e4" loc="82:/opt/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ad65c4" loc="82:/opt/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40ad67bc" loc="83:/opt/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40adb9d0" loc="45:/opt/tinyos/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40adb880" loc="45:/opt/tinyos/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x40aee010" loc="86:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40ae9420" loc="126:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40aeb678" loc="117:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40ae99c8" loc="128:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40ae9878" loc="128:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40aefbac" loc="83:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40aea560" loc="122:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40aea410" loc="122:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40aed930" loc="113:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40aed7e0" loc="113:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40aee82c" loc="97:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40ae69a0" loc="141:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40ae6850" loc="141:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40aedd54" loc="114:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40ae8314" loc="131:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40ae81c4" loc="131:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40ae8b34" loc="136:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40ae9010" loc="125:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40aeae2c" loc="125:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40ae644c" loc="140:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40aebbc8" loc="119:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40aeba78" loc="119:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40aeed84" loc="103:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40aeec34" loc="103:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40aeb290" loc="116:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40aeb140" loc="116:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40aea9dc" loc="123:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40ae9db8" loc="129:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40ae86f0" loc="132:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40ae6010" loc="138:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40aea010" loc="120:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40aee400" loc="89:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40aed328" loc="109:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40aed1d8" loc="109:/opt/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40b25574" loc="95:/opt/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b25a24" loc="105:/opt/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x40b3e524" loc="81:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40b62990" loc="87:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x40b41cc0" loc="79:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40b61370" loc="91:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40b62f14" loc="88:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40b62dc4" loc="88:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40b62010" loc="83:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b3ee5c" loc="83:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40b618fc" loc="92:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40b617ac" loc="92:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40b3e12c" loc="80:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x40b62554" loc="84:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b62404" loc="84:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x40b3ea68" loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b3e918" loc="82:/opt/tinyos/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/opt/tinyos/tos/interfaces/Cache.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40c5cc70" loc="44:/opt/tinyos/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c5cc70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x40c58200" loc="51:/opt/tinyos/tos/interfaces/Cache.nc">
        <documentation loc="45:/opt/tinyos/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c5cc70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x40c580b0" loc="51:/opt/tinyos/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c5cc70"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40c58bc4" loc="65:/opt/tinyos/tos/interfaces/Cache.nc">
        <documentation loc="61:/opt/tinyos/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x40c587a8" loc="59:/opt/tinyos/tos/interfaces/Cache.nc">
        <documentation loc="53:/opt/tinyos/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c5cc70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x40c58658" loc="59:/opt/tinyos/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40c5cc70"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:/opt/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0x40c3ab04" loc="49:/opt/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0x40c3ae90" loc="51:/opt/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x40c3a654" loc="48:/opt/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
        <documentation loc="43:/opt/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0x40c36238" loc="52:/opt/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="47:/opt/tinyos/tos/lib/net/ctp/CompareBit.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0x40d4ae88" loc="51:/opt/tinyos/tos/lib/net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d4a6f8" loc="51:/opt/tinyos/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40d4ab54" loc="51:/opt/tinyos/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d4ad28" loc="51:/opt/tinyos/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2009-09-21 02:19:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0x40e01d90" loc="51:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e01c40" loc="51:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x40dffd60" loc="57:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40dffa28" loc="57:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x40dffc08" loc="57:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x40e016a0" loc="48:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066b5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e01338" loc="48:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40e01548" loc="48:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066b5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x40dff4d4" loc="56:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40dff384" loc="56:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x40e03d98" loc="47:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066b5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e03a30" loc="47:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40e03c40" loc="47:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066b5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0x40e00d90" loc="54:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e00a44" loc="54:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40e00c38" loc="54:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x40e004d4" loc="53:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403e5bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e00384" loc="53:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0x40e034c0" loc="46:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066b5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e03158" loc="46:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40e03368" loc="46:/opt/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x4066b5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x40f10b84" loc="31:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f10808" loc="31:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40f10a2c" loc="31:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x40f1494c" loc="15:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x40f10230" loc="23:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f14e70" loc="23:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403f471c"/>
                <typename><typedef-ref name="message_t" ref="0x403f3484"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x40f100d8" loc="23:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x40f270bc" loc="54:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40f2cca0" loc="49:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x40f32a38" loc="56:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x40f2b658" loc="72:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x40f2a6a0" loc="94:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40f2a550" loc="94:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x40f2bb4c" loc="79:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x40f2b160" loc="65:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40f2b010" loc="65:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x40f2ab78" loc="100:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x40f2a088" loc="85:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x40f31d28" loc="71:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x40f302e0" loc="81:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x40f31754" loc="62:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x40f31604" loc="62:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x40f309d8" loc="91:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f30888" loc="91:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x40f33b20" loc="62:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x40f2e30c" loc="69:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40f2e1bc" loc="69:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x40f2e96c" loc="80:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40f2e81c" loc="80:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40fd17fc" loc="48:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40fd14c4" loc="48:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40fd16a4" loc="48:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40fcca34" loc="79:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40fcc8e4" loc="79:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40fcb218" loc="90:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40fcceb4" loc="90:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40fcb0c0" loc="90:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40fcdef8" loc="65:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40fc9020" loc="99:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40fcbae4" loc="99:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40fcbcc4" loc="99:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40fcbeac" loc="99:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40fcc464" loc="72:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40fcd604" loc="57:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40fcd0dc" loc="57:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40fcd2bc" loc="57:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40fcd4a4" loc="57:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40ff4a04" loc="46:/opt/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40ff48b4" loc="46:/opt/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40ff1288" loc="56:/opt/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40ff4efc" loc="56:/opt/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40ff1130" loc="56:/opt/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x40fe54b4" loc="44:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40fe8cbc" loc="42:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x40fe3984" loc="49:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40fe3834" loc="49:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x40fe30ec" loc="47:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40fe84ac" loc="40:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40fe88b8" loc="41:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x40fe50ec" loc="43:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x40fe587c" loc="45:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x40fe5d4c" loc="46:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40fe5bfc" loc="46:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x40fe348c" loc="48:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="57:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x410eeda8" loc="90:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
        <documentation loc="87:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x410ee9e0" loc="85:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
        <documentation loc="82:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x410ee568" loc="80:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
        <documentation loc="76:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x410f4cb8" loc="68:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x410ee194" loc="74:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
        <documentation loc="70:/opt/tinyos/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x410f2914" loc="47:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x410f27a8" loc="47:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x410f0468" loc="48:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x410f2f00" loc="48:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x410f0114" loc="48:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40038824"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x410f0308" loc="48:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x410f0bc8" loc="50:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x410f2038" loc="45:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x410f085c" loc="49:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4003a4b4"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x410f23d0" loc="46:/opt/tinyos/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40328b60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="40:/opt/tinyos/tos/interfaces/BitVector.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x41170018" loc="45:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="42:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x4116f488" loc="69:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="65:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x4116f338" loc="69:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4116fa08" loc="75:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="71:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x4116f8b8" loc="75:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x41170960" loc="57:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x41170810" loc="57:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x4116e188" loc="82:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="77:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x4116fe40" loc="82:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x4116e030" loc="82:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4030e0f4"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x411703ec" loc="50:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
          <long>&#10; Set all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x41170ed8" loc="63:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="59:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x41170d88" loc="63:/opt/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x4116e5d0" loc="88:/opt/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="84:/opt/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40038e54"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
